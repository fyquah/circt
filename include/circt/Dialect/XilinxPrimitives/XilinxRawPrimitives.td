def AND2B1L : XilinxPrimitiveOp<"AND2B1L", []> {
  let summary = "AND2B1L Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$DI,
    I<1>:$SRI,

    // AND2B1L parameters follows
    APIntAttr<I<1>>:$IS_SRI_INVERTED
  );

  let results = (outs
    I<1>:$O
  );
}

def AUTOBUF : XilinxPrimitiveOp<"AUTOBUF", []> {
  let summary = "AUTOBUF Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,

    // AUTOBUF parameters follows
    StrAttr:$BUFFER_TYPE,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O
  );
}

def BIBUF : XilinxPrimitiveOp<"BIBUF", []> {
  let summary = "BIBUF Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    InOut<1>:$IO,
    InOut<1>:$PAD

    // BIBUF does not contain any parameters
  );

  let results = (outs
  );
}

def BITSLICEuCONTROL : XilinxPrimitiveOp<"BITSLICE_CONTROL", []> {
  let summary = "BITSLICE_CONTROL Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLK_FROM_EXT,
    I<1>:$EN_VTC,
    I<1>:$NCLK_NIBBLE_IN,
    I<1>:$PCLK_NIBBLE_IN,
    I<4>:$PHY_RDCS0,
    I<4>:$PHY_RDCS1,
    I<4>:$PHY_RDEN,
    I<4>:$PHY_WRCS0,
    I<4>:$PHY_WRCS1,
    I<1>:$PLL_CLK,
    I<1>:$REFCLK,
    I<6>:$RIU_ADDR,
    I<1>:$RIU_CLK,
    I<1>:$RIU_NIBBLE_SEL,
    I<16>:$RIU_WR_DATA,
    I<1>:$RIU_WR_EN,
    I<1>:$RST,
    I<40>:$RX_BIT_CTRL_IN0,
    I<40>:$RX_BIT_CTRL_IN1,
    I<40>:$RX_BIT_CTRL_IN2,
    I<40>:$RX_BIT_CTRL_IN3,
    I<40>:$RX_BIT_CTRL_IN4,
    I<40>:$RX_BIT_CTRL_IN5,
    I<40>:$RX_BIT_CTRL_IN6,
    I<4>:$TBYTE_IN,
    I<40>:$TX_BIT_CTRL_IN0,
    I<40>:$TX_BIT_CTRL_IN1,
    I<40>:$TX_BIT_CTRL_IN2,
    I<40>:$TX_BIT_CTRL_IN3,
    I<40>:$TX_BIT_CTRL_IN4,
    I<40>:$TX_BIT_CTRL_IN5,
    I<40>:$TX_BIT_CTRL_IN6,
    I<40>:$TX_BIT_CTRL_IN_TRI,

    // BITSLICE_CONTROL parameters follows
    StrAttr:$CTRL_CLK,
    StrAttr:$DIV_MODE,
    StrAttr:$EN_CLK_TO_EXT_NORTH,
    StrAttr:$EN_CLK_TO_EXT_SOUTH,
    StrAttr:$EN_DYN_ODLY_MODE,
    StrAttr:$EN_OTHER_NCLK,
    StrAttr:$EN_OTHER_PCLK,
    StrAttr:$IDLY_VT_TRACK,
    StrAttr:$INV_RXCLK,
    StrAttr:$ODLY_VT_TRACK,
    StrAttr:$QDLY_VT_TRACK,
    APIntAttr<I<6>>:$READ_IDLE_COUNT,
    StrAttr:$REFCLK_SRC,
    SI64Attr:$ROUNDING_FACTOR,
    StrAttr:$RXGATE_EXTEND,
    StrAttr:$RX_CLK_PHASE_N,
    StrAttr:$RX_CLK_PHASE_P,
    StrAttr:$RX_GATING,
    StrAttr:$SELF_CALIBRATE,
    StrAttr:$SERIAL_MODE,
    StrAttr:$SIM_DEVICE,
    StrAttr:$SIM_SPEEDUP,
    StrAttr:$SIM_VERSION,
    StrAttr:$TX_GATING
  );

  let results = (outs
    I<1>:$CLK_TO_EXT_NORTH,
    I<1>:$CLK_TO_EXT_SOUTH,
    I<1>:$DLY_RDY,
    I<7>:$DYN_DCI,
    I<1>:$NCLK_NIBBLE_OUT,
    I<1>:$PCLK_NIBBLE_OUT,
    I<16>:$RIU_RD_DATA,
    I<1>:$RIU_VALID,
    I<40>:$RX_BIT_CTRL_OUT0,
    I<40>:$RX_BIT_CTRL_OUT1,
    I<40>:$RX_BIT_CTRL_OUT2,
    I<40>:$RX_BIT_CTRL_OUT3,
    I<40>:$RX_BIT_CTRL_OUT4,
    I<40>:$RX_BIT_CTRL_OUT5,
    I<40>:$RX_BIT_CTRL_OUT6,
    I<40>:$TX_BIT_CTRL_OUT0,
    I<40>:$TX_BIT_CTRL_OUT1,
    I<40>:$TX_BIT_CTRL_OUT2,
    I<40>:$TX_BIT_CTRL_OUT3,
    I<40>:$TX_BIT_CTRL_OUT4,
    I<40>:$TX_BIT_CTRL_OUT5,
    I<40>:$TX_BIT_CTRL_OUT6,
    I<40>:$TX_BIT_CTRL_OUT_TRI,
    I<1>:$VTC_RDY
  );
}

def BSCANE2 : XilinxPrimitiveOp<"BSCANE2", []> {
  let summary = "BSCANE2 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$TDO,

    // BSCANE2 parameters follows
    StrAttr:$DISABLE_JTAG,
    SI64Attr:$JTAG_CHAIN,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$CAPTURE,
    I<1>:$DRCK,
    I<1>:$RESET,
    I<1>:$RUNTEST,
    I<1>:$SEL,
    I<1>:$SHIFT,
    I<1>:$TCK,
    I<1>:$TDI,
    I<1>:$TMS,
    I<1>:$UPDATE
  );
}

def BUF : XilinxPrimitiveOp<"BUF", []> {
  let summary = "BUF Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,

    // BUF parameters follows
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O
  );
}

def BUFCEuLEAF : XilinxPrimitiveOp<"BUFCE_LEAF", []> {
  let summary = "BUFCE_LEAF Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CE,
    I<1>:$I,

    // BUFCE_LEAF parameters follows
    StrAttr:$CE_TYPE,
    APIntAttr<I<1>>:$IS_CE_INVERTED,
    APIntAttr<I<1>>:$IS_I_INVERTED
  );

  let results = (outs
    I<1>:$O
  );
}

def BUFCEuROW : XilinxPrimitiveOp<"BUFCE_ROW", []> {
  let summary = "BUFCE_ROW Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CE,
    I<1>:$I,

    // BUFCE_ROW parameters follows
    StrAttr:$CE_TYPE,
    APIntAttr<I<1>>:$IS_CE_INVERTED,
    APIntAttr<I<1>>:$IS_I_INVERTED
  );

  let results = (outs
    I<1>:$O
  );
}

def BUFG : XilinxPrimitiveOp<"BUFG", []> {
  let summary = "BUFG Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I

    // BUFG does not contain any parameters
  );

  let results = (outs
    I<1>:$O
  );
}

def BUFGCE : XilinxPrimitiveOp<"BUFGCE", []> {
  let summary = "BUFGCE Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CE,
    I<1>:$I,

    // BUFGCE parameters follows
    StrAttr:$CE_TYPE,
    APIntAttr<I<1>>:$IS_CE_INVERTED,
    APIntAttr<I<1>>:$IS_I_INVERTED,
    StrAttr:$SIM_DEVICE,
    StrAttr:$STARTUP_SYNC
  );

  let results = (outs
    I<1>:$O
  );
}

def BUFGCEuDIV : XilinxPrimitiveOp<"BUFGCE_DIV", []> {
  let summary = "BUFGCE_DIV Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CE,
    I<1>:$CLR,
    I<1>:$I,

    // BUFGCE_DIV parameters follows
    SI64Attr:$BUFGCE_DIVIDE,
    StrAttr:$CE_TYPE,
    StrAttr:$HARDSYNC_CLR,
    APIntAttr<I<1>>:$IS_CE_INVERTED,
    APIntAttr<I<1>>:$IS_CLR_INVERTED,
    APIntAttr<I<1>>:$IS_I_INVERTED,
    StrAttr:$SIM_DEVICE,
    StrAttr:$STARTUP_SYNC
  );

  let results = (outs
    I<1>:$O
  );
}

def BUFGCTRL : XilinxPrimitiveOp<"BUFGCTRL", []> {
  let summary = "BUFGCTRL Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CE0,
    I<1>:$CE1,
    I<1>:$I0,
    I<1>:$I1,
    I<1>:$IGNORE0,
    I<1>:$IGNORE1,
    I<1>:$S0,
    I<1>:$S1,

    // BUFGCTRL parameters follows
    StrAttr:$CE_TYPE_CE0,
    StrAttr:$CE_TYPE_CE1,
    SI64Attr:$INIT_OUT,
    APIntAttr<I<1>>:$IS_CE0_INVERTED,
    APIntAttr<I<1>>:$IS_CE1_INVERTED,
    APIntAttr<I<1>>:$IS_I0_INVERTED,
    APIntAttr<I<1>>:$IS_I1_INVERTED,
    APIntAttr<I<1>>:$IS_IGNORE0_INVERTED,
    APIntAttr<I<1>>:$IS_IGNORE1_INVERTED,
    APIntAttr<I<1>>:$IS_S0_INVERTED,
    APIntAttr<I<1>>:$IS_S1_INVERTED,
    StrAttr:$PRESELECT_I0,
    StrAttr:$PRESELECT_I1,
    StrAttr:$SIM_DEVICE,
    StrAttr:$STARTUP_SYNC
  );

  let results = (outs
    I<1>:$O
  );
}

def BUFGP : XilinxPrimitiveOp<"BUFGP", []> {
  let summary = "BUFGP Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,

    // BUFGP parameters follows
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O
  );
}

def BUFGuGT : XilinxPrimitiveOp<"BUFG_GT", []> {
  let summary = "BUFG_GT Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CE,
    I<1>:$CEMASK,
    I<1>:$CLR,
    I<1>:$CLRMASK,
    I<3>:$DIV,
    I<1>:$I,

    // BUFG_GT parameters follows
    StrAttr:$SIM_DEVICE,
    StrAttr:$STARTUP_SYNC
  );

  let results = (outs
    I<1>:$O
  );
}

def BUFGuGTuSYNC : XilinxPrimitiveOp<"BUFG_GT_SYNC", []> {
  let summary = "BUFG_GT_SYNC Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CE,
    I<1>:$CLK,
    I<1>:$CLR

    // BUFG_GT_SYNC does not contain any parameters
  );

  let results = (outs
    I<1>:$CESYNC,
    I<1>:$CLRSYNC
  );
}

def BUFGuPS : XilinxPrimitiveOp<"BUFG_PS", []> {
  let summary = "BUFG_PS Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,

    // BUFG_PS parameters follows
    StrAttr:$SIM_DEVICE,
    StrAttr:$STARTUP_SYNC
  );

  let results = (outs
    I<1>:$O
  );
}

def BUFH : XilinxPrimitiveOp<"BUFH", []> {
  let summary = "BUFH Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,

    // BUFH parameters follows
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O
  );
}

def BUFHCE : XilinxPrimitiveOp<"BUFHCE", []> {
  let summary = "BUFHCE Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CE,
    I<1>:$I,

    // BUFHCE parameters follows
    StrAttr:$CE_TYPE,
    SI64Attr:$INIT_OUT,
    APIntAttr<I<1>>:$IS_CE_INVERTED
  );

  let results = (outs
    I<1>:$O
  );
}

def BUFIO : XilinxPrimitiveOp<"BUFIO", []> {
  let summary = "BUFIO Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I

    // BUFIO does not contain any parameters
  );

  let results = (outs
    I<1>:$O
  );
}

def BUFMR : XilinxPrimitiveOp<"BUFMR", []> {
  let summary = "BUFMR Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,

    // BUFMR parameters follows
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O
  );
}

def BUFMRCE : XilinxPrimitiveOp<"BUFMRCE", []> {
  let summary = "BUFMRCE Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CE,
    I<1>:$I,

    // BUFMRCE parameters follows
    StrAttr:$CE_TYPE,
    SI64Attr:$INIT_OUT,
    APIntAttr<I<1>>:$IS_CE_INVERTED
  );

  let results = (outs
    I<1>:$O
  );
}

def BUFR : XilinxPrimitiveOp<"BUFR", []> {
  let summary = "BUFR Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CE,
    I<1>:$CLR,
    I<1>:$I,

    // BUFR parameters follows
    StrAttr:$BUFR_DIVIDE,
    StrAttr:$SIM_DEVICE,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O
  );
}

def CAPTUREE2 : XilinxPrimitiveOp<"CAPTUREE2", []> {
  let summary = "CAPTUREE2 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CAP,
    I<1>:$CLK,

    // CAPTUREE2 parameters follows
    StrAttr:$ONESHOT,
    StrAttr:$LOC
  );

  let results = (outs
  );
}

def CARRY4 : XilinxPrimitiveOp<"CARRY4", []> {
  let summary = "CARRY4 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CI,
    I<1>:$CYINIT,
    I<4>:$DI,
    I<4>:$S

    // CARRY4 does not contain any parameters
  );

  let results = (outs
    I<4>:$CO,
    I<4>:$O
  );
}

def CARRY8 : XilinxPrimitiveOp<"CARRY8", []> {
  let summary = "CARRY8 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CI,
    I<1>:$CI_TOP,
    I<8>:$DI,
    I<8>:$S,

    // CARRY8 parameters follows
    StrAttr:$CARRY_TYPE
  );

  let results = (outs
    I<8>:$CO,
    I<8>:$O
  );
}

def CFGLUT5 : XilinxPrimitiveOp<"CFGLUT5", []> {
  let summary = "CFGLUT5 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CDI,
    I<1>:$CE,
    I<1>:$CLK,
    I<1>:$I0,
    I<1>:$I1,
    I<1>:$I2,
    I<1>:$I3,
    I<1>:$I4,

    // CFGLUT5 parameters follows
    APIntAttr<I<32>>:$INIT,
    APIntAttr<I<1>>:$IS_CLK_INVERTED
  );

  let results = (outs
    I<1>:$CDO,
    I<1>:$O5,
    I<1>:$O6
  );
}

def CMAC : XilinxPrimitiveOp<"CMAC", []> {
  let summary = "CMAC Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CTL_CAUI4_MODE,
    I<1>:$CTL_RX_CHECK_ETYPE_GCP,
    I<1>:$CTL_RX_CHECK_ETYPE_GPP,
    I<1>:$CTL_RX_CHECK_ETYPE_PCP,
    I<1>:$CTL_RX_CHECK_ETYPE_PPP,
    I<1>:$CTL_RX_CHECK_MCAST_GCP,
    I<1>:$CTL_RX_CHECK_MCAST_GPP,
    I<1>:$CTL_RX_CHECK_MCAST_PCP,
    I<1>:$CTL_RX_CHECK_MCAST_PPP,
    I<1>:$CTL_RX_CHECK_OPCODE_GCP,
    I<1>:$CTL_RX_CHECK_OPCODE_GPP,
    I<1>:$CTL_RX_CHECK_OPCODE_PCP,
    I<1>:$CTL_RX_CHECK_OPCODE_PPP,
    I<1>:$CTL_RX_CHECK_SA_GCP,
    I<1>:$CTL_RX_CHECK_SA_GPP,
    I<1>:$CTL_RX_CHECK_SA_PCP,
    I<1>:$CTL_RX_CHECK_SA_PPP,
    I<1>:$CTL_RX_CHECK_UCAST_GCP,
    I<1>:$CTL_RX_CHECK_UCAST_GPP,
    I<1>:$CTL_RX_CHECK_UCAST_PCP,
    I<1>:$CTL_RX_CHECK_UCAST_PPP,
    I<1>:$CTL_RX_ENABLE,
    I<1>:$CTL_RX_ENABLE_GCP,
    I<1>:$CTL_RX_ENABLE_GPP,
    I<1>:$CTL_RX_ENABLE_PCP,
    I<1>:$CTL_RX_ENABLE_PPP,
    I<1>:$CTL_RX_FORCE_RESYNC,
    I<9>:$CTL_RX_PAUSE_ACK,
    I<9>:$CTL_RX_PAUSE_ENABLE,
    I<80>:$CTL_RX_SYSTEMTIMERIN,
    I<1>:$CTL_RX_TEST_PATTERN,
    I<1>:$CTL_TX_ENABLE,
    I<1>:$CTL_TX_LANE0_VLM_BIP7_OVERRIDE,
    I<8>:$CTL_TX_LANE0_VLM_BIP7_OVERRIDE_VALUE,
    I<9>:$CTL_TX_PAUSE_ENABLE,
    I<16>:$CTL_TX_PAUSE_QUANTA0,
    I<16>:$CTL_TX_PAUSE_QUANTA1,
    I<16>:$CTL_TX_PAUSE_QUANTA2,
    I<16>:$CTL_TX_PAUSE_QUANTA3,
    I<16>:$CTL_TX_PAUSE_QUANTA4,
    I<16>:$CTL_TX_PAUSE_QUANTA5,
    I<16>:$CTL_TX_PAUSE_QUANTA6,
    I<16>:$CTL_TX_PAUSE_QUANTA7,
    I<16>:$CTL_TX_PAUSE_QUANTA8,
    I<16>:$CTL_TX_PAUSE_REFRESH_TIMER0,
    I<16>:$CTL_TX_PAUSE_REFRESH_TIMER1,
    I<16>:$CTL_TX_PAUSE_REFRESH_TIMER2,
    I<16>:$CTL_TX_PAUSE_REFRESH_TIMER3,
    I<16>:$CTL_TX_PAUSE_REFRESH_TIMER4,
    I<16>:$CTL_TX_PAUSE_REFRESH_TIMER5,
    I<16>:$CTL_TX_PAUSE_REFRESH_TIMER6,
    I<16>:$CTL_TX_PAUSE_REFRESH_TIMER7,
    I<16>:$CTL_TX_PAUSE_REFRESH_TIMER8,
    I<9>:$CTL_TX_PAUSE_REQ,
    I<1>:$CTL_TX_PTP_VLANE_ADJUST_MODE,
    I<1>:$CTL_TX_RESEND_PAUSE,
    I<1>:$CTL_TX_SEND_IDLE,
    I<1>:$CTL_TX_SEND_RFI,
    I<80>:$CTL_TX_SYSTEMTIMERIN,
    I<1>:$CTL_TX_TEST_PATTERN,
    I<10>:$DRP_ADDR,
    I<1>:$DRP_CLK,
    I<16>:$DRP_DI,
    I<1>:$DRP_EN,
    I<1>:$DRP_WE,
    I<1>:$RX_CLK,
    I<1>:$RX_RESET,
    I<16>:$RX_SERDES_ALT_DATA0,
    I<16>:$RX_SERDES_ALT_DATA1,
    I<16>:$RX_SERDES_ALT_DATA2,
    I<16>:$RX_SERDES_ALT_DATA3,
    I<10>:$RX_SERDES_CLK,
    I<64>:$RX_SERDES_DATA0,
    I<64>:$RX_SERDES_DATA1,
    I<64>:$RX_SERDES_DATA2,
    I<64>:$RX_SERDES_DATA3,
    I<32>:$RX_SERDES_DATA4,
    I<32>:$RX_SERDES_DATA5,
    I<32>:$RX_SERDES_DATA6,
    I<32>:$RX_SERDES_DATA7,
    I<32>:$RX_SERDES_DATA8,
    I<32>:$RX_SERDES_DATA9,
    I<10>:$RX_SERDES_RESET,
    I<1>:$TX_CLK,
    I<128>:$TX_DATAIN0,
    I<128>:$TX_DATAIN1,
    I<128>:$TX_DATAIN2,
    I<128>:$TX_DATAIN3,
    I<1>:$TX_ENAIN0,
    I<1>:$TX_ENAIN1,
    I<1>:$TX_ENAIN2,
    I<1>:$TX_ENAIN3,
    I<1>:$TX_EOPIN0,
    I<1>:$TX_EOPIN1,
    I<1>:$TX_EOPIN2,
    I<1>:$TX_EOPIN3,
    I<1>:$TX_ERRIN0,
    I<1>:$TX_ERRIN1,
    I<1>:$TX_ERRIN2,
    I<1>:$TX_ERRIN3,
    I<4>:$TX_MTYIN0,
    I<4>:$TX_MTYIN1,
    I<4>:$TX_MTYIN2,
    I<4>:$TX_MTYIN3,
    I<2>:$TX_PTP_1588OP_IN,
    I<16>:$TX_PTP_CHKSUM_OFFSET_IN,
    I<64>:$TX_PTP_RXTSTAMP_IN,
    I<16>:$TX_PTP_TAG_FIELD_IN,
    I<16>:$TX_PTP_TSTAMP_OFFSET_IN,
    I<1>:$TX_PTP_UPD_CHKSUM_IN,
    I<1>:$TX_RESET,
    I<1>:$TX_SOPIN0,
    I<1>:$TX_SOPIN1,
    I<1>:$TX_SOPIN2,
    I<1>:$TX_SOPIN3,

    // CMAC parameters follows
    StrAttr:$CTL_PTP_TRANSPCLK_MODE,
    StrAttr:$CTL_RX_CHECK_ACK,
    StrAttr:$CTL_RX_CHECK_PREAMBLE,
    StrAttr:$CTL_RX_CHECK_SFD,
    StrAttr:$CTL_RX_DELETE_FCS,
    APIntAttr<I<16>>:$CTL_RX_ETYPE_GCP,
    APIntAttr<I<16>>:$CTL_RX_ETYPE_GPP,
    APIntAttr<I<16>>:$CTL_RX_ETYPE_PCP,
    APIntAttr<I<16>>:$CTL_RX_ETYPE_PPP,
    StrAttr:$CTL_RX_FORWARD_CONTROL,
    StrAttr:$CTL_RX_IGNORE_FCS,
    APIntAttr<I<15>>:$CTL_RX_MAX_PACKET_LEN,
    APIntAttr<I<8>>:$CTL_RX_MIN_PACKET_LEN,
    APIntAttr<I<16>>:$CTL_RX_OPCODE_GPP,
    APIntAttr<I<16>>:$CTL_RX_OPCODE_MAX_GCP,
    APIntAttr<I<16>>:$CTL_RX_OPCODE_MAX_PCP,
    APIntAttr<I<16>>:$CTL_RX_OPCODE_MIN_GCP,
    APIntAttr<I<16>>:$CTL_RX_OPCODE_MIN_PCP,
    APIntAttr<I<16>>:$CTL_RX_OPCODE_PPP,
    APIntAttr<I<48>>:$CTL_RX_PAUSE_DA_MCAST,
    APIntAttr<I<48>>:$CTL_RX_PAUSE_DA_UCAST,
    APIntAttr<I<48>>:$CTL_RX_PAUSE_SA,
    StrAttr:$CTL_RX_PROCESS_LFI,
    APIntAttr<I<16>>:$CTL_RX_VL_LENGTH_MINUS1,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID0,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID1,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID10,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID11,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID12,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID13,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID14,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID15,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID16,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID17,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID18,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID19,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID2,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID3,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID4,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID5,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID6,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID7,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID8,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID9,
    StrAttr:$CTL_TEST_MODE_PIN_CHAR,
    APIntAttr<I<48>>:$CTL_TX_DA_GPP,
    APIntAttr<I<48>>:$CTL_TX_DA_PPP,
    APIntAttr<I<16>>:$CTL_TX_ETHERTYPE_GPP,
    APIntAttr<I<16>>:$CTL_TX_ETHERTYPE_PPP,
    StrAttr:$CTL_TX_FCS_INS_ENABLE,
    StrAttr:$CTL_TX_IGNORE_FCS,
    APIntAttr<I<16>>:$CTL_TX_OPCODE_GPP,
    APIntAttr<I<16>>:$CTL_TX_OPCODE_PPP,
    StrAttr:$CTL_TX_PTP_1STEP_ENABLE,
    APIntAttr<I<11>>:$CTL_TX_PTP_LATENCY_ADJUST,
    APIntAttr<I<48>>:$CTL_TX_SA_GPP,
    APIntAttr<I<48>>:$CTL_TX_SA_PPP,
    APIntAttr<I<16>>:$CTL_TX_VL_LENGTH_MINUS1,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID0,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID1,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID10,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID11,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID12,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID13,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID14,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID15,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID16,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID17,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID18,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID19,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID2,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID3,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID4,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID5,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID6,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID7,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID8,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID9,
    StrAttr:$SIM_VERSION,
    StrAttr:$TEST_MODE_PIN_CHAR
  );

  let results = (outs
    I<16>:$DRP_DO,
    I<1>:$DRP_RDY,
    I<128>:$RX_DATAOUT0,
    I<128>:$RX_DATAOUT1,
    I<128>:$RX_DATAOUT2,
    I<128>:$RX_DATAOUT3,
    I<1>:$RX_ENAOUT0,
    I<1>:$RX_ENAOUT1,
    I<1>:$RX_ENAOUT2,
    I<1>:$RX_ENAOUT3,
    I<1>:$RX_EOPOUT0,
    I<1>:$RX_EOPOUT1,
    I<1>:$RX_EOPOUT2,
    I<1>:$RX_EOPOUT3,
    I<1>:$RX_ERROUT0,
    I<1>:$RX_ERROUT1,
    I<1>:$RX_ERROUT2,
    I<1>:$RX_ERROUT3,
    I<7>:$RX_LANE_ALIGNER_FILL_0,
    I<7>:$RX_LANE_ALIGNER_FILL_1,
    I<7>:$RX_LANE_ALIGNER_FILL_10,
    I<7>:$RX_LANE_ALIGNER_FILL_11,
    I<7>:$RX_LANE_ALIGNER_FILL_12,
    I<7>:$RX_LANE_ALIGNER_FILL_13,
    I<7>:$RX_LANE_ALIGNER_FILL_14,
    I<7>:$RX_LANE_ALIGNER_FILL_15,
    I<7>:$RX_LANE_ALIGNER_FILL_16,
    I<7>:$RX_LANE_ALIGNER_FILL_17,
    I<7>:$RX_LANE_ALIGNER_FILL_18,
    I<7>:$RX_LANE_ALIGNER_FILL_19,
    I<7>:$RX_LANE_ALIGNER_FILL_2,
    I<7>:$RX_LANE_ALIGNER_FILL_3,
    I<7>:$RX_LANE_ALIGNER_FILL_4,
    I<7>:$RX_LANE_ALIGNER_FILL_5,
    I<7>:$RX_LANE_ALIGNER_FILL_6,
    I<7>:$RX_LANE_ALIGNER_FILL_7,
    I<7>:$RX_LANE_ALIGNER_FILL_8,
    I<7>:$RX_LANE_ALIGNER_FILL_9,
    I<4>:$RX_MTYOUT0,
    I<4>:$RX_MTYOUT1,
    I<4>:$RX_MTYOUT2,
    I<4>:$RX_MTYOUT3,
    I<5>:$RX_PTP_PCSLANE_OUT,
    I<80>:$RX_PTP_TSTAMP_OUT,
    I<1>:$RX_SOPOUT0,
    I<1>:$RX_SOPOUT1,
    I<1>:$RX_SOPOUT2,
    I<1>:$RX_SOPOUT3,
    I<1>:$STAT_RX_ALIGNED,
    I<1>:$STAT_RX_ALIGNED_ERR,
    I<7>:$STAT_RX_BAD_CODE,
    I<4>:$STAT_RX_BAD_FCS,
    I<1>:$STAT_RX_BAD_PREAMBLE,
    I<1>:$STAT_RX_BAD_SFD,
    I<1>:$STAT_RX_BIP_ERR_0,
    I<1>:$STAT_RX_BIP_ERR_1,
    I<1>:$STAT_RX_BIP_ERR_10,
    I<1>:$STAT_RX_BIP_ERR_11,
    I<1>:$STAT_RX_BIP_ERR_12,
    I<1>:$STAT_RX_BIP_ERR_13,
    I<1>:$STAT_RX_BIP_ERR_14,
    I<1>:$STAT_RX_BIP_ERR_15,
    I<1>:$STAT_RX_BIP_ERR_16,
    I<1>:$STAT_RX_BIP_ERR_17,
    I<1>:$STAT_RX_BIP_ERR_18,
    I<1>:$STAT_RX_BIP_ERR_19,
    I<1>:$STAT_RX_BIP_ERR_2,
    I<1>:$STAT_RX_BIP_ERR_3,
    I<1>:$STAT_RX_BIP_ERR_4,
    I<1>:$STAT_RX_BIP_ERR_5,
    I<1>:$STAT_RX_BIP_ERR_6,
    I<1>:$STAT_RX_BIP_ERR_7,
    I<1>:$STAT_RX_BIP_ERR_8,
    I<1>:$STAT_RX_BIP_ERR_9,
    I<20>:$STAT_RX_BLOCK_LOCK,
    I<1>:$STAT_RX_BROADCAST,
    I<4>:$STAT_RX_FRAGMENT,
    I<4>:$STAT_RX_FRAMING_ERR_0,
    I<4>:$STAT_RX_FRAMING_ERR_1,
    I<4>:$STAT_RX_FRAMING_ERR_10,
    I<4>:$STAT_RX_FRAMING_ERR_11,
    I<4>:$STAT_RX_FRAMING_ERR_12,
    I<4>:$STAT_RX_FRAMING_ERR_13,
    I<4>:$STAT_RX_FRAMING_ERR_14,
    I<4>:$STAT_RX_FRAMING_ERR_15,
    I<4>:$STAT_RX_FRAMING_ERR_16,
    I<4>:$STAT_RX_FRAMING_ERR_17,
    I<4>:$STAT_RX_FRAMING_ERR_18,
    I<4>:$STAT_RX_FRAMING_ERR_19,
    I<4>:$STAT_RX_FRAMING_ERR_2,
    I<4>:$STAT_RX_FRAMING_ERR_3,
    I<4>:$STAT_RX_FRAMING_ERR_4,
    I<4>:$STAT_RX_FRAMING_ERR_5,
    I<4>:$STAT_RX_FRAMING_ERR_6,
    I<4>:$STAT_RX_FRAMING_ERR_7,
    I<4>:$STAT_RX_FRAMING_ERR_8,
    I<4>:$STAT_RX_FRAMING_ERR_9,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_0,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_1,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_10,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_11,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_12,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_13,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_14,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_15,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_16,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_17,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_18,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_19,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_2,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_3,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_4,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_5,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_6,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_7,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_8,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_9,
    I<1>:$STAT_RX_GOT_SIGNAL_OS,
    I<1>:$STAT_RX_HI_BER,
    I<1>:$STAT_RX_INRANGEERR,
    I<1>:$STAT_RX_INTERNAL_LOCAL_FAULT,
    I<1>:$STAT_RX_JABBER,
    I<8>:$STAT_RX_LANE0_VLM_BIP7,
    I<1>:$STAT_RX_LANE0_VLM_BIP7_VALID,
    I<1>:$STAT_RX_LOCAL_FAULT,
    I<20>:$STAT_RX_MF_ERR,
    I<20>:$STAT_RX_MF_LEN_ERR,
    I<20>:$STAT_RX_MF_REPEAT_ERR,
    I<1>:$STAT_RX_MISALIGNED,
    I<1>:$STAT_RX_MULTICAST,
    I<1>:$STAT_RX_OVERSIZE,
    I<1>:$STAT_RX_PACKET_1024_1518_BYTES,
    I<1>:$STAT_RX_PACKET_128_255_BYTES,
    I<1>:$STAT_RX_PACKET_1519_1522_BYTES,
    I<1>:$STAT_RX_PACKET_1523_1548_BYTES,
    I<1>:$STAT_RX_PACKET_1549_2047_BYTES,
    I<1>:$STAT_RX_PACKET_2048_4095_BYTES,
    I<1>:$STAT_RX_PACKET_256_511_BYTES,
    I<1>:$STAT_RX_PACKET_4096_8191_BYTES,
    I<1>:$STAT_RX_PACKET_512_1023_BYTES,
    I<1>:$STAT_RX_PACKET_64_BYTES,
    I<1>:$STAT_RX_PACKET_65_127_BYTES,
    I<1>:$STAT_RX_PACKET_8192_9215_BYTES,
    I<1>:$STAT_RX_PACKET_BAD_FCS,
    I<1>:$STAT_RX_PACKET_LARGE,
    I<4>:$STAT_RX_PACKET_SMALL,
    I<1>:$STAT_RX_PAUSE,
    I<16>:$STAT_RX_PAUSE_QUANTA0,
    I<16>:$STAT_RX_PAUSE_QUANTA1,
    I<16>:$STAT_RX_PAUSE_QUANTA2,
    I<16>:$STAT_RX_PAUSE_QUANTA3,
    I<16>:$STAT_RX_PAUSE_QUANTA4,
    I<16>:$STAT_RX_PAUSE_QUANTA5,
    I<16>:$STAT_RX_PAUSE_QUANTA6,
    I<16>:$STAT_RX_PAUSE_QUANTA7,
    I<16>:$STAT_RX_PAUSE_QUANTA8,
    I<9>:$STAT_RX_PAUSE_REQ,
    I<9>:$STAT_RX_PAUSE_VALID,
    I<1>:$STAT_RX_RECEIVED_LOCAL_FAULT,
    I<1>:$STAT_RX_REMOTE_FAULT,
    I<1>:$STAT_RX_STATUS,
    I<4>:$STAT_RX_STOMPED_FCS,
    I<20>:$STAT_RX_SYNCED,
    I<20>:$STAT_RX_SYNCED_ERR,
    I<3>:$STAT_RX_TEST_PATTERN_MISMATCH,
    I<1>:$STAT_RX_TOOLONG,
    I<8>:$STAT_RX_TOTAL_BYTES,
    I<14>:$STAT_RX_TOTAL_GOOD_BYTES,
    I<1>:$STAT_RX_TOTAL_GOOD_PACKETS,
    I<4>:$STAT_RX_TOTAL_PACKETS,
    I<1>:$STAT_RX_TRUNCATED,
    I<4>:$STAT_RX_UNDERSIZE,
    I<1>:$STAT_RX_UNICAST,
    I<1>:$STAT_RX_USER_PAUSE,
    I<1>:$STAT_RX_VLAN,
    I<20>:$STAT_RX_VL_DEMUXED,
    I<5>:$STAT_RX_VL_NUMBER_0,
    I<5>:$STAT_RX_VL_NUMBER_1,
    I<5>:$STAT_RX_VL_NUMBER_10,
    I<5>:$STAT_RX_VL_NUMBER_11,
    I<5>:$STAT_RX_VL_NUMBER_12,
    I<5>:$STAT_RX_VL_NUMBER_13,
    I<5>:$STAT_RX_VL_NUMBER_14,
    I<5>:$STAT_RX_VL_NUMBER_15,
    I<5>:$STAT_RX_VL_NUMBER_16,
    I<5>:$STAT_RX_VL_NUMBER_17,
    I<5>:$STAT_RX_VL_NUMBER_18,
    I<5>:$STAT_RX_VL_NUMBER_19,
    I<5>:$STAT_RX_VL_NUMBER_2,
    I<5>:$STAT_RX_VL_NUMBER_3,
    I<5>:$STAT_RX_VL_NUMBER_4,
    I<5>:$STAT_RX_VL_NUMBER_5,
    I<5>:$STAT_RX_VL_NUMBER_6,
    I<5>:$STAT_RX_VL_NUMBER_7,
    I<5>:$STAT_RX_VL_NUMBER_8,
    I<5>:$STAT_RX_VL_NUMBER_9,
    I<1>:$STAT_TX_BAD_FCS,
    I<1>:$STAT_TX_BROADCAST,
    I<1>:$STAT_TX_FRAME_ERROR,
    I<1>:$STAT_TX_LOCAL_FAULT,
    I<1>:$STAT_TX_MULTICAST,
    I<1>:$STAT_TX_PACKET_1024_1518_BYTES,
    I<1>:$STAT_TX_PACKET_128_255_BYTES,
    I<1>:$STAT_TX_PACKET_1519_1522_BYTES,
    I<1>:$STAT_TX_PACKET_1523_1548_BYTES,
    I<1>:$STAT_TX_PACKET_1549_2047_BYTES,
    I<1>:$STAT_TX_PACKET_2048_4095_BYTES,
    I<1>:$STAT_TX_PACKET_256_511_BYTES,
    I<1>:$STAT_TX_PACKET_4096_8191_BYTES,
    I<1>:$STAT_TX_PACKET_512_1023_BYTES,
    I<1>:$STAT_TX_PACKET_64_BYTES,
    I<1>:$STAT_TX_PACKET_65_127_BYTES,
    I<1>:$STAT_TX_PACKET_8192_9215_BYTES,
    I<1>:$STAT_TX_PACKET_LARGE,
    I<1>:$STAT_TX_PACKET_SMALL,
    I<1>:$STAT_TX_PAUSE,
    I<9>:$STAT_TX_PAUSE_VALID,
    I<1>:$STAT_TX_PTP_FIFO_READ_ERROR,
    I<1>:$STAT_TX_PTP_FIFO_WRITE_ERROR,
    I<7>:$STAT_TX_TOTAL_BYTES,
    I<14>:$STAT_TX_TOTAL_GOOD_BYTES,
    I<1>:$STAT_TX_TOTAL_GOOD_PACKETS,
    I<1>:$STAT_TX_TOTAL_PACKETS,
    I<1>:$STAT_TX_UNICAST,
    I<1>:$STAT_TX_USER_PAUSE,
    I<1>:$STAT_TX_VLAN,
    I<1>:$TX_OVFOUT,
    I<5>:$TX_PTP_PCSLANE_OUT,
    I<80>:$TX_PTP_TSTAMP_OUT,
    I<16>:$TX_PTP_TSTAMP_TAG_OUT,
    I<1>:$TX_PTP_TSTAMP_VALID_OUT,
    I<1>:$TX_RDYOUT,
    I<16>:$TX_SERDES_ALT_DATA0,
    I<16>:$TX_SERDES_ALT_DATA1,
    I<16>:$TX_SERDES_ALT_DATA2,
    I<16>:$TX_SERDES_ALT_DATA3,
    I<64>:$TX_SERDES_DATA0,
    I<64>:$TX_SERDES_DATA1,
    I<64>:$TX_SERDES_DATA2,
    I<64>:$TX_SERDES_DATA3,
    I<32>:$TX_SERDES_DATA4,
    I<32>:$TX_SERDES_DATA5,
    I<32>:$TX_SERDES_DATA6,
    I<32>:$TX_SERDES_DATA7,
    I<32>:$TX_SERDES_DATA8,
    I<32>:$TX_SERDES_DATA9,
    I<1>:$TX_UNFOUT
  );
}

def CMACE4 : XilinxPrimitiveOp<"CMACE4", []> {
  let summary = "CMACE4 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CTL_CAUI4_MODE,
    I<1>:$CTL_RSFEC_ENABLE_TRANSCODER_BYPASS_MODE,
    I<1>:$CTL_RSFEC_IEEE_ERROR_INDICATION_MODE,
    I<1>:$CTL_RX_CHECK_ETYPE_GCP,
    I<1>:$CTL_RX_CHECK_ETYPE_GPP,
    I<1>:$CTL_RX_CHECK_ETYPE_PCP,
    I<1>:$CTL_RX_CHECK_ETYPE_PPP,
    I<1>:$CTL_RX_CHECK_MCAST_GCP,
    I<1>:$CTL_RX_CHECK_MCAST_GPP,
    I<1>:$CTL_RX_CHECK_MCAST_PCP,
    I<1>:$CTL_RX_CHECK_MCAST_PPP,
    I<1>:$CTL_RX_CHECK_OPCODE_GCP,
    I<1>:$CTL_RX_CHECK_OPCODE_GPP,
    I<1>:$CTL_RX_CHECK_OPCODE_PCP,
    I<1>:$CTL_RX_CHECK_OPCODE_PPP,
    I<1>:$CTL_RX_CHECK_SA_GCP,
    I<1>:$CTL_RX_CHECK_SA_GPP,
    I<1>:$CTL_RX_CHECK_SA_PCP,
    I<1>:$CTL_RX_CHECK_SA_PPP,
    I<1>:$CTL_RX_CHECK_UCAST_GCP,
    I<1>:$CTL_RX_CHECK_UCAST_GPP,
    I<1>:$CTL_RX_CHECK_UCAST_PCP,
    I<1>:$CTL_RX_CHECK_UCAST_PPP,
    I<1>:$CTL_RX_ENABLE,
    I<1>:$CTL_RX_ENABLE_GCP,
    I<1>:$CTL_RX_ENABLE_GPP,
    I<1>:$CTL_RX_ENABLE_PCP,
    I<1>:$CTL_RX_ENABLE_PPP,
    I<1>:$CTL_RX_FORCE_RESYNC,
    I<9>:$CTL_RX_PAUSE_ACK,
    I<9>:$CTL_RX_PAUSE_ENABLE,
    I<1>:$CTL_RX_RSFEC_ENABLE,
    I<1>:$CTL_RX_RSFEC_ENABLE_CORRECTION,
    I<1>:$CTL_RX_RSFEC_ENABLE_INDICATION,
    I<80>:$CTL_RX_SYSTEMTIMERIN,
    I<1>:$CTL_RX_TEST_PATTERN,
    I<1>:$CTL_TX_ENABLE,
    I<1>:$CTL_TX_LANE0_VLM_BIP7_OVERRIDE,
    I<8>:$CTL_TX_LANE0_VLM_BIP7_OVERRIDE_VALUE,
    I<9>:$CTL_TX_PAUSE_ENABLE,
    I<16>:$CTL_TX_PAUSE_QUANTA0,
    I<16>:$CTL_TX_PAUSE_QUANTA1,
    I<16>:$CTL_TX_PAUSE_QUANTA2,
    I<16>:$CTL_TX_PAUSE_QUANTA3,
    I<16>:$CTL_TX_PAUSE_QUANTA4,
    I<16>:$CTL_TX_PAUSE_QUANTA5,
    I<16>:$CTL_TX_PAUSE_QUANTA6,
    I<16>:$CTL_TX_PAUSE_QUANTA7,
    I<16>:$CTL_TX_PAUSE_QUANTA8,
    I<16>:$CTL_TX_PAUSE_REFRESH_TIMER0,
    I<16>:$CTL_TX_PAUSE_REFRESH_TIMER1,
    I<16>:$CTL_TX_PAUSE_REFRESH_TIMER2,
    I<16>:$CTL_TX_PAUSE_REFRESH_TIMER3,
    I<16>:$CTL_TX_PAUSE_REFRESH_TIMER4,
    I<16>:$CTL_TX_PAUSE_REFRESH_TIMER5,
    I<16>:$CTL_TX_PAUSE_REFRESH_TIMER6,
    I<16>:$CTL_TX_PAUSE_REFRESH_TIMER7,
    I<16>:$CTL_TX_PAUSE_REFRESH_TIMER8,
    I<9>:$CTL_TX_PAUSE_REQ,
    I<1>:$CTL_TX_PTP_VLANE_ADJUST_MODE,
    I<1>:$CTL_TX_RESEND_PAUSE,
    I<1>:$CTL_TX_RSFEC_ENABLE,
    I<1>:$CTL_TX_SEND_IDLE,
    I<1>:$CTL_TX_SEND_LFI,
    I<1>:$CTL_TX_SEND_RFI,
    I<80>:$CTL_TX_SYSTEMTIMERIN,
    I<1>:$CTL_TX_TEST_PATTERN,
    I<10>:$DRP_ADDR,
    I<1>:$DRP_CLK,
    I<16>:$DRP_DI,
    I<1>:$DRP_EN,
    I<1>:$DRP_WE,
    I<330>:$RSFEC_BYPASS_RX_DIN,
    I<1>:$RSFEC_BYPASS_RX_DIN_CW_START,
    I<330>:$RSFEC_BYPASS_TX_DIN,
    I<1>:$RSFEC_BYPASS_TX_DIN_CW_START,
    I<1>:$RX_CLK,
    I<1>:$RX_RESET,
    I<16>:$RX_SERDES_ALT_DATA0,
    I<16>:$RX_SERDES_ALT_DATA1,
    I<16>:$RX_SERDES_ALT_DATA2,
    I<16>:$RX_SERDES_ALT_DATA3,
    I<10>:$RX_SERDES_CLK,
    I<64>:$RX_SERDES_DATA0,
    I<64>:$RX_SERDES_DATA1,
    I<64>:$RX_SERDES_DATA2,
    I<64>:$RX_SERDES_DATA3,
    I<32>:$RX_SERDES_DATA4,
    I<32>:$RX_SERDES_DATA5,
    I<32>:$RX_SERDES_DATA6,
    I<32>:$RX_SERDES_DATA7,
    I<32>:$RX_SERDES_DATA8,
    I<32>:$RX_SERDES_DATA9,
    I<10>:$RX_SERDES_RESET,
    I<1>:$TX_CLK,
    I<128>:$TX_DATAIN0,
    I<128>:$TX_DATAIN1,
    I<128>:$TX_DATAIN2,
    I<128>:$TX_DATAIN3,
    I<1>:$TX_ENAIN0,
    I<1>:$TX_ENAIN1,
    I<1>:$TX_ENAIN2,
    I<1>:$TX_ENAIN3,
    I<1>:$TX_EOPIN0,
    I<1>:$TX_EOPIN1,
    I<1>:$TX_EOPIN2,
    I<1>:$TX_EOPIN3,
    I<1>:$TX_ERRIN0,
    I<1>:$TX_ERRIN1,
    I<1>:$TX_ERRIN2,
    I<1>:$TX_ERRIN3,
    I<4>:$TX_MTYIN0,
    I<4>:$TX_MTYIN1,
    I<4>:$TX_MTYIN2,
    I<4>:$TX_MTYIN3,
    I<56>:$TX_PREIN,
    I<2>:$TX_PTP_1588OP_IN,
    I<16>:$TX_PTP_CHKSUM_OFFSET_IN,
    I<64>:$TX_PTP_RXTSTAMP_IN,
    I<16>:$TX_PTP_TAG_FIELD_IN,
    I<16>:$TX_PTP_TSTAMP_OFFSET_IN,
    I<1>:$TX_PTP_UPD_CHKSUM_IN,
    I<1>:$TX_RESET,
    I<1>:$TX_SOPIN0,
    I<1>:$TX_SOPIN1,
    I<1>:$TX_SOPIN2,
    I<1>:$TX_SOPIN3,

    // CMACE4 parameters follows
    StrAttr:$CTL_PTP_TRANSPCLK_MODE,
    StrAttr:$CTL_RX_CHECK_ACK,
    StrAttr:$CTL_RX_CHECK_PREAMBLE,
    StrAttr:$CTL_RX_CHECK_SFD,
    StrAttr:$CTL_RX_DELETE_FCS,
    APIntAttr<I<16>>:$CTL_RX_ETYPE_GCP,
    APIntAttr<I<16>>:$CTL_RX_ETYPE_GPP,
    APIntAttr<I<16>>:$CTL_RX_ETYPE_PCP,
    APIntAttr<I<16>>:$CTL_RX_ETYPE_PPP,
    StrAttr:$CTL_RX_FORWARD_CONTROL,
    StrAttr:$CTL_RX_IGNORE_FCS,
    APIntAttr<I<15>>:$CTL_RX_MAX_PACKET_LEN,
    APIntAttr<I<8>>:$CTL_RX_MIN_PACKET_LEN,
    APIntAttr<I<16>>:$CTL_RX_OPCODE_GPP,
    APIntAttr<I<16>>:$CTL_RX_OPCODE_MAX_GCP,
    APIntAttr<I<16>>:$CTL_RX_OPCODE_MAX_PCP,
    APIntAttr<I<16>>:$CTL_RX_OPCODE_MIN_GCP,
    APIntAttr<I<16>>:$CTL_RX_OPCODE_MIN_PCP,
    APIntAttr<I<16>>:$CTL_RX_OPCODE_PPP,
    APIntAttr<I<48>>:$CTL_RX_PAUSE_DA_MCAST,
    APIntAttr<I<48>>:$CTL_RX_PAUSE_DA_UCAST,
    APIntAttr<I<48>>:$CTL_RX_PAUSE_SA,
    StrAttr:$CTL_RX_PROCESS_LFI,
    APIntAttr<I<9>>:$CTL_RX_RSFEC_AM_THRESHOLD,
    APIntAttr<I<2>>:$CTL_RX_RSFEC_FILL_ADJUST,
    APIntAttr<I<16>>:$CTL_RX_VL_LENGTH_MINUS1,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID0,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID1,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID10,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID11,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID12,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID13,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID14,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID15,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID16,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID17,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID18,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID19,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID2,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID3,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID4,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID5,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID6,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID7,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID8,
    APIntAttr<I<64>>:$CTL_RX_VL_MARKER_ID9,
    StrAttr:$CTL_TEST_MODE_PIN_CHAR,
    StrAttr:$CTL_TX_CUSTOM_PREAMBLE_ENABLE,
    APIntAttr<I<48>>:$CTL_TX_DA_GPP,
    APIntAttr<I<48>>:$CTL_TX_DA_PPP,
    APIntAttr<I<16>>:$CTL_TX_ETHERTYPE_GPP,
    APIntAttr<I<16>>:$CTL_TX_ETHERTYPE_PPP,
    StrAttr:$CTL_TX_FCS_INS_ENABLE,
    StrAttr:$CTL_TX_IGNORE_FCS,
    APIntAttr<I<4>>:$CTL_TX_IPG_VALUE,
    APIntAttr<I<16>>:$CTL_TX_OPCODE_GPP,
    APIntAttr<I<16>>:$CTL_TX_OPCODE_PPP,
    StrAttr:$CTL_TX_PTP_1STEP_ENABLE,
    APIntAttr<I<11>>:$CTL_TX_PTP_LATENCY_ADJUST,
    APIntAttr<I<48>>:$CTL_TX_SA_GPP,
    APIntAttr<I<48>>:$CTL_TX_SA_PPP,
    APIntAttr<I<16>>:$CTL_TX_VL_LENGTH_MINUS1,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID0,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID1,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID10,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID11,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID12,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID13,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID14,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID15,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID16,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID17,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID18,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID19,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID2,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID3,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID4,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID5,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID6,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID7,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID8,
    APIntAttr<I<64>>:$CTL_TX_VL_MARKER_ID9,
    StrAttr:$SIM_DEVICE,
    StrAttr:$TEST_MODE_PIN_CHAR
  );

  let results = (outs
    I<16>:$DRP_DO,
    I<1>:$DRP_RDY,
    I<330>:$RSFEC_BYPASS_RX_DOUT,
    I<1>:$RSFEC_BYPASS_RX_DOUT_CW_START,
    I<1>:$RSFEC_BYPASS_RX_DOUT_VALID,
    I<330>:$RSFEC_BYPASS_TX_DOUT,
    I<1>:$RSFEC_BYPASS_TX_DOUT_CW_START,
    I<1>:$RSFEC_BYPASS_TX_DOUT_VALID,
    I<128>:$RX_DATAOUT0,
    I<128>:$RX_DATAOUT1,
    I<128>:$RX_DATAOUT2,
    I<128>:$RX_DATAOUT3,
    I<1>:$RX_ENAOUT0,
    I<1>:$RX_ENAOUT1,
    I<1>:$RX_ENAOUT2,
    I<1>:$RX_ENAOUT3,
    I<1>:$RX_EOPOUT0,
    I<1>:$RX_EOPOUT1,
    I<1>:$RX_EOPOUT2,
    I<1>:$RX_EOPOUT3,
    I<1>:$RX_ERROUT0,
    I<1>:$RX_ERROUT1,
    I<1>:$RX_ERROUT2,
    I<1>:$RX_ERROUT3,
    I<7>:$RX_LANE_ALIGNER_FILL_0,
    I<7>:$RX_LANE_ALIGNER_FILL_1,
    I<7>:$RX_LANE_ALIGNER_FILL_10,
    I<7>:$RX_LANE_ALIGNER_FILL_11,
    I<7>:$RX_LANE_ALIGNER_FILL_12,
    I<7>:$RX_LANE_ALIGNER_FILL_13,
    I<7>:$RX_LANE_ALIGNER_FILL_14,
    I<7>:$RX_LANE_ALIGNER_FILL_15,
    I<7>:$RX_LANE_ALIGNER_FILL_16,
    I<7>:$RX_LANE_ALIGNER_FILL_17,
    I<7>:$RX_LANE_ALIGNER_FILL_18,
    I<7>:$RX_LANE_ALIGNER_FILL_19,
    I<7>:$RX_LANE_ALIGNER_FILL_2,
    I<7>:$RX_LANE_ALIGNER_FILL_3,
    I<7>:$RX_LANE_ALIGNER_FILL_4,
    I<7>:$RX_LANE_ALIGNER_FILL_5,
    I<7>:$RX_LANE_ALIGNER_FILL_6,
    I<7>:$RX_LANE_ALIGNER_FILL_7,
    I<7>:$RX_LANE_ALIGNER_FILL_8,
    I<7>:$RX_LANE_ALIGNER_FILL_9,
    I<4>:$RX_MTYOUT0,
    I<4>:$RX_MTYOUT1,
    I<4>:$RX_MTYOUT2,
    I<4>:$RX_MTYOUT3,
    I<8>:$RX_OTN_BIP8_0,
    I<8>:$RX_OTN_BIP8_1,
    I<8>:$RX_OTN_BIP8_2,
    I<8>:$RX_OTN_BIP8_3,
    I<8>:$RX_OTN_BIP8_4,
    I<66>:$RX_OTN_DATA_0,
    I<66>:$RX_OTN_DATA_1,
    I<66>:$RX_OTN_DATA_2,
    I<66>:$RX_OTN_DATA_3,
    I<66>:$RX_OTN_DATA_4,
    I<1>:$RX_OTN_ENA,
    I<1>:$RX_OTN_LANE0,
    I<1>:$RX_OTN_VLMARKER,
    I<56>:$RX_PREOUT,
    I<5>:$RX_PTP_PCSLANE_OUT,
    I<80>:$RX_PTP_TSTAMP_OUT,
    I<1>:$RX_SOPOUT0,
    I<1>:$RX_SOPOUT1,
    I<1>:$RX_SOPOUT2,
    I<1>:$RX_SOPOUT3,
    I<1>:$STAT_RX_ALIGNED,
    I<1>:$STAT_RX_ALIGNED_ERR,
    I<3>:$STAT_RX_BAD_CODE,
    I<3>:$STAT_RX_BAD_FCS,
    I<1>:$STAT_RX_BAD_PREAMBLE,
    I<1>:$STAT_RX_BAD_SFD,
    I<1>:$STAT_RX_BIP_ERR_0,
    I<1>:$STAT_RX_BIP_ERR_1,
    I<1>:$STAT_RX_BIP_ERR_10,
    I<1>:$STAT_RX_BIP_ERR_11,
    I<1>:$STAT_RX_BIP_ERR_12,
    I<1>:$STAT_RX_BIP_ERR_13,
    I<1>:$STAT_RX_BIP_ERR_14,
    I<1>:$STAT_RX_BIP_ERR_15,
    I<1>:$STAT_RX_BIP_ERR_16,
    I<1>:$STAT_RX_BIP_ERR_17,
    I<1>:$STAT_RX_BIP_ERR_18,
    I<1>:$STAT_RX_BIP_ERR_19,
    I<1>:$STAT_RX_BIP_ERR_2,
    I<1>:$STAT_RX_BIP_ERR_3,
    I<1>:$STAT_RX_BIP_ERR_4,
    I<1>:$STAT_RX_BIP_ERR_5,
    I<1>:$STAT_RX_BIP_ERR_6,
    I<1>:$STAT_RX_BIP_ERR_7,
    I<1>:$STAT_RX_BIP_ERR_8,
    I<1>:$STAT_RX_BIP_ERR_9,
    I<20>:$STAT_RX_BLOCK_LOCK,
    I<1>:$STAT_RX_BROADCAST,
    I<3>:$STAT_RX_FRAGMENT,
    I<2>:$STAT_RX_FRAMING_ERR_0,
    I<2>:$STAT_RX_FRAMING_ERR_1,
    I<2>:$STAT_RX_FRAMING_ERR_10,
    I<2>:$STAT_RX_FRAMING_ERR_11,
    I<2>:$STAT_RX_FRAMING_ERR_12,
    I<2>:$STAT_RX_FRAMING_ERR_13,
    I<2>:$STAT_RX_FRAMING_ERR_14,
    I<2>:$STAT_RX_FRAMING_ERR_15,
    I<2>:$STAT_RX_FRAMING_ERR_16,
    I<2>:$STAT_RX_FRAMING_ERR_17,
    I<2>:$STAT_RX_FRAMING_ERR_18,
    I<2>:$STAT_RX_FRAMING_ERR_19,
    I<2>:$STAT_RX_FRAMING_ERR_2,
    I<2>:$STAT_RX_FRAMING_ERR_3,
    I<2>:$STAT_RX_FRAMING_ERR_4,
    I<2>:$STAT_RX_FRAMING_ERR_5,
    I<2>:$STAT_RX_FRAMING_ERR_6,
    I<2>:$STAT_RX_FRAMING_ERR_7,
    I<2>:$STAT_RX_FRAMING_ERR_8,
    I<2>:$STAT_RX_FRAMING_ERR_9,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_0,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_1,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_10,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_11,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_12,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_13,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_14,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_15,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_16,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_17,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_18,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_19,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_2,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_3,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_4,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_5,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_6,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_7,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_8,
    I<1>:$STAT_RX_FRAMING_ERR_VALID_9,
    I<1>:$STAT_RX_GOT_SIGNAL_OS,
    I<1>:$STAT_RX_HI_BER,
    I<1>:$STAT_RX_INRANGEERR,
    I<1>:$STAT_RX_INTERNAL_LOCAL_FAULT,
    I<1>:$STAT_RX_JABBER,
    I<8>:$STAT_RX_LANE0_VLM_BIP7,
    I<1>:$STAT_RX_LANE0_VLM_BIP7_VALID,
    I<1>:$STAT_RX_LOCAL_FAULT,
    I<20>:$STAT_RX_MF_ERR,
    I<20>:$STAT_RX_MF_LEN_ERR,
    I<20>:$STAT_RX_MF_REPEAT_ERR,
    I<1>:$STAT_RX_MISALIGNED,
    I<1>:$STAT_RX_MULTICAST,
    I<1>:$STAT_RX_OVERSIZE,
    I<1>:$STAT_RX_PACKET_1024_1518_BYTES,
    I<1>:$STAT_RX_PACKET_128_255_BYTES,
    I<1>:$STAT_RX_PACKET_1519_1522_BYTES,
    I<1>:$STAT_RX_PACKET_1523_1548_BYTES,
    I<1>:$STAT_RX_PACKET_1549_2047_BYTES,
    I<1>:$STAT_RX_PACKET_2048_4095_BYTES,
    I<1>:$STAT_RX_PACKET_256_511_BYTES,
    I<1>:$STAT_RX_PACKET_4096_8191_BYTES,
    I<1>:$STAT_RX_PACKET_512_1023_BYTES,
    I<1>:$STAT_RX_PACKET_64_BYTES,
    I<1>:$STAT_RX_PACKET_65_127_BYTES,
    I<1>:$STAT_RX_PACKET_8192_9215_BYTES,
    I<1>:$STAT_RX_PACKET_BAD_FCS,
    I<1>:$STAT_RX_PACKET_LARGE,
    I<3>:$STAT_RX_PACKET_SMALL,
    I<1>:$STAT_RX_PAUSE,
    I<16>:$STAT_RX_PAUSE_QUANTA0,
    I<16>:$STAT_RX_PAUSE_QUANTA1,
    I<16>:$STAT_RX_PAUSE_QUANTA2,
    I<16>:$STAT_RX_PAUSE_QUANTA3,
    I<16>:$STAT_RX_PAUSE_QUANTA4,
    I<16>:$STAT_RX_PAUSE_QUANTA5,
    I<16>:$STAT_RX_PAUSE_QUANTA6,
    I<16>:$STAT_RX_PAUSE_QUANTA7,
    I<16>:$STAT_RX_PAUSE_QUANTA8,
    I<9>:$STAT_RX_PAUSE_REQ,
    I<9>:$STAT_RX_PAUSE_VALID,
    I<1>:$STAT_RX_RECEIVED_LOCAL_FAULT,
    I<1>:$STAT_RX_REMOTE_FAULT,
    I<1>:$STAT_RX_RSFEC_AM_LOCK0,
    I<1>:$STAT_RX_RSFEC_AM_LOCK1,
    I<1>:$STAT_RX_RSFEC_AM_LOCK2,
    I<1>:$STAT_RX_RSFEC_AM_LOCK3,
    I<1>:$STAT_RX_RSFEC_CORRECTED_CW_INC,
    I<1>:$STAT_RX_RSFEC_CW_INC,
    I<3>:$STAT_RX_RSFEC_ERR_COUNT0_INC,
    I<3>:$STAT_RX_RSFEC_ERR_COUNT1_INC,
    I<3>:$STAT_RX_RSFEC_ERR_COUNT2_INC,
    I<3>:$STAT_RX_RSFEC_ERR_COUNT3_INC,
    I<1>:$STAT_RX_RSFEC_HI_SER,
    I<1>:$STAT_RX_RSFEC_LANE_ALIGNMENT_STATUS,
    I<14>:$STAT_RX_RSFEC_LANE_FILL_0,
    I<14>:$STAT_RX_RSFEC_LANE_FILL_1,
    I<14>:$STAT_RX_RSFEC_LANE_FILL_2,
    I<14>:$STAT_RX_RSFEC_LANE_FILL_3,
    I<8>:$STAT_RX_RSFEC_LANE_MAPPING,
    I<32>:$STAT_RX_RSFEC_RSVD,
    I<1>:$STAT_RX_RSFEC_UNCORRECTED_CW_INC,
    I<1>:$STAT_RX_STATUS,
    I<3>:$STAT_RX_STOMPED_FCS,
    I<20>:$STAT_RX_SYNCED,
    I<20>:$STAT_RX_SYNCED_ERR,
    I<3>:$STAT_RX_TEST_PATTERN_MISMATCH,
    I<1>:$STAT_RX_TOOLONG,
    I<7>:$STAT_RX_TOTAL_BYTES,
    I<14>:$STAT_RX_TOTAL_GOOD_BYTES,
    I<1>:$STAT_RX_TOTAL_GOOD_PACKETS,
    I<3>:$STAT_RX_TOTAL_PACKETS,
    I<1>:$STAT_RX_TRUNCATED,
    I<3>:$STAT_RX_UNDERSIZE,
    I<1>:$STAT_RX_UNICAST,
    I<1>:$STAT_RX_USER_PAUSE,
    I<1>:$STAT_RX_VLAN,
    I<20>:$STAT_RX_VL_DEMUXED,
    I<5>:$STAT_RX_VL_NUMBER_0,
    I<5>:$STAT_RX_VL_NUMBER_1,
    I<5>:$STAT_RX_VL_NUMBER_10,
    I<5>:$STAT_RX_VL_NUMBER_11,
    I<5>:$STAT_RX_VL_NUMBER_12,
    I<5>:$STAT_RX_VL_NUMBER_13,
    I<5>:$STAT_RX_VL_NUMBER_14,
    I<5>:$STAT_RX_VL_NUMBER_15,
    I<5>:$STAT_RX_VL_NUMBER_16,
    I<5>:$STAT_RX_VL_NUMBER_17,
    I<5>:$STAT_RX_VL_NUMBER_18,
    I<5>:$STAT_RX_VL_NUMBER_19,
    I<5>:$STAT_RX_VL_NUMBER_2,
    I<5>:$STAT_RX_VL_NUMBER_3,
    I<5>:$STAT_RX_VL_NUMBER_4,
    I<5>:$STAT_RX_VL_NUMBER_5,
    I<5>:$STAT_RX_VL_NUMBER_6,
    I<5>:$STAT_RX_VL_NUMBER_7,
    I<5>:$STAT_RX_VL_NUMBER_8,
    I<5>:$STAT_RX_VL_NUMBER_9,
    I<1>:$STAT_TX_BAD_FCS,
    I<1>:$STAT_TX_BROADCAST,
    I<1>:$STAT_TX_FRAME_ERROR,
    I<1>:$STAT_TX_LOCAL_FAULT,
    I<1>:$STAT_TX_MULTICAST,
    I<1>:$STAT_TX_PACKET_1024_1518_BYTES,
    I<1>:$STAT_TX_PACKET_128_255_BYTES,
    I<1>:$STAT_TX_PACKET_1519_1522_BYTES,
    I<1>:$STAT_TX_PACKET_1523_1548_BYTES,
    I<1>:$STAT_TX_PACKET_1549_2047_BYTES,
    I<1>:$STAT_TX_PACKET_2048_4095_BYTES,
    I<1>:$STAT_TX_PACKET_256_511_BYTES,
    I<1>:$STAT_TX_PACKET_4096_8191_BYTES,
    I<1>:$STAT_TX_PACKET_512_1023_BYTES,
    I<1>:$STAT_TX_PACKET_64_BYTES,
    I<1>:$STAT_TX_PACKET_65_127_BYTES,
    I<1>:$STAT_TX_PACKET_8192_9215_BYTES,
    I<1>:$STAT_TX_PACKET_LARGE,
    I<1>:$STAT_TX_PACKET_SMALL,
    I<1>:$STAT_TX_PAUSE,
    I<9>:$STAT_TX_PAUSE_VALID,
    I<1>:$STAT_TX_PTP_FIFO_READ_ERROR,
    I<1>:$STAT_TX_PTP_FIFO_WRITE_ERROR,
    I<6>:$STAT_TX_TOTAL_BYTES,
    I<14>:$STAT_TX_TOTAL_GOOD_BYTES,
    I<1>:$STAT_TX_TOTAL_GOOD_PACKETS,
    I<1>:$STAT_TX_TOTAL_PACKETS,
    I<1>:$STAT_TX_UNICAST,
    I<1>:$STAT_TX_USER_PAUSE,
    I<1>:$STAT_TX_VLAN,
    I<1>:$TX_OVFOUT,
    I<5>:$TX_PTP_PCSLANE_OUT,
    I<80>:$TX_PTP_TSTAMP_OUT,
    I<16>:$TX_PTP_TSTAMP_TAG_OUT,
    I<1>:$TX_PTP_TSTAMP_VALID_OUT,
    I<1>:$TX_RDYOUT,
    I<16>:$TX_SERDES_ALT_DATA0,
    I<16>:$TX_SERDES_ALT_DATA1,
    I<16>:$TX_SERDES_ALT_DATA2,
    I<16>:$TX_SERDES_ALT_DATA3,
    I<64>:$TX_SERDES_DATA0,
    I<64>:$TX_SERDES_DATA1,
    I<64>:$TX_SERDES_DATA2,
    I<64>:$TX_SERDES_DATA3,
    I<32>:$TX_SERDES_DATA4,
    I<32>:$TX_SERDES_DATA5,
    I<32>:$TX_SERDES_DATA6,
    I<32>:$TX_SERDES_DATA7,
    I<32>:$TX_SERDES_DATA8,
    I<32>:$TX_SERDES_DATA9,
    I<1>:$TX_UNFOUT
  );
}

def DCIRESET : XilinxPrimitiveOp<"DCIRESET", []> {
  let summary = "DCIRESET Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$RST,

    // DCIRESET parameters follows
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$LOCKED
  );
}

def DCMuADV : XilinxPrimitiveOp<"DCM_ADV", []> {
  let summary = "DCM_ADV Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLKFB,
    I<1>:$CLKIN,
    I<1>:$DCLK,
    I<1>:$DEN,
    I<1>:$DWE,
    I<1>:$PSCLK,
    I<1>:$PSEN,
    I<1>:$PSINCDEC,
    I<1>:$RST,
    I<16>:$DI,
    I<7>:$DADDR,

    // DCM_ADV parameters follows
    StrAttr:$CLKDV_DIVIDE,
    SI64Attr:$CLKFX_DIVIDE,
    SI64Attr:$CLKFX_MULTIPLY,
    StrAttr:$CLKIN_DIVIDE_BY_2,
    StrAttr:$CLKIN_PERIOD,
    StrAttr:$CLKOUT_PHASE_SHIFT,
    StrAttr:$CLK_FEEDBACK,
    StrAttr:$DCM_AUTOCALIBRATION,
    StrAttr:$DCM_PERFORMANCE_MODE,
    StrAttr:$DESKEW_ADJUST,
    StrAttr:$DFS_FREQUENCY_MODE,
    StrAttr:$DLL_FREQUENCY_MODE,
    StrAttr:$DUTY_CYCLE_CORRECTION,
    APIntAttr<I<16>>:$FACTORY_JF,
    SI64Attr:$MAXPERCLKIN,
    SI64Attr:$MAXPERPSCLK,
    SI64Attr:$PHASE_SHIFT,
    SI64Attr:$SIM_CLKIN_CYCLE_JITTER,
    SI64Attr:$SIM_CLKIN_PERIOD_JITTER,
    StrAttr:$SIM_DEVICE,
    StrAttr:$LOC,
    StrAttr:$STARTUP_WAIT
  );

  let results = (outs
    I<1>:$CLK0,
    I<1>:$CLK180,
    I<1>:$CLK270,
    I<1>:$CLK2X180,
    I<1>:$CLK2X,
    I<1>:$CLK90,
    I<1>:$CLKDV,
    I<1>:$CLKFX180,
    I<1>:$CLKFX,
    I<1>:$DRDY,
    I<1>:$LOCKED,
    I<1>:$PSDONE,
    I<16>:$DO
  );
}

def dcmuadvuclockudivideubyu2 : XilinxPrimitiveOp<"dcm_adv_clock_divide_by_2", []> {
  let summary = "dcm_adv_clock_divide_by_2 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$clock,
    I<1>:$clock_type,
    I<1>:$rst

    // dcm_adv_clock_divide_by_2 does not contain any parameters
  );

  let results = (outs
    I<1>:$clock_out
  );
}

def dcmuadvumaximumuperioducheck : XilinxPrimitiveOp<"dcm_adv_maximum_period_check", []> {
  let summary = "dcm_adv_maximum_period_check Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$clock,
    I<1>:$rst,

    // dcm_adv_maximum_period_check parameters follows
    StrAttr:$clock_name,
    SI64Attr:$maximum_period
  );

  let results = (outs
  );
}

def dcmuadvuclockulost : XilinxPrimitiveOp<"dcm_adv_clock_lost", []> {
  let summary = "dcm_adv_clock_lost Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$clock,
    I<1>:$enable,
    I<1>:$rst

    // dcm_adv_clock_lost does not contain any parameters
  );

  let results = (outs
    I<1>:$lost
  );
}

def DCMuSP : XilinxPrimitiveOp<"DCM_SP", []> {
  let summary = "DCM_SP Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLKFB,
    I<1>:$CLKIN,
    I<1>:$DSSEN,
    I<1>:$PSCLK,
    I<1>:$PSEN,
    I<1>:$PSINCDEC,
    I<1>:$RST,

    // DCM_SP parameters follows
    StrAttr:$CLKDV_DIVIDE,
    SI64Attr:$CLKFX_DIVIDE,
    SI64Attr:$CLKFX_MULTIPLY,
    StrAttr:$CLKIN_DIVIDE_BY_2,
    StrAttr:$CLKIN_PERIOD,
    StrAttr:$CLKOUT_PHASE_SHIFT,
    StrAttr:$CLK_FEEDBACK,
    StrAttr:$DESKEW_ADJUST,
    StrAttr:$DFS_FREQUENCY_MODE,
    StrAttr:$DLL_FREQUENCY_MODE,
    StrAttr:$DSS_MODE,
    StrAttr:$DUTY_CYCLE_CORRECTION,
    APIntAttr<I<16>>:$FACTORY_JF,
    SI64Attr:$MAXPERCLKIN,
    SI64Attr:$MAXPERPSCLK,
    SI64Attr:$PHASE_SHIFT,
    SI64Attr:$SIM_CLKIN_CYCLE_JITTER,
    SI64Attr:$SIM_CLKIN_PERIOD_JITTER,
    StrAttr:$STARTUP_WAIT,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$CLK0,
    I<1>:$CLK180,
    I<1>:$CLK270,
    I<1>:$CLK2X,
    I<1>:$CLK2X180,
    I<1>:$CLK90,
    I<1>:$CLKDV,
    I<1>:$CLKFX,
    I<1>:$CLKFX180,
    I<1>:$LOCKED,
    I<1>:$PSDONE,
    I<8>:$STATUS
  );
}

def dcmuspuclockudivideubyu2 : XilinxPrimitiveOp<"dcm_sp_clock_divide_by_2", []> {
  let summary = "dcm_sp_clock_divide_by_2 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$clock,
    I<1>:$clock_type,
    I<1>:$rst

    // dcm_sp_clock_divide_by_2 does not contain any parameters
  );

  let results = (outs
    I<1>:$clock_out
  );
}

def dcmuspumaximumuperioducheck : XilinxPrimitiveOp<"dcm_sp_maximum_period_check", []> {
  let summary = "dcm_sp_maximum_period_check Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$clock,
    I<1>:$rst,

    // dcm_sp_maximum_period_check parameters follows
    StrAttr:$clock_name,
    SI64Attr:$maximum_period
  );

  let results = (outs
  );
}

def dcmuspuclockulost : XilinxPrimitiveOp<"dcm_sp_clock_lost", []> {
  let summary = "dcm_sp_clock_lost Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$clock,
    I<1>:$enable,
    I<1>:$rst

    // dcm_sp_clock_lost does not contain any parameters
  );

  let results = (outs
    I<1>:$lost
  );
}

def DIFFINBUF : XilinxPrimitiveOp<"DIFFINBUF", []> {
  let summary = "DIFFINBUF Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$DIFF_IN_N,
    I<1>:$DIFF_IN_P,
    I<4>:$OSC,
    I<2>:$OSC_EN,
    I<1>:$VREF,

    // DIFFINBUF parameters follows
    StrAttr:$DIFF_TERM,
    StrAttr:$DQS_BIAS,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$ISTANDARD,
    SI64Attr:$SIM_INPUT_BUFFER_OFFSET
  );

  let results = (outs
    I<1>:$O,
    I<1>:$O_B
  );
}

def DNAuPORT : XilinxPrimitiveOp<"DNA_PORT", []> {
  let summary = "DNA_PORT Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLK,
    I<1>:$DIN,
    I<1>:$READ,
    I<1>:$SHIFT,

    // DNA_PORT parameters follows
    APIntAttr<I<57>>:$SIM_DNA_VALUE,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$DOUT
  );
}

def DPHYuDIFFINBUF : XilinxPrimitiveOp<"DPHY_DIFFINBUF", []> {
  let summary = "DPHY_DIFFINBUF Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$HSRX_DISABLE,
    I<1>:$I,
    I<1>:$IB,
    I<1>:$LPRX_DISABLE,

    // DPHY_DIFFINBUF parameters follows
    StrAttr:$DIFF_TERM,
    StrAttr:$ISTANDARD
  );

  let results = (outs
    I<1>:$HSRX_O,
    I<1>:$LPRX_O_N,
    I<1>:$LPRX_O_P
  );
}

def DSP48E1 : XilinxPrimitiveOp<"DSP48E1", []> {
  let summary = "DSP48E1 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<30>:$A,
    I<30>:$ACIN,
    I<4>:$ALUMODE,
    I<18>:$B,
    I<18>:$BCIN,
    I<48>:$C,
    I<1>:$CARRYCASCIN,
    I<1>:$CARRYIN,
    I<3>:$CARRYINSEL,
    I<1>:$CEA1,
    I<1>:$CEA2,
    I<1>:$CEAD,
    I<1>:$CEALUMODE,
    I<1>:$CEB1,
    I<1>:$CEB2,
    I<1>:$CEC,
    I<1>:$CECARRYIN,
    I<1>:$CECTRL,
    I<1>:$CED,
    I<1>:$CEINMODE,
    I<1>:$CEM,
    I<1>:$CEP,
    I<1>:$CLK,
    I<25>:$D,
    I<5>:$INMODE,
    I<1>:$MULTSIGNIN,
    I<7>:$OPMODE,
    I<48>:$PCIN,
    I<1>:$RSTA,
    I<1>:$RSTALLCARRYIN,
    I<1>:$RSTALUMODE,
    I<1>:$RSTB,
    I<1>:$RSTC,
    I<1>:$RSTCTRL,
    I<1>:$RSTD,
    I<1>:$RSTINMODE,
    I<1>:$RSTM,
    I<1>:$RSTP,

    // DSP48E1 parameters follows
    SI64Attr:$ACASCREG,
    SI64Attr:$ADREG,
    SI64Attr:$ALUMODEREG,
    SI64Attr:$AREG,
    StrAttr:$AUTORESET_PATDET,
    StrAttr:$A_INPUT,
    SI64Attr:$BCASCREG,
    SI64Attr:$BREG,
    StrAttr:$B_INPUT,
    SI64Attr:$CARRYINREG,
    SI64Attr:$CARRYINSELREG,
    SI64Attr:$CREG,
    SI64Attr:$DREG,
    SI64Attr:$INMODEREG,
    APIntAttr<I<4>>:$IS_ALUMODE_INVERTED,
    APIntAttr<I<1>>:$IS_CARRYIN_INVERTED,
    APIntAttr<I<1>>:$IS_CLK_INVERTED,
    APIntAttr<I<5>>:$IS_INMODE_INVERTED,
    APIntAttr<I<7>>:$IS_OPMODE_INVERTED,
    APIntAttr<I<48>>:$MASK,
    SI64Attr:$MREG,
    SI64Attr:$OPMODEREG,
    APIntAttr<I<48>>:$PATTERN,
    SI64Attr:$PREG,
    StrAttr:$SEL_MASK,
    StrAttr:$SEL_PATTERN,
    StrAttr:$USE_DPORT,
    StrAttr:$USE_MULT,
    StrAttr:$USE_PATTERN_DETECT,
    StrAttr:$USE_SIMD
  );

  let results = (outs
    I<30>:$ACOUT,
    I<18>:$BCOUT,
    I<1>:$CARRYCASCOUT,
    I<4>:$CARRYOUT,
    I<1>:$MULTSIGNOUT,
    I<1>:$OVERFLOW_,
    I<48>:$P,
    I<1>:$PATTERNBDETECT,
    I<1>:$PATTERNDETECT,
    I<48>:$PCOUT,
    I<1>:$UNDERFLOW_
  );
}

def FRAMEuECCE3 : XilinxPrimitiveOp<"FRAME_ECCE3", []> {
  let summary = "FRAME_ECCE3 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<2>:$FARSEL,
    I<1>:$ICAPBOTCLK,
    I<1>:$ICAPTOPCLK

    // FRAME_ECCE3 does not contain any parameters
  );

  let results = (outs
    I<1>:$CRCERROR,
    I<1>:$ECCERRORNOTSINGLE,
    I<1>:$ECCERRORSINGLE,
    I<1>:$ENDOFFRAME,
    I<1>:$ENDOFSCAN,
    I<26>:$FAR
  );
}

def FRAMEuECCE4 : XilinxPrimitiveOp<"FRAME_ECCE4", []> {
  let summary = "FRAME_ECCE4 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<2>:$FARSEL,
    I<1>:$ICAPBOTCLK,
    I<1>:$ICAPTOPCLK

    // FRAME_ECCE4 does not contain any parameters
  );

  let results = (outs
    I<1>:$CRCERROR,
    I<1>:$ECCERRORNOTSINGLE,
    I<1>:$ECCERRORSINGLE,
    I<1>:$ENDOFFRAME,
    I<1>:$ENDOFSCAN,
    I<27>:$FAR
  );
}

def GND : XilinxPrimitiveOp<"GND", []> {
  let summary = "GND Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.

    // GND parameters follows
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$G
  );
}

def GTHE2uCHANNEL : XilinxPrimitiveOp<"GTHE2_CHANNEL", []> {
  let summary = "GTHE2_CHANNEL Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CFGRESET,
    I<1>:$CLKRSVD0,
    I<1>:$CLKRSVD1,
    I<1>:$CPLLLOCKDETCLK,
    I<1>:$CPLLLOCKEN,
    I<1>:$CPLLPD,
    I<1>:$CPLLRESET,
    I<1>:$DMONFIFORESET,
    I<1>:$DMONITORCLK,
    I<1>:$DRPCLK,
    I<1>:$DRPEN,
    I<1>:$DRPWE,
    I<1>:$EYESCANMODE,
    I<1>:$EYESCANRESET,
    I<1>:$EYESCANTRIGGER,
    I<1>:$GTGREFCLK,
    I<1>:$GTHRXN,
    I<1>:$GTHRXP,
    I<1>:$GTNORTHREFCLK0,
    I<1>:$GTNORTHREFCLK1,
    I<1>:$GTREFCLK0,
    I<1>:$GTREFCLK1,
    I<1>:$GTRESETSEL,
    I<1>:$GTRXRESET,
    I<1>:$GTSOUTHREFCLK0,
    I<1>:$GTSOUTHREFCLK1,
    I<1>:$GTTXRESET,
    I<1>:$QPLLCLK,
    I<1>:$QPLLREFCLK,
    I<1>:$RESETOVRD,
    I<1>:$RX8B10BEN,
    I<1>:$RXBUFRESET,
    I<1>:$RXCDRFREQRESET,
    I<1>:$RXCDRHOLD,
    I<1>:$RXCDROVRDEN,
    I<1>:$RXCDRRESET,
    I<1>:$RXCDRRESETRSV,
    I<1>:$RXCHBONDEN,
    I<1>:$RXCHBONDMASTER,
    I<1>:$RXCHBONDSLAVE,
    I<1>:$RXCOMMADETEN,
    I<1>:$RXDDIEN,
    I<1>:$RXDFEAGCHOLD,
    I<1>:$RXDFEAGCOVRDEN,
    I<1>:$RXDFECM1EN,
    I<1>:$RXDFELFHOLD,
    I<1>:$RXDFELFOVRDEN,
    I<1>:$RXDFELPMRESET,
    I<1>:$RXDFESLIDETAPADAPTEN,
    I<1>:$RXDFESLIDETAPHOLD,
    I<1>:$RXDFESLIDETAPINITOVRDEN,
    I<1>:$RXDFESLIDETAPONLYADAPTEN,
    I<1>:$RXDFESLIDETAPOVRDEN,
    I<1>:$RXDFESLIDETAPSTROBE,
    I<1>:$RXDFETAP2HOLD,
    I<1>:$RXDFETAP2OVRDEN,
    I<1>:$RXDFETAP3HOLD,
    I<1>:$RXDFETAP3OVRDEN,
    I<1>:$RXDFETAP4HOLD,
    I<1>:$RXDFETAP4OVRDEN,
    I<1>:$RXDFETAP5HOLD,
    I<1>:$RXDFETAP5OVRDEN,
    I<1>:$RXDFETAP6HOLD,
    I<1>:$RXDFETAP6OVRDEN,
    I<1>:$RXDFETAP7HOLD,
    I<1>:$RXDFETAP7OVRDEN,
    I<1>:$RXDFEUTHOLD,
    I<1>:$RXDFEUTOVRDEN,
    I<1>:$RXDFEVPHOLD,
    I<1>:$RXDFEVPOVRDEN,
    I<1>:$RXDFEVSEN,
    I<1>:$RXDFEXYDEN,
    I<1>:$RXDLYBYPASS,
    I<1>:$RXDLYEN,
    I<1>:$RXDLYOVRDEN,
    I<1>:$RXDLYSRESET,
    I<1>:$RXGEARBOXSLIP,
    I<1>:$RXLPMEN,
    I<1>:$RXLPMHFHOLD,
    I<1>:$RXLPMHFOVRDEN,
    I<1>:$RXLPMLFHOLD,
    I<1>:$RXLPMLFKLOVRDEN,
    I<1>:$RXMCOMMAALIGNEN,
    I<1>:$RXOOBRESET,
    I<1>:$RXOSCALRESET,
    I<1>:$RXOSHOLD,
    I<1>:$RXOSINTEN,
    I<1>:$RXOSINTHOLD,
    I<1>:$RXOSINTNTRLEN,
    I<1>:$RXOSINTOVRDEN,
    I<1>:$RXOSINTSTROBE,
    I<1>:$RXOSINTTESTOVRDEN,
    I<1>:$RXOSOVRDEN,
    I<1>:$RXPCOMMAALIGNEN,
    I<1>:$RXPCSRESET,
    I<1>:$RXPHALIGN,
    I<1>:$RXPHALIGNEN,
    I<1>:$RXPHDLYPD,
    I<1>:$RXPHDLYRESET,
    I<1>:$RXPHOVRDEN,
    I<1>:$RXPMARESET,
    I<1>:$RXPOLARITY,
    I<1>:$RXPRBSCNTRESET,
    I<1>:$RXQPIEN,
    I<1>:$RXRATEMODE,
    I<1>:$RXSLIDE,
    I<1>:$RXSYNCALLIN,
    I<1>:$RXSYNCIN,
    I<1>:$RXSYNCMODE,
    I<1>:$RXUSERRDY,
    I<1>:$RXUSRCLK2,
    I<1>:$RXUSRCLK,
    I<1>:$SETERRSTATUS,
    I<1>:$SIGVALIDCLK,
    I<1>:$TX8B10BEN,
    I<1>:$TXCOMINIT,
    I<1>:$TXCOMSAS,
    I<1>:$TXCOMWAKE,
    I<1>:$TXDEEMPH,
    I<1>:$TXDETECTRX,
    I<1>:$TXDIFFPD,
    I<1>:$TXDLYBYPASS,
    I<1>:$TXDLYEN,
    I<1>:$TXDLYHOLD,
    I<1>:$TXDLYOVRDEN,
    I<1>:$TXDLYSRESET,
    I<1>:$TXDLYUPDOWN,
    I<1>:$TXELECIDLE,
    I<1>:$TXINHIBIT,
    I<1>:$TXPCSRESET,
    I<1>:$TXPDELECIDLEMODE,
    I<1>:$TXPHALIGN,
    I<1>:$TXPHALIGNEN,
    I<1>:$TXPHDLYPD,
    I<1>:$TXPHDLYRESET,
    I<1>:$TXPHDLYTSTCLK,
    I<1>:$TXPHINIT,
    I<1>:$TXPHOVRDEN,
    I<1>:$TXPIPPMEN,
    I<1>:$TXPIPPMOVRDEN,
    I<1>:$TXPIPPMPD,
    I<1>:$TXPIPPMSEL,
    I<1>:$TXPISOPD,
    I<1>:$TXPMARESET,
    I<1>:$TXPOLARITY,
    I<1>:$TXPOSTCURSORINV,
    I<1>:$TXPRBSFORCEERR,
    I<1>:$TXPRECURSORINV,
    I<1>:$TXQPIBIASEN,
    I<1>:$TXQPISTRONGPDOWN,
    I<1>:$TXQPIWEAKPUP,
    I<1>:$TXRATEMODE,
    I<1>:$TXSTARTSEQ,
    I<1>:$TXSWING,
    I<1>:$TXSYNCALLIN,
    I<1>:$TXSYNCIN,
    I<1>:$TXSYNCMODE,
    I<1>:$TXUSERRDY,
    I<1>:$TXUSRCLK2,
    I<1>:$TXUSRCLK,
    I<14>:$RXADAPTSELTEST,
    I<16>:$DRPDI,
    I<16>:$GTRSVD,
    I<16>:$PCSRSVDIN,
    I<20>:$TSTIN,
    I<2>:$RXELECIDLEMODE,
    I<2>:$RXMONITORSEL,
    I<2>:$RXPD,
    I<2>:$RXSYSCLKSEL,
    I<2>:$TXPD,
    I<2>:$TXSYSCLKSEL,
    I<3>:$CPLLREFCLKSEL,
    I<3>:$LOOPBACK,
    I<3>:$RXCHBONDLEVEL,
    I<3>:$RXOUTCLKSEL,
    I<3>:$RXPRBSSEL,
    I<3>:$RXRATE,
    I<3>:$TXBUFDIFFCTRL,
    I<3>:$TXHEADER,
    I<3>:$TXMARGIN,
    I<3>:$TXOUTCLKSEL,
    I<3>:$TXPRBSSEL,
    I<3>:$TXRATE,
    I<4>:$RXOSINTCFG,
    I<4>:$RXOSINTID0,
    I<4>:$TXDIFFCTRL,
    I<5>:$PCSRSVDIN2,
    I<5>:$PMARSVDIN,
    I<5>:$RXCHBONDI,
    I<5>:$RXDFEAGCTRL,
    I<5>:$RXDFESLIDETAP,
    I<5>:$TXPIPPMSTEPSIZE,
    I<5>:$TXPOSTCURSOR,
    I<5>:$TXPRECURSOR,
    I<6>:$RXDFESLIDETAPID,
    I<64>:$TXDATA,
    I<7>:$TXMAINCURSOR,
    I<7>:$TXSEQUENCE,
    I<8>:$TX8B10BBYPASS,
    I<8>:$TXCHARDISPMODE,
    I<8>:$TXCHARDISPVAL,
    I<8>:$TXCHARISK,
    I<9>:$DRPADDR,

    // GTHE2_CHANNEL parameters follows
    StrAttr:$LOC,
    APIntAttr<I<1>>:$ACJTAG_DEBUG_MODE,
    APIntAttr<I<1>>:$ACJTAG_MODE,
    APIntAttr<I<1>>:$ACJTAG_RESET,
    APIntAttr<I<20>>:$ADAPT_CFG0,
    StrAttr:$ALIGN_COMMA_DOUBLE,
    APIntAttr<I<10>>:$ALIGN_COMMA_ENABLE,
    SI64Attr:$ALIGN_COMMA_WORD,
    StrAttr:$ALIGN_MCOMMA_DET,
    APIntAttr<I<10>>:$ALIGN_MCOMMA_VALUE,
    StrAttr:$ALIGN_PCOMMA_DET,
    APIntAttr<I<10>>:$ALIGN_PCOMMA_VALUE,
    APIntAttr<I<1>>:$A_RXOSCALRESET,
    StrAttr:$CBCC_DATA_SOURCE_SEL,
    APIntAttr<I<42>>:$CFOK_CFG,
    APIntAttr<I<6>>:$CFOK_CFG2,
    APIntAttr<I<6>>:$CFOK_CFG3,
    StrAttr:$CHAN_BOND_KEEP_ALIGN,
    SI64Attr:$CHAN_BOND_MAX_SKEW,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_1,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_2,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_3,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_4,
    APIntAttr<I<4>>:$CHAN_BOND_SEQ_1_ENABLE,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_1,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_2,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_3,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_4,
    APIntAttr<I<4>>:$CHAN_BOND_SEQ_2_ENABLE,
    StrAttr:$CHAN_BOND_SEQ_2_USE,
    SI64Attr:$CHAN_BOND_SEQ_LEN,
    StrAttr:$CLK_CORRECT_USE,
    StrAttr:$CLK_COR_KEEP_IDLE,
    SI64Attr:$CLK_COR_MAX_LAT,
    SI64Attr:$CLK_COR_MIN_LAT,
    StrAttr:$CLK_COR_PRECEDENCE,
    SI64Attr:$CLK_COR_REPEAT_WAIT,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_1,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_2,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_3,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_4,
    APIntAttr<I<4>>:$CLK_COR_SEQ_1_ENABLE,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_1,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_2,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_3,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_4,
    APIntAttr<I<4>>:$CLK_COR_SEQ_2_ENABLE,
    StrAttr:$CLK_COR_SEQ_2_USE,
    SI64Attr:$CLK_COR_SEQ_LEN,
    APIntAttr<I<29>>:$CPLL_CFG,
    SI64Attr:$CPLL_FBDIV,
    SI64Attr:$CPLL_FBDIV_45,
    APIntAttr<I<24>>:$CPLL_INIT_CFG,
    APIntAttr<I<16>>:$CPLL_LOCK_CFG,
    SI64Attr:$CPLL_REFCLK_DIV,
    StrAttr:$DEC_MCOMMA_DETECT,
    StrAttr:$DEC_PCOMMA_DETECT,
    StrAttr:$DEC_VALID_COMMA_ONLY,
    APIntAttr<I<24>>:$DMONITOR_CFG,
    APIntAttr<I<1>>:$ES_CLK_PHASE_SEL,
    APIntAttr<I<6>>:$ES_CONTROL,
    StrAttr:$ES_ERRDET_EN,
    StrAttr:$ES_EYE_SCAN_EN,
    APIntAttr<I<12>>:$ES_HORZ_OFFSET,
    APIntAttr<I<10>>:$ES_PMA_CFG,
    APIntAttr<I<5>>:$ES_PRESCALE,
    APIntAttr<I<80>>:$ES_QUALIFIER,
    APIntAttr<I<80>>:$ES_QUAL_MASK,
    APIntAttr<I<80>>:$ES_SDATA_MASK,
    APIntAttr<I<9>>:$ES_VERT_OFFSET,
    APIntAttr<I<4>>:$FTS_DESKEW_SEQ_ENABLE,
    APIntAttr<I<4>>:$FTS_LANE_DESKEW_CFG,
    StrAttr:$FTS_LANE_DESKEW_EN,
    APIntAttr<I<3>>:$GEARBOX_MODE,
    APIntAttr<I<1>>:$IS_CLKRSVD0_INVERTED,
    APIntAttr<I<1>>:$IS_CLKRSVD1_INVERTED,
    APIntAttr<I<1>>:$IS_CPLLLOCKDETCLK_INVERTED,
    APIntAttr<I<1>>:$IS_DMONITORCLK_INVERTED,
    APIntAttr<I<1>>:$IS_DRPCLK_INVERTED,
    APIntAttr<I<1>>:$IS_GTGREFCLK_INVERTED,
    APIntAttr<I<1>>:$IS_RXUSRCLK2_INVERTED,
    APIntAttr<I<1>>:$IS_RXUSRCLK_INVERTED,
    APIntAttr<I<1>>:$IS_SIGVALIDCLK_INVERTED,
    APIntAttr<I<1>>:$IS_TXPHDLYTSTCLK_INVERTED,
    APIntAttr<I<1>>:$IS_TXUSRCLK2_INVERTED,
    APIntAttr<I<1>>:$IS_TXUSRCLK_INVERTED,
    APIntAttr<I<1>>:$LOOPBACK_CFG,
    APIntAttr<I<2>>:$OUTREFCLK_SEL_INV,
    StrAttr:$PCS_PCIE_EN,
    APIntAttr<I<48>>:$PCS_RSVD_ATTR,
    APIntAttr<I<12>>:$PD_TRANS_TIME_FROM_P2,
    APIntAttr<I<8>>:$PD_TRANS_TIME_NONE_P2,
    APIntAttr<I<8>>:$PD_TRANS_TIME_TO_P2,
    APIntAttr<I<32>>:$PMA_RSV,
    APIntAttr<I<32>>:$PMA_RSV2,
    APIntAttr<I<2>>:$PMA_RSV3,
    APIntAttr<I<15>>:$PMA_RSV4,
    APIntAttr<I<4>>:$PMA_RSV5,
    APIntAttr<I<1>>:$RESET_POWERSAVE_DISABLE,
    APIntAttr<I<5>>:$RXBUFRESET_TIME,
    StrAttr:$RXBUF_ADDR_MODE,
    APIntAttr<I<4>>:$RXBUF_EIDLE_HI_CNT,
    APIntAttr<I<4>>:$RXBUF_EIDLE_LO_CNT,
    StrAttr:$RXBUF_EN,
    StrAttr:$RXBUF_RESET_ON_CB_CHANGE,
    StrAttr:$RXBUF_RESET_ON_COMMAALIGN,
    StrAttr:$RXBUF_RESET_ON_EIDLE,
    StrAttr:$RXBUF_RESET_ON_RATE_CHANGE,
    SI64Attr:$RXBUF_THRESH_OVFLW,
    StrAttr:$RXBUF_THRESH_OVRD,
    SI64Attr:$RXBUF_THRESH_UNDFLW,
    APIntAttr<I<5>>:$RXCDRFREQRESET_TIME,
    APIntAttr<I<5>>:$RXCDRPHRESET_TIME,
    APIntAttr<I<83>>:$RXCDR_CFG,
    APIntAttr<I<1>>:$RXCDR_FR_RESET_ON_EIDLE,
    APIntAttr<I<1>>:$RXCDR_HOLD_DURING_EIDLE,
    APIntAttr<I<6>>:$RXCDR_LOCK_CFG,
    APIntAttr<I<1>>:$RXCDR_PH_RESET_ON_EIDLE,
    APIntAttr<I<7>>:$RXDFELPMRESET_TIME,
    APIntAttr<I<16>>:$RXDLY_CFG,
    APIntAttr<I<9>>:$RXDLY_LCFG,
    APIntAttr<I<16>>:$RXDLY_TAP_CFG,
    StrAttr:$RXGEARBOX_EN,
    APIntAttr<I<5>>:$RXISCANRESET_TIME,
    APIntAttr<I<14>>:$RXLPM_HF_CFG,
    APIntAttr<I<18>>:$RXLPM_LF_CFG,
    APIntAttr<I<7>>:$RXOOB_CFG,
    StrAttr:$RXOOB_CLK_CFG,
    APIntAttr<I<5>>:$RXOSCALRESET_TIME,
    APIntAttr<I<5>>:$RXOSCALRESET_TIMEOUT,
    SI64Attr:$RXOUT_DIV,
    APIntAttr<I<5>>:$RXPCSRESET_TIME,
    APIntAttr<I<24>>:$RXPHDLY_CFG,
    APIntAttr<I<24>>:$RXPH_CFG,
    APIntAttr<I<5>>:$RXPH_MONITOR_SEL,
    APIntAttr<I<2>>:$RXPI_CFG0,
    APIntAttr<I<2>>:$RXPI_CFG1,
    APIntAttr<I<2>>:$RXPI_CFG2,
    APIntAttr<I<2>>:$RXPI_CFG3,
    APIntAttr<I<1>>:$RXPI_CFG4,
    APIntAttr<I<1>>:$RXPI_CFG5,
    APIntAttr<I<3>>:$RXPI_CFG6,
    APIntAttr<I<5>>:$RXPMARESET_TIME,
    APIntAttr<I<1>>:$RXPRBS_ERR_LOOPBACK,
    SI64Attr:$RXSLIDE_AUTO_WAIT,
    StrAttr:$RXSLIDE_MODE,
    APIntAttr<I<1>>:$RXSYNC_MULTILANE,
    APIntAttr<I<1>>:$RXSYNC_OVRD,
    APIntAttr<I<1>>:$RXSYNC_SKIP_DA,
    APIntAttr<I<24>>:$RX_BIAS_CFG,
    APIntAttr<I<6>>:$RX_BUFFER_CFG,
    SI64Attr:$RX_CLK25_DIV,
    APIntAttr<I<1>>:$RX_CLKMUX_PD,
    APIntAttr<I<2>>:$RX_CM_SEL,
    APIntAttr<I<4>>:$RX_CM_TRIM,
    SI64Attr:$RX_DATA_WIDTH,
    APIntAttr<I<6>>:$RX_DDI_SEL,
    APIntAttr<I<14>>:$RX_DEBUG_CFG,
    StrAttr:$RX_DEFER_RESET_BUF_EN,
    APIntAttr<I<4>>:$RX_DFELPM_CFG0,
    APIntAttr<I<1>>:$RX_DFELPM_CFG1,
    APIntAttr<I<1>>:$RX_DFELPM_KLKH_AGC_STUP_EN,
    APIntAttr<I<2>>:$RX_DFE_AGC_CFG0,
    APIntAttr<I<3>>:$RX_DFE_AGC_CFG1,
    APIntAttr<I<4>>:$RX_DFE_AGC_CFG2,
    APIntAttr<I<1>>:$RX_DFE_AGC_OVRDEN,
    APIntAttr<I<23>>:$RX_DFE_GAIN_CFG,
    APIntAttr<I<12>>:$RX_DFE_H2_CFG,
    APIntAttr<I<12>>:$RX_DFE_H3_CFG,
    APIntAttr<I<11>>:$RX_DFE_H4_CFG,
    APIntAttr<I<11>>:$RX_DFE_H5_CFG,
    APIntAttr<I<11>>:$RX_DFE_H6_CFG,
    APIntAttr<I<11>>:$RX_DFE_H7_CFG,
    APIntAttr<I<33>>:$RX_DFE_KL_CFG,
    APIntAttr<I<2>>:$RX_DFE_KL_LPM_KH_CFG0,
    APIntAttr<I<3>>:$RX_DFE_KL_LPM_KH_CFG1,
    APIntAttr<I<4>>:$RX_DFE_KL_LPM_KH_CFG2,
    APIntAttr<I<1>>:$RX_DFE_KL_LPM_KH_OVRDEN,
    APIntAttr<I<2>>:$RX_DFE_KL_LPM_KL_CFG0,
    APIntAttr<I<3>>:$RX_DFE_KL_LPM_KL_CFG1,
    APIntAttr<I<4>>:$RX_DFE_KL_LPM_KL_CFG2,
    APIntAttr<I<1>>:$RX_DFE_KL_LPM_KL_OVRDEN,
    APIntAttr<I<16>>:$RX_DFE_LPM_CFG,
    APIntAttr<I<1>>:$RX_DFE_LPM_HOLD_DURING_EIDLE,
    APIntAttr<I<54>>:$RX_DFE_ST_CFG,
    APIntAttr<I<17>>:$RX_DFE_UT_CFG,
    APIntAttr<I<17>>:$RX_DFE_VP_CFG,
    StrAttr:$RX_DISPERR_SEQ_MATCH,
    SI64Attr:$RX_INT_DATAWIDTH,
    APIntAttr<I<13>>:$RX_OS_CFG,
    SI64Attr:$RX_SIG_VALID_DLY,
    StrAttr:$RX_XCLK_SEL,
    SI64Attr:$SAS_MAX_COM,
    SI64Attr:$SAS_MIN_COM,
    APIntAttr<I<4>>:$SATA_BURST_SEQ_LEN,
    APIntAttr<I<3>>:$SATA_BURST_VAL,
    StrAttr:$SATA_CPLL_CFG,
    APIntAttr<I<3>>:$SATA_EIDLE_VAL,
    SI64Attr:$SATA_MAX_BURST,
    SI64Attr:$SATA_MAX_INIT,
    SI64Attr:$SATA_MAX_WAKE,
    SI64Attr:$SATA_MIN_BURST,
    SI64Attr:$SATA_MIN_INIT,
    SI64Attr:$SATA_MIN_WAKE,
    StrAttr:$SHOW_REALIGN_COMMA,
    APIntAttr<I<3>>:$SIM_CPLLREFCLK_SEL,
    StrAttr:$SIM_RECEIVER_DETECT_PASS,
    StrAttr:$SIM_RESET_SPEEDUP,
    StrAttr:$SIM_TX_EIDLE_DRIVE_LEVEL,
    StrAttr:$SIM_VERSION,
    APIntAttr<I<15>>:$TERM_RCAL_CFG,
    APIntAttr<I<3>>:$TERM_RCAL_OVRD,
    APIntAttr<I<8>>:$TRANS_TIME_RATE,
    APIntAttr<I<32>>:$TST_RSV,
    StrAttr:$TXBUF_EN,
    StrAttr:$TXBUF_RESET_ON_RATE_CHANGE,
    APIntAttr<I<16>>:$TXDLY_CFG,
    APIntAttr<I<9>>:$TXDLY_LCFG,
    APIntAttr<I<16>>:$TXDLY_TAP_CFG,
    StrAttr:$TXGEARBOX_EN,
    APIntAttr<I<1>>:$TXOOB_CFG,
    SI64Attr:$TXOUT_DIV,
    APIntAttr<I<5>>:$TXPCSRESET_TIME,
    APIntAttr<I<24>>:$TXPHDLY_CFG,
    APIntAttr<I<16>>:$TXPH_CFG,
    APIntAttr<I<5>>:$TXPH_MONITOR_SEL,
    APIntAttr<I<2>>:$TXPI_CFG0,
    APIntAttr<I<2>>:$TXPI_CFG1,
    APIntAttr<I<2>>:$TXPI_CFG2,
    APIntAttr<I<1>>:$TXPI_CFG3,
    APIntAttr<I<1>>:$TXPI_CFG4,
    APIntAttr<I<3>>:$TXPI_CFG5,
    APIntAttr<I<1>>:$TXPI_GREY_SEL,
    APIntAttr<I<1>>:$TXPI_INVSTROBE_SEL,
    StrAttr:$TXPI_PPMCLK_SEL,
    APIntAttr<I<8>>:$TXPI_PPM_CFG,
    APIntAttr<I<3>>:$TXPI_SYNFREQ_PPM,
    APIntAttr<I<5>>:$TXPMARESET_TIME,
    APIntAttr<I<1>>:$TXSYNC_MULTILANE,
    APIntAttr<I<1>>:$TXSYNC_OVRD,
    APIntAttr<I<1>>:$TXSYNC_SKIP_DA,
    SI64Attr:$TX_CLK25_DIV,
    APIntAttr<I<1>>:$TX_CLKMUX_PD,
    SI64Attr:$TX_DATA_WIDTH,
    APIntAttr<I<6>>:$TX_DEEMPH0,
    APIntAttr<I<6>>:$TX_DEEMPH1,
    StrAttr:$TX_DRIVE_MODE,
    APIntAttr<I<3>>:$TX_EIDLE_ASSERT_DELAY,
    APIntAttr<I<3>>:$TX_EIDLE_DEASSERT_DELAY,
    SI64Attr:$TX_INT_DATAWIDTH,
    StrAttr:$TX_LOOPBACK_DRIVE_HIZ,
    APIntAttr<I<1>>:$TX_MAINCURSOR_SEL,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_0,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_1,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_2,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_3,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_4,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_0,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_1,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_2,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_3,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_4,
    APIntAttr<I<1>>:$TX_QPI_STATUS_EN,
    APIntAttr<I<14>>:$TX_RXDETECT_CFG,
    APIntAttr<I<17>>:$TX_RXDETECT_PRECHARGE_TIME,
    APIntAttr<I<3>>:$TX_RXDETECT_REF,
    StrAttr:$TX_XCLK_SEL,
    APIntAttr<I<1>>:$UCODEER_CLR,
    APIntAttr<I<1>>:$USE_PCS_CLK_PHASE_SEL
  );

  let results = (outs
    I<1>:$CPLLFBCLKLOST,
    I<1>:$CPLLLOCK,
    I<1>:$CPLLREFCLKLOST,
    I<1>:$DRPRDY,
    I<1>:$EYESCANDATAERROR,
    I<1>:$GTHTXN,
    I<1>:$GTHTXP,
    I<1>:$GTREFCLKMONITOR,
    I<1>:$PHYSTATUS,
    I<1>:$RSOSINTDONE,
    I<1>:$RXBYTEISALIGNED,
    I<1>:$RXBYTEREALIGN,
    I<1>:$RXCDRLOCK,
    I<1>:$RXCHANBONDSEQ,
    I<1>:$RXCHANISALIGNED,
    I<1>:$RXCHANREALIGN,
    I<1>:$RXCOMINITDET,
    I<1>:$RXCOMMADET,
    I<1>:$RXCOMSASDET,
    I<1>:$RXCOMWAKEDET,
    I<1>:$RXDFESLIDETAPSTARTED,
    I<1>:$RXDFESLIDETAPSTROBEDONE,
    I<1>:$RXDFESLIDETAPSTROBESTARTED,
    I<1>:$RXDFESTADAPTDONE,
    I<1>:$RXDLYSRESETDONE,
    I<1>:$RXELECIDLE,
    I<1>:$RXOSINTSTARTED,
    I<1>:$RXOSINTSTROBEDONE,
    I<1>:$RXOSINTSTROBESTARTED,
    I<1>:$RXOUTCLK,
    I<1>:$RXOUTCLKFABRIC,
    I<1>:$RXOUTCLKPCS,
    I<1>:$RXPHALIGNDONE,
    I<1>:$RXPMARESETDONE,
    I<1>:$RXPRBSERR,
    I<1>:$RXQPISENN,
    I<1>:$RXQPISENP,
    I<1>:$RXRATEDONE,
    I<1>:$RXRESETDONE,
    I<1>:$RXSYNCDONE,
    I<1>:$RXSYNCOUT,
    I<1>:$RXVALID,
    I<1>:$TXCOMFINISH,
    I<1>:$TXDLYSRESETDONE,
    I<1>:$TXGEARBOXREADY,
    I<1>:$TXOUTCLK,
    I<1>:$TXOUTCLKFABRIC,
    I<1>:$TXOUTCLKPCS,
    I<1>:$TXPHALIGNDONE,
    I<1>:$TXPHINITDONE,
    I<1>:$TXPMARESETDONE,
    I<1>:$TXQPISENN,
    I<1>:$TXQPISENP,
    I<1>:$TXRATEDONE,
    I<1>:$TXRESETDONE,
    I<1>:$TXSYNCDONE,
    I<1>:$TXSYNCOUT,
    I<15>:$DMONITOROUT,
    I<16>:$DRPDO,
    I<16>:$PCSRSVDOUT,
    I<2>:$RXCLKCORCNT,
    I<2>:$RXDATAVALID,
    I<2>:$RXHEADERVALID,
    I<2>:$RXSTARTOFSEQ,
    I<2>:$TXBUFSTATUS,
    I<3>:$RXBUFSTATUS,
    I<3>:$RXSTATUS,
    I<5>:$RXCHBONDO,
    I<5>:$RXPHMONITOR,
    I<5>:$RXPHSLIPMONITOR,
    I<6>:$RXHEADER,
    I<64>:$RXDATA,
    I<7>:$RXMONITOROUT,
    I<8>:$RXCHARISCOMMA,
    I<8>:$RXCHARISK,
    I<8>:$RXDISPERR,
    I<8>:$RXNOTINTABLE
  );
}

def GTHE2uCOMMON : XilinxPrimitiveOp<"GTHE2_COMMON", []> {
  let summary = "GTHE2_COMMON Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$BGBYPASSB,
    I<1>:$BGMONITORENB,
    I<1>:$BGPDB,
    I<1>:$BGRCALOVRDENB,
    I<1>:$DRPCLK,
    I<1>:$DRPEN,
    I<1>:$DRPWE,
    I<1>:$GTGREFCLK,
    I<1>:$GTNORTHREFCLK0,
    I<1>:$GTNORTHREFCLK1,
    I<1>:$GTREFCLK0,
    I<1>:$GTREFCLK1,
    I<1>:$GTSOUTHREFCLK0,
    I<1>:$GTSOUTHREFCLK1,
    I<1>:$QPLLLOCKDETCLK,
    I<1>:$QPLLLOCKEN,
    I<1>:$QPLLOUTRESET,
    I<1>:$QPLLPD,
    I<1>:$QPLLRESET,
    I<1>:$RCALENB,
    I<16>:$DRPDI,
    I<16>:$QPLLRSVD1,
    I<3>:$QPLLREFCLKSEL,
    I<5>:$BGRCALOVRD,
    I<5>:$QPLLRSVD2,
    I<8>:$DRPADDR,
    I<8>:$PMARSVD,

    // GTHE2_COMMON parameters follows
    StrAttr:$LOC,
    APIntAttr<I<64>>:$BIAS_CFG,
    APIntAttr<I<32>>:$COMMON_CFG,
    APIntAttr<I<1>>:$IS_DRPCLK_INVERTED,
    APIntAttr<I<1>>:$IS_GTGREFCLK_INVERTED,
    APIntAttr<I<1>>:$IS_QPLLLOCKDETCLK_INVERTED,
    APIntAttr<I<27>>:$QPLL_CFG,
    APIntAttr<I<4>>:$QPLL_CLKOUT_CFG,
    APIntAttr<I<6>>:$QPLL_COARSE_FREQ_OVRD,
    APIntAttr<I<1>>:$QPLL_COARSE_FREQ_OVRD_EN,
    APIntAttr<I<10>>:$QPLL_CP,
    APIntAttr<I<1>>:$QPLL_CP_MONITOR_EN,
    APIntAttr<I<1>>:$QPLL_DMONITOR_SEL,
    APIntAttr<I<10>>:$QPLL_FBDIV,
    APIntAttr<I<1>>:$QPLL_FBDIV_MONITOR_EN,
    APIntAttr<I<1>>:$QPLL_FBDIV_RATIO,
    APIntAttr<I<24>>:$QPLL_INIT_CFG,
    APIntAttr<I<16>>:$QPLL_LOCK_CFG,
    APIntAttr<I<4>>:$QPLL_LPF,
    SI64Attr:$QPLL_REFCLK_DIV,
    APIntAttr<I<1>>:$QPLL_RP_COMP,
    APIntAttr<I<2>>:$QPLL_VTRL_RESET,
    APIntAttr<I<2>>:$RCAL_CFG,
    APIntAttr<I<16>>:$RSVD_ATTR0,
    APIntAttr<I<16>>:$RSVD_ATTR1,
    APIntAttr<I<3>>:$SIM_QPLLREFCLK_SEL,
    StrAttr:$SIM_RESET_SPEEDUP,
    StrAttr:$SIM_VERSION
  );

  let results = (outs
    I<1>:$DRPRDY,
    I<1>:$QPLLFBCLKLOST,
    I<1>:$QPLLLOCK,
    I<1>:$QPLLOUTCLK,
    I<1>:$QPLLOUTREFCLK,
    I<1>:$QPLLREFCLKLOST,
    I<1>:$REFCLKOUTMONITOR,
    I<16>:$DRPDO,
    I<16>:$PMARSVDOUT,
    I<8>:$QPLLDMONITOR
  );
}

def GTHE3uCHANNEL : XilinxPrimitiveOp<"GTHE3_CHANNEL", []> {
  let summary = "GTHE3_CHANNEL Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CFGRESET,
    I<1>:$CLKRSVD0,
    I<1>:$CLKRSVD1,
    I<1>:$CPLLLOCKDETCLK,
    I<1>:$CPLLLOCKEN,
    I<1>:$CPLLPD,
    I<3>:$CPLLREFCLKSEL,
    I<1>:$CPLLRESET,
    I<1>:$DMONFIFORESET,
    I<1>:$DMONITORCLK,
    I<9>:$DRPADDR,
    I<1>:$DRPCLK,
    I<16>:$DRPDI,
    I<1>:$DRPEN,
    I<1>:$DRPWE,
    I<1>:$EVODDPHICALDONE,
    I<1>:$EVODDPHICALSTART,
    I<1>:$EVODDPHIDRDEN,
    I<1>:$EVODDPHIDWREN,
    I<1>:$EVODDPHIXRDEN,
    I<1>:$EVODDPHIXWREN,
    I<1>:$EYESCANMODE,
    I<1>:$EYESCANRESET,
    I<1>:$EYESCANTRIGGER,
    I<1>:$GTGREFCLK,
    I<1>:$GTHRXN,
    I<1>:$GTHRXP,
    I<1>:$GTNORTHREFCLK0,
    I<1>:$GTNORTHREFCLK1,
    I<1>:$GTREFCLK0,
    I<1>:$GTREFCLK1,
    I<1>:$GTRESETSEL,
    I<16>:$GTRSVD,
    I<1>:$GTRXRESET,
    I<1>:$GTSOUTHREFCLK0,
    I<1>:$GTSOUTHREFCLK1,
    I<1>:$GTTXRESET,
    I<3>:$LOOPBACK,
    I<1>:$LPBKRXTXSEREN,
    I<1>:$LPBKTXRXSEREN,
    I<1>:$PCIEEQRXEQADAPTDONE,
    I<1>:$PCIERSTIDLE,
    I<1>:$PCIERSTTXSYNCSTART,
    I<1>:$PCIEUSERRATEDONE,
    I<16>:$PCSRSVDIN,
    I<5>:$PCSRSVDIN2,
    I<5>:$PMARSVDIN,
    I<1>:$QPLL0CLK,
    I<1>:$QPLL0REFCLK,
    I<1>:$QPLL1CLK,
    I<1>:$QPLL1REFCLK,
    I<1>:$RESETOVRD,
    I<1>:$RSTCLKENTX,
    I<1>:$RX8B10BEN,
    I<1>:$RXBUFRESET,
    I<1>:$RXCDRFREQRESET,
    I<1>:$RXCDRHOLD,
    I<1>:$RXCDROVRDEN,
    I<1>:$RXCDRRESET,
    I<1>:$RXCDRRESETRSV,
    I<1>:$RXCHBONDEN,
    I<5>:$RXCHBONDI,
    I<3>:$RXCHBONDLEVEL,
    I<1>:$RXCHBONDMASTER,
    I<1>:$RXCHBONDSLAVE,
    I<1>:$RXCOMMADETEN,
    I<2>:$RXDFEAGCCTRL,
    I<1>:$RXDFEAGCHOLD,
    I<1>:$RXDFEAGCOVRDEN,
    I<1>:$RXDFELFHOLD,
    I<1>:$RXDFELFOVRDEN,
    I<1>:$RXDFELPMRESET,
    I<1>:$RXDFETAP10HOLD,
    I<1>:$RXDFETAP10OVRDEN,
    I<1>:$RXDFETAP11HOLD,
    I<1>:$RXDFETAP11OVRDEN,
    I<1>:$RXDFETAP12HOLD,
    I<1>:$RXDFETAP12OVRDEN,
    I<1>:$RXDFETAP13HOLD,
    I<1>:$RXDFETAP13OVRDEN,
    I<1>:$RXDFETAP14HOLD,
    I<1>:$RXDFETAP14OVRDEN,
    I<1>:$RXDFETAP15HOLD,
    I<1>:$RXDFETAP15OVRDEN,
    I<1>:$RXDFETAP2HOLD,
    I<1>:$RXDFETAP2OVRDEN,
    I<1>:$RXDFETAP3HOLD,
    I<1>:$RXDFETAP3OVRDEN,
    I<1>:$RXDFETAP4HOLD,
    I<1>:$RXDFETAP4OVRDEN,
    I<1>:$RXDFETAP5HOLD,
    I<1>:$RXDFETAP5OVRDEN,
    I<1>:$RXDFETAP6HOLD,
    I<1>:$RXDFETAP6OVRDEN,
    I<1>:$RXDFETAP7HOLD,
    I<1>:$RXDFETAP7OVRDEN,
    I<1>:$RXDFETAP8HOLD,
    I<1>:$RXDFETAP8OVRDEN,
    I<1>:$RXDFETAP9HOLD,
    I<1>:$RXDFETAP9OVRDEN,
    I<1>:$RXDFEUTHOLD,
    I<1>:$RXDFEUTOVRDEN,
    I<1>:$RXDFEVPHOLD,
    I<1>:$RXDFEVPOVRDEN,
    I<1>:$RXDFEVSEN,
    I<1>:$RXDFEXYDEN,
    I<1>:$RXDLYBYPASS,
    I<1>:$RXDLYEN,
    I<1>:$RXDLYOVRDEN,
    I<1>:$RXDLYSRESET,
    I<2>:$RXELECIDLEMODE,
    I<1>:$RXGEARBOXSLIP,
    I<1>:$RXLATCLK,
    I<1>:$RXLPMEN,
    I<1>:$RXLPMGCHOLD,
    I<1>:$RXLPMGCOVRDEN,
    I<1>:$RXLPMHFHOLD,
    I<1>:$RXLPMHFOVRDEN,
    I<1>:$RXLPMLFHOLD,
    I<1>:$RXLPMLFKLOVRDEN,
    I<1>:$RXLPMOSHOLD,
    I<1>:$RXLPMOSOVRDEN,
    I<1>:$RXMCOMMAALIGNEN,
    I<2>:$RXMONITORSEL,
    I<1>:$RXOOBRESET,
    I<1>:$RXOSCALRESET,
    I<1>:$RXOSHOLD,
    I<4>:$RXOSINTCFG,
    I<1>:$RXOSINTEN,
    I<1>:$RXOSINTHOLD,
    I<1>:$RXOSINTOVRDEN,
    I<1>:$RXOSINTSTROBE,
    I<1>:$RXOSINTTESTOVRDEN,
    I<1>:$RXOSOVRDEN,
    I<3>:$RXOUTCLKSEL,
    I<1>:$RXPCOMMAALIGNEN,
    I<1>:$RXPCSRESET,
    I<2>:$RXPD,
    I<1>:$RXPHALIGN,
    I<1>:$RXPHALIGNEN,
    I<1>:$RXPHDLYPD,
    I<1>:$RXPHDLYRESET,
    I<1>:$RXPHOVRDEN,
    I<2>:$RXPLLCLKSEL,
    I<1>:$RXPMARESET,
    I<1>:$RXPOLARITY,
    I<1>:$RXPRBSCNTRESET,
    I<4>:$RXPRBSSEL,
    I<1>:$RXPROGDIVRESET,
    I<1>:$RXQPIEN,
    I<3>:$RXRATE,
    I<1>:$RXRATEMODE,
    I<1>:$RXSLIDE,
    I<1>:$RXSLIPOUTCLK,
    I<1>:$RXSLIPPMA,
    I<1>:$RXSYNCALLIN,
    I<1>:$RXSYNCIN,
    I<1>:$RXSYNCMODE,
    I<2>:$RXSYSCLKSEL,
    I<1>:$RXUSERRDY,
    I<1>:$RXUSRCLK,
    I<1>:$RXUSRCLK2,
    I<1>:$SIGVALIDCLK,
    I<20>:$TSTIN,
    I<8>:$TX8B10BBYPASS,
    I<1>:$TX8B10BEN,
    I<3>:$TXBUFDIFFCTRL,
    I<1>:$TXCOMINIT,
    I<1>:$TXCOMSAS,
    I<1>:$TXCOMWAKE,
    I<16>:$TXCTRL0,
    I<16>:$TXCTRL1,
    I<8>:$TXCTRL2,
    I<128>:$TXDATA,
    I<8>:$TXDATAEXTENDRSVD,
    I<1>:$TXDEEMPH,
    I<1>:$TXDETECTRX,
    I<4>:$TXDIFFCTRL,
    I<1>:$TXDIFFPD,
    I<1>:$TXDLYBYPASS,
    I<1>:$TXDLYEN,
    I<1>:$TXDLYHOLD,
    I<1>:$TXDLYOVRDEN,
    I<1>:$TXDLYSRESET,
    I<1>:$TXDLYUPDOWN,
    I<1>:$TXELECIDLE,
    I<6>:$TXHEADER,
    I<1>:$TXINHIBIT,
    I<1>:$TXLATCLK,
    I<7>:$TXMAINCURSOR,
    I<3>:$TXMARGIN,
    I<3>:$TXOUTCLKSEL,
    I<1>:$TXPCSRESET,
    I<2>:$TXPD,
    I<1>:$TXPDELECIDLEMODE,
    I<1>:$TXPHALIGN,
    I<1>:$TXPHALIGNEN,
    I<1>:$TXPHDLYPD,
    I<1>:$TXPHDLYRESET,
    I<1>:$TXPHDLYTSTCLK,
    I<1>:$TXPHINIT,
    I<1>:$TXPHOVRDEN,
    I<1>:$TXPIPPMEN,
    I<1>:$TXPIPPMOVRDEN,
    I<1>:$TXPIPPMPD,
    I<1>:$TXPIPPMSEL,
    I<5>:$TXPIPPMSTEPSIZE,
    I<1>:$TXPISOPD,
    I<2>:$TXPLLCLKSEL,
    I<1>:$TXPMARESET,
    I<1>:$TXPOLARITY,
    I<5>:$TXPOSTCURSOR,
    I<1>:$TXPOSTCURSORINV,
    I<1>:$TXPRBSFORCEERR,
    I<4>:$TXPRBSSEL,
    I<5>:$TXPRECURSOR,
    I<1>:$TXPRECURSORINV,
    I<1>:$TXPROGDIVRESET,
    I<1>:$TXQPIBIASEN,
    I<1>:$TXQPISTRONGPDOWN,
    I<1>:$TXQPIWEAKPUP,
    I<3>:$TXRATE,
    I<1>:$TXRATEMODE,
    I<7>:$TXSEQUENCE,
    I<1>:$TXSWING,
    I<1>:$TXSYNCALLIN,
    I<1>:$TXSYNCIN,
    I<1>:$TXSYNCMODE,
    I<2>:$TXSYSCLKSEL,
    I<1>:$TXUSERRDY,
    I<1>:$TXUSRCLK,
    I<1>:$TXUSRCLK2,

    // GTHE3_CHANNEL parameters follows
    APIntAttr<I<1>>:$ACJTAG_DEBUG_MODE,
    APIntAttr<I<1>>:$ACJTAG_MODE,
    APIntAttr<I<1>>:$ACJTAG_RESET,
    APIntAttr<I<16>>:$ADAPT_CFG0,
    APIntAttr<I<16>>:$ADAPT_CFG1,
    StrAttr:$ALIGN_COMMA_DOUBLE,
    APIntAttr<I<10>>:$ALIGN_COMMA_ENABLE,
    SI64Attr:$ALIGN_COMMA_WORD,
    StrAttr:$ALIGN_MCOMMA_DET,
    APIntAttr<I<10>>:$ALIGN_MCOMMA_VALUE,
    StrAttr:$ALIGN_PCOMMA_DET,
    APIntAttr<I<10>>:$ALIGN_PCOMMA_VALUE,
    APIntAttr<I<1>>:$A_RXOSCALRESET,
    APIntAttr<I<1>>:$A_RXPROGDIVRESET,
    APIntAttr<I<1>>:$A_TXPROGDIVRESET,
    StrAttr:$CBCC_DATA_SOURCE_SEL,
    APIntAttr<I<1>>:$CDR_SWAP_MODE_EN,
    StrAttr:$CHAN_BOND_KEEP_ALIGN,
    SI64Attr:$CHAN_BOND_MAX_SKEW,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_1,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_2,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_3,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_4,
    APIntAttr<I<4>>:$CHAN_BOND_SEQ_1_ENABLE,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_1,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_2,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_3,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_4,
    APIntAttr<I<4>>:$CHAN_BOND_SEQ_2_ENABLE,
    StrAttr:$CHAN_BOND_SEQ_2_USE,
    SI64Attr:$CHAN_BOND_SEQ_LEN,
    StrAttr:$CLK_CORRECT_USE,
    StrAttr:$CLK_COR_KEEP_IDLE,
    SI64Attr:$CLK_COR_MAX_LAT,
    SI64Attr:$CLK_COR_MIN_LAT,
    StrAttr:$CLK_COR_PRECEDENCE,
    SI64Attr:$CLK_COR_REPEAT_WAIT,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_1,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_2,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_3,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_4,
    APIntAttr<I<4>>:$CLK_COR_SEQ_1_ENABLE,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_1,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_2,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_3,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_4,
    APIntAttr<I<4>>:$CLK_COR_SEQ_2_ENABLE,
    StrAttr:$CLK_COR_SEQ_2_USE,
    SI64Attr:$CLK_COR_SEQ_LEN,
    APIntAttr<I<16>>:$CPLL_CFG0,
    APIntAttr<I<16>>:$CPLL_CFG1,
    APIntAttr<I<16>>:$CPLL_CFG2,
    APIntAttr<I<6>>:$CPLL_CFG3,
    SI64Attr:$CPLL_FBDIV,
    SI64Attr:$CPLL_FBDIV_45,
    APIntAttr<I<16>>:$CPLL_INIT_CFG0,
    APIntAttr<I<8>>:$CPLL_INIT_CFG1,
    APIntAttr<I<16>>:$CPLL_LOCK_CFG,
    SI64Attr:$CPLL_REFCLK_DIV,
    APIntAttr<I<2>>:$DDI_CTRL,
    SI64Attr:$DDI_REALIGN_WAIT,
    StrAttr:$DEC_MCOMMA_DETECT,
    StrAttr:$DEC_PCOMMA_DETECT,
    StrAttr:$DEC_VALID_COMMA_ONLY,
    APIntAttr<I<1>>:$DFE_D_X_REL_POS,
    APIntAttr<I<1>>:$DFE_VCM_COMP_EN,
    APIntAttr<I<10>>:$DMONITOR_CFG0,
    APIntAttr<I<8>>:$DMONITOR_CFG1,
    APIntAttr<I<1>>:$ES_CLK_PHASE_SEL,
    APIntAttr<I<6>>:$ES_CONTROL,
    StrAttr:$ES_ERRDET_EN,
    StrAttr:$ES_EYE_SCAN_EN,
    APIntAttr<I<12>>:$ES_HORZ_OFFSET,
    APIntAttr<I<10>>:$ES_PMA_CFG,
    APIntAttr<I<5>>:$ES_PRESCALE,
    APIntAttr<I<16>>:$ES_QUALIFIER0,
    APIntAttr<I<16>>:$ES_QUALIFIER1,
    APIntAttr<I<16>>:$ES_QUALIFIER2,
    APIntAttr<I<16>>:$ES_QUALIFIER3,
    APIntAttr<I<16>>:$ES_QUALIFIER4,
    APIntAttr<I<16>>:$ES_QUAL_MASK0,
    APIntAttr<I<16>>:$ES_QUAL_MASK1,
    APIntAttr<I<16>>:$ES_QUAL_MASK2,
    APIntAttr<I<16>>:$ES_QUAL_MASK3,
    APIntAttr<I<16>>:$ES_QUAL_MASK4,
    APIntAttr<I<16>>:$ES_SDATA_MASK0,
    APIntAttr<I<16>>:$ES_SDATA_MASK1,
    APIntAttr<I<16>>:$ES_SDATA_MASK2,
    APIntAttr<I<16>>:$ES_SDATA_MASK3,
    APIntAttr<I<16>>:$ES_SDATA_MASK4,
    APIntAttr<I<11>>:$EVODD_PHI_CFG,
    APIntAttr<I<1>>:$EYE_SCAN_SWAP_EN,
    APIntAttr<I<4>>:$FTS_DESKEW_SEQ_ENABLE,
    APIntAttr<I<4>>:$FTS_LANE_DESKEW_CFG,
    StrAttr:$FTS_LANE_DESKEW_EN,
    APIntAttr<I<5>>:$GEARBOX_MODE,
    APIntAttr<I<1>>:$GM_BIAS_SELECT,
    APIntAttr<I<1>>:$LOCAL_MASTER,
    APIntAttr<I<2>>:$OOBDIVCTL,
    APIntAttr<I<1>>:$OOB_PWRUP,
    StrAttr:$PCI3_AUTO_REALIGN,
    APIntAttr<I<1>>:$PCI3_PIPE_RX_ELECIDLE,
    APIntAttr<I<2>>:$PCI3_RX_ASYNC_EBUF_BYPASS,
    APIntAttr<I<1>>:$PCI3_RX_ELECIDLE_EI2_ENABLE,
    APIntAttr<I<6>>:$PCI3_RX_ELECIDLE_H2L_COUNT,
    APIntAttr<I<3>>:$PCI3_RX_ELECIDLE_H2L_DISABLE,
    APIntAttr<I<6>>:$PCI3_RX_ELECIDLE_HI_COUNT,
    APIntAttr<I<1>>:$PCI3_RX_ELECIDLE_LP4_DISABLE,
    APIntAttr<I<1>>:$PCI3_RX_FIFO_DISABLE,
    APIntAttr<I<16>>:$PCIE_BUFG_DIV_CTRL,
    APIntAttr<I<16>>:$PCIE_RXPCS_CFG_GEN3,
    APIntAttr<I<16>>:$PCIE_RXPMA_CFG,
    APIntAttr<I<16>>:$PCIE_TXPCS_CFG_GEN3,
    APIntAttr<I<16>>:$PCIE_TXPMA_CFG,
    StrAttr:$PCS_PCIE_EN,
    APIntAttr<I<16>>:$PCS_RSVD0,
    APIntAttr<I<3>>:$PCS_RSVD1,
    APIntAttr<I<12>>:$PD_TRANS_TIME_FROM_P2,
    APIntAttr<I<8>>:$PD_TRANS_TIME_NONE_P2,
    APIntAttr<I<8>>:$PD_TRANS_TIME_TO_P2,
    APIntAttr<I<2>>:$PLL_SEL_MODE_GEN12,
    APIntAttr<I<2>>:$PLL_SEL_MODE_GEN3,
    APIntAttr<I<16>>:$PMA_RSV1,
    APIntAttr<I<3>>:$PROCESS_PAR,
    APIntAttr<I<1>>:$RATE_SW_USE_DRP,
    APIntAttr<I<1>>:$RESET_POWERSAVE_DISABLE,
    APIntAttr<I<5>>:$RXBUFRESET_TIME,
    StrAttr:$RXBUF_ADDR_MODE,
    APIntAttr<I<4>>:$RXBUF_EIDLE_HI_CNT,
    APIntAttr<I<4>>:$RXBUF_EIDLE_LO_CNT,
    StrAttr:$RXBUF_EN,
    StrAttr:$RXBUF_RESET_ON_CB_CHANGE,
    StrAttr:$RXBUF_RESET_ON_COMMAALIGN,
    StrAttr:$RXBUF_RESET_ON_EIDLE,
    StrAttr:$RXBUF_RESET_ON_RATE_CHANGE,
    SI64Attr:$RXBUF_THRESH_OVFLW,
    StrAttr:$RXBUF_THRESH_OVRD,
    SI64Attr:$RXBUF_THRESH_UNDFLW,
    APIntAttr<I<5>>:$RXCDRFREQRESET_TIME,
    APIntAttr<I<5>>:$RXCDRPHRESET_TIME,
    APIntAttr<I<16>>:$RXCDR_CFG0,
    APIntAttr<I<16>>:$RXCDR_CFG0_GEN3,
    APIntAttr<I<16>>:$RXCDR_CFG1,
    APIntAttr<I<16>>:$RXCDR_CFG1_GEN3,
    APIntAttr<I<16>>:$RXCDR_CFG2,
    APIntAttr<I<16>>:$RXCDR_CFG2_GEN3,
    APIntAttr<I<16>>:$RXCDR_CFG3,
    APIntAttr<I<16>>:$RXCDR_CFG3_GEN3,
    APIntAttr<I<16>>:$RXCDR_CFG4,
    APIntAttr<I<16>>:$RXCDR_CFG4_GEN3,
    APIntAttr<I<16>>:$RXCDR_CFG5,
    APIntAttr<I<16>>:$RXCDR_CFG5_GEN3,
    APIntAttr<I<1>>:$RXCDR_FR_RESET_ON_EIDLE,
    APIntAttr<I<1>>:$RXCDR_HOLD_DURING_EIDLE,
    APIntAttr<I<16>>:$RXCDR_LOCK_CFG0,
    APIntAttr<I<16>>:$RXCDR_LOCK_CFG1,
    APIntAttr<I<16>>:$RXCDR_LOCK_CFG2,
    APIntAttr<I<1>>:$RXCDR_PH_RESET_ON_EIDLE,
    APIntAttr<I<16>>:$RXCFOK_CFG0,
    APIntAttr<I<16>>:$RXCFOK_CFG1,
    APIntAttr<I<16>>:$RXCFOK_CFG2,
    APIntAttr<I<7>>:$RXDFELPMRESET_TIME,
    APIntAttr<I<16>>:$RXDFELPM_KL_CFG0,
    APIntAttr<I<16>>:$RXDFELPM_KL_CFG1,
    APIntAttr<I<16>>:$RXDFELPM_KL_CFG2,
    APIntAttr<I<16>>:$RXDFE_CFG0,
    APIntAttr<I<16>>:$RXDFE_CFG1,
    APIntAttr<I<16>>:$RXDFE_GC_CFG0,
    APIntAttr<I<16>>:$RXDFE_GC_CFG1,
    APIntAttr<I<16>>:$RXDFE_GC_CFG2,
    APIntAttr<I<16>>:$RXDFE_H2_CFG0,
    APIntAttr<I<16>>:$RXDFE_H2_CFG1,
    APIntAttr<I<16>>:$RXDFE_H3_CFG0,
    APIntAttr<I<16>>:$RXDFE_H3_CFG1,
    APIntAttr<I<16>>:$RXDFE_H4_CFG0,
    APIntAttr<I<16>>:$RXDFE_H4_CFG1,
    APIntAttr<I<16>>:$RXDFE_H5_CFG0,
    APIntAttr<I<16>>:$RXDFE_H5_CFG1,
    APIntAttr<I<16>>:$RXDFE_H6_CFG0,
    APIntAttr<I<16>>:$RXDFE_H6_CFG1,
    APIntAttr<I<16>>:$RXDFE_H7_CFG0,
    APIntAttr<I<16>>:$RXDFE_H7_CFG1,
    APIntAttr<I<16>>:$RXDFE_H8_CFG0,
    APIntAttr<I<16>>:$RXDFE_H8_CFG1,
    APIntAttr<I<16>>:$RXDFE_H9_CFG0,
    APIntAttr<I<16>>:$RXDFE_H9_CFG1,
    APIntAttr<I<16>>:$RXDFE_HA_CFG0,
    APIntAttr<I<16>>:$RXDFE_HA_CFG1,
    APIntAttr<I<16>>:$RXDFE_HB_CFG0,
    APIntAttr<I<16>>:$RXDFE_HB_CFG1,
    APIntAttr<I<16>>:$RXDFE_HC_CFG0,
    APIntAttr<I<16>>:$RXDFE_HC_CFG1,
    APIntAttr<I<16>>:$RXDFE_HD_CFG0,
    APIntAttr<I<16>>:$RXDFE_HD_CFG1,
    APIntAttr<I<16>>:$RXDFE_HE_CFG0,
    APIntAttr<I<16>>:$RXDFE_HE_CFG1,
    APIntAttr<I<16>>:$RXDFE_HF_CFG0,
    APIntAttr<I<16>>:$RXDFE_HF_CFG1,
    APIntAttr<I<16>>:$RXDFE_OS_CFG0,
    APIntAttr<I<16>>:$RXDFE_OS_CFG1,
    APIntAttr<I<16>>:$RXDFE_UT_CFG0,
    APIntAttr<I<16>>:$RXDFE_UT_CFG1,
    APIntAttr<I<16>>:$RXDFE_VP_CFG0,
    APIntAttr<I<16>>:$RXDFE_VP_CFG1,
    APIntAttr<I<16>>:$RXDLY_CFG,
    APIntAttr<I<16>>:$RXDLY_LCFG,
    StrAttr:$RXELECIDLE_CFG,
    SI64Attr:$RXGBOX_FIFO_INIT_RD_ADDR,
    StrAttr:$RXGEARBOX_EN,
    APIntAttr<I<5>>:$RXISCANRESET_TIME,
    APIntAttr<I<16>>:$RXLPM_CFG,
    APIntAttr<I<16>>:$RXLPM_GC_CFG,
    APIntAttr<I<16>>:$RXLPM_KH_CFG0,
    APIntAttr<I<16>>:$RXLPM_KH_CFG1,
    APIntAttr<I<16>>:$RXLPM_OS_CFG0,
    APIntAttr<I<16>>:$RXLPM_OS_CFG1,
    APIntAttr<I<9>>:$RXOOB_CFG,
    StrAttr:$RXOOB_CLK_CFG,
    APIntAttr<I<5>>:$RXOSCALRESET_TIME,
    SI64Attr:$RXOUT_DIV,
    APIntAttr<I<5>>:$RXPCSRESET_TIME,
    APIntAttr<I<16>>:$RXPHBEACON_CFG,
    APIntAttr<I<16>>:$RXPHDLY_CFG,
    APIntAttr<I<16>>:$RXPHSAMP_CFG,
    APIntAttr<I<16>>:$RXPHSLIP_CFG,
    APIntAttr<I<5>>:$RXPH_MONITOR_SEL,
    APIntAttr<I<2>>:$RXPI_CFG0,
    APIntAttr<I<2>>:$RXPI_CFG1,
    APIntAttr<I<2>>:$RXPI_CFG2,
    APIntAttr<I<2>>:$RXPI_CFG3,
    APIntAttr<I<1>>:$RXPI_CFG4,
    APIntAttr<I<1>>:$RXPI_CFG5,
    APIntAttr<I<3>>:$RXPI_CFG6,
    APIntAttr<I<1>>:$RXPI_LPM,
    APIntAttr<I<1>>:$RXPI_VREFSEL,
    StrAttr:$RXPMACLK_SEL,
    APIntAttr<I<5>>:$RXPMARESET_TIME,
    APIntAttr<I<1>>:$RXPRBS_ERR_LOOPBACK,
    SI64Attr:$RXPRBS_LINKACQ_CNT,
    SI64Attr:$RXSLIDE_AUTO_WAIT,
    StrAttr:$RXSLIDE_MODE,
    APIntAttr<I<1>>:$RXSYNC_MULTILANE,
    APIntAttr<I<1>>:$RXSYNC_OVRD,
    APIntAttr<I<1>>:$RXSYNC_SKIP_DA,
    APIntAttr<I<1>>:$RX_AFE_CM_EN,
    APIntAttr<I<16>>:$RX_BIAS_CFG0,
    APIntAttr<I<6>>:$RX_BUFFER_CFG,
    APIntAttr<I<1>>:$RX_CAPFF_SARC_ENB,
    SI64Attr:$RX_CLK25_DIV,
    APIntAttr<I<1>>:$RX_CLKMUX_EN,
    APIntAttr<I<5>>:$RX_CLK_SLIP_OVRD,
    APIntAttr<I<4>>:$RX_CM_BUF_CFG,
    APIntAttr<I<1>>:$RX_CM_BUF_PD,
    APIntAttr<I<2>>:$RX_CM_SEL,
    APIntAttr<I<4>>:$RX_CM_TRIM,
    APIntAttr<I<8>>:$RX_CTLE3_LPF,
    SI64Attr:$RX_DATA_WIDTH,
    APIntAttr<I<6>>:$RX_DDI_SEL,
    StrAttr:$RX_DEFER_RESET_BUF_EN,
    APIntAttr<I<4>>:$RX_DFELPM_CFG0,
    APIntAttr<I<1>>:$RX_DFELPM_CFG1,
    APIntAttr<I<1>>:$RX_DFELPM_KLKH_AGC_STUP_EN,
    APIntAttr<I<2>>:$RX_DFE_AGC_CFG0,
    APIntAttr<I<3>>:$RX_DFE_AGC_CFG1,
    APIntAttr<I<2>>:$RX_DFE_KL_LPM_KH_CFG0,
    APIntAttr<I<3>>:$RX_DFE_KL_LPM_KH_CFG1,
    APIntAttr<I<2>>:$RX_DFE_KL_LPM_KL_CFG0,
    APIntAttr<I<3>>:$RX_DFE_KL_LPM_KL_CFG1,
    APIntAttr<I<1>>:$RX_DFE_LPM_HOLD_DURING_EIDLE,
    StrAttr:$RX_DISPERR_SEQ_MATCH,
    APIntAttr<I<5>>:$RX_DIVRESET_TIME,
    APIntAttr<I<1>>:$RX_EN_HI_LR,
    APIntAttr<I<7>>:$RX_EYESCAN_VS_CODE,
    APIntAttr<I<1>>:$RX_EYESCAN_VS_NEG_DIR,
    APIntAttr<I<2>>:$RX_EYESCAN_VS_RANGE,
    APIntAttr<I<1>>:$RX_EYESCAN_VS_UT_SIGN,
    APIntAttr<I<1>>:$RX_FABINT_USRCLK_FLOP,
    SI64Attr:$RX_INT_DATAWIDTH,
    APIntAttr<I<1>>:$RX_PMA_POWER_SAVE,
    StrAttr:$RX_PROGDIV_CFG,
    APIntAttr<I<3>>:$RX_SAMPLE_PERIOD,
    SI64Attr:$RX_SIG_VALID_DLY,
    APIntAttr<I<1>>:$RX_SUM_DFETAPREP_EN,
    APIntAttr<I<4>>:$RX_SUM_IREF_TUNE,
    APIntAttr<I<2>>:$RX_SUM_RES_CTRL,
    APIntAttr<I<4>>:$RX_SUM_VCMTUNE,
    APIntAttr<I<1>>:$RX_SUM_VCM_OVWR,
    APIntAttr<I<3>>:$RX_SUM_VREF_TUNE,
    APIntAttr<I<2>>:$RX_TUNE_AFE_OS,
    APIntAttr<I<1>>:$RX_WIDEMODE_CDR,
    StrAttr:$RX_XCLK_SEL,
    SI64Attr:$SAS_MAX_COM,
    SI64Attr:$SAS_MIN_COM,
    APIntAttr<I<4>>:$SATA_BURST_SEQ_LEN,
    APIntAttr<I<3>>:$SATA_BURST_VAL,
    StrAttr:$SATA_CPLL_CFG,
    APIntAttr<I<3>>:$SATA_EIDLE_VAL,
    SI64Attr:$SATA_MAX_BURST,
    SI64Attr:$SATA_MAX_INIT,
    SI64Attr:$SATA_MAX_WAKE,
    SI64Attr:$SATA_MIN_BURST,
    SI64Attr:$SATA_MIN_INIT,
    SI64Attr:$SATA_MIN_WAKE,
    StrAttr:$SHOW_REALIGN_COMMA,
    StrAttr:$SIM_MODE,
    StrAttr:$SIM_RECEIVER_DETECT_PASS,
    StrAttr:$SIM_RESET_SPEEDUP,
    APIntAttr<I<1>>:$SIM_TX_EIDLE_DRIVE_LEVEL,
    SI64Attr:$SIM_VERSION,
    APIntAttr<I<2>>:$TAPDLY_SET_TX,
    APIntAttr<I<4>>:$TEMPERATUR_PAR,
    APIntAttr<I<15>>:$TERM_RCAL_CFG,
    APIntAttr<I<3>>:$TERM_RCAL_OVRD,
    APIntAttr<I<8>>:$TRANS_TIME_RATE,
    APIntAttr<I<8>>:$TST_RSV0,
    APIntAttr<I<8>>:$TST_RSV1,
    StrAttr:$TXBUF_EN,
    StrAttr:$TXBUF_RESET_ON_RATE_CHANGE,
    APIntAttr<I<16>>:$TXDLY_CFG,
    APIntAttr<I<16>>:$TXDLY_LCFG,
    APIntAttr<I<4>>:$TXDRVBIAS_N,
    APIntAttr<I<4>>:$TXDRVBIAS_P,
    StrAttr:$TXFIFO_ADDR_CFG,
    SI64Attr:$TXGBOX_FIFO_INIT_RD_ADDR,
    StrAttr:$TXGEARBOX_EN,
    SI64Attr:$TXOUT_DIV,
    APIntAttr<I<5>>:$TXPCSRESET_TIME,
    APIntAttr<I<16>>:$TXPHDLY_CFG0,
    APIntAttr<I<16>>:$TXPHDLY_CFG1,
    APIntAttr<I<16>>:$TXPH_CFG,
    APIntAttr<I<5>>:$TXPH_MONITOR_SEL,
    APIntAttr<I<2>>:$TXPI_CFG0,
    APIntAttr<I<2>>:$TXPI_CFG1,
    APIntAttr<I<2>>:$TXPI_CFG2,
    APIntAttr<I<1>>:$TXPI_CFG3,
    APIntAttr<I<1>>:$TXPI_CFG4,
    APIntAttr<I<3>>:$TXPI_CFG5,
    APIntAttr<I<1>>:$TXPI_GRAY_SEL,
    APIntAttr<I<1>>:$TXPI_INVSTROBE_SEL,
    APIntAttr<I<1>>:$TXPI_LPM,
    StrAttr:$TXPI_PPMCLK_SEL,
    APIntAttr<I<8>>:$TXPI_PPM_CFG,
    APIntAttr<I<3>>:$TXPI_SYNFREQ_PPM,
    APIntAttr<I<1>>:$TXPI_VREFSEL,
    APIntAttr<I<5>>:$TXPMARESET_TIME,
    APIntAttr<I<1>>:$TXSYNC_MULTILANE,
    APIntAttr<I<1>>:$TXSYNC_OVRD,
    APIntAttr<I<1>>:$TXSYNC_SKIP_DA,
    SI64Attr:$TX_CLK25_DIV,
    APIntAttr<I<1>>:$TX_CLKMUX_EN,
    SI64Attr:$TX_DATA_WIDTH,
    APIntAttr<I<6>>:$TX_DCD_CFG,
    APIntAttr<I<1>>:$TX_DCD_EN,
    APIntAttr<I<6>>:$TX_DEEMPH0,
    APIntAttr<I<6>>:$TX_DEEMPH1,
    APIntAttr<I<5>>:$TX_DIVRESET_TIME,
    StrAttr:$TX_DRIVE_MODE,
    APIntAttr<I<3>>:$TX_EIDLE_ASSERT_DELAY,
    APIntAttr<I<3>>:$TX_EIDLE_DEASSERT_DELAY,
    APIntAttr<I<1>>:$TX_EML_PHI_TUNE,
    APIntAttr<I<1>>:$TX_FABINT_USRCLK_FLOP,
    APIntAttr<I<1>>:$TX_IDLE_DATA_ZERO,
    SI64Attr:$TX_INT_DATAWIDTH,
    StrAttr:$TX_LOOPBACK_DRIVE_HIZ,
    APIntAttr<I<1>>:$TX_MAINCURSOR_SEL,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_0,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_1,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_2,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_3,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_4,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_0,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_1,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_2,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_3,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_4,
    APIntAttr<I<3>>:$TX_MODE_SEL,
    APIntAttr<I<1>>:$TX_PMADATA_OPT,
    APIntAttr<I<1>>:$TX_PMA_POWER_SAVE,
    StrAttr:$TX_PROGCLK_SEL,
    StrAttr:$TX_PROGDIV_CFG,
    APIntAttr<I<1>>:$TX_QPI_STATUS_EN,
    APIntAttr<I<14>>:$TX_RXDETECT_CFG,
    APIntAttr<I<3>>:$TX_RXDETECT_REF,
    APIntAttr<I<3>>:$TX_SAMPLE_PERIOD,
    APIntAttr<I<1>>:$TX_SARC_LPBK_ENB,
    StrAttr:$TX_XCLK_SEL,
    APIntAttr<I<1>>:$USE_PCS_CLK_PHASE_SEL,
    APIntAttr<I<2>>:$WB_MODE
  );

  let results = (outs
    I<3>:$BUFGTCE,
    I<3>:$BUFGTCEMASK,
    I<9>:$BUFGTDIV,
    I<3>:$BUFGTRESET,
    I<3>:$BUFGTRSTMASK,
    I<1>:$CPLLFBCLKLOST,
    I<1>:$CPLLLOCK,
    I<1>:$CPLLREFCLKLOST,
    I<17>:$DMONITOROUT,
    I<16>:$DRPDO,
    I<1>:$DRPRDY,
    I<1>:$EYESCANDATAERROR,
    I<1>:$GTHTXN,
    I<1>:$GTHTXP,
    I<1>:$GTPOWERGOOD,
    I<1>:$GTREFCLKMONITOR,
    I<1>:$PCIERATEGEN3,
    I<1>:$PCIERATEIDLE,
    I<2>:$PCIERATEQPLLPD,
    I<2>:$PCIERATEQPLLRESET,
    I<1>:$PCIESYNCTXSYNCDONE,
    I<1>:$PCIEUSERGEN3RDY,
    I<1>:$PCIEUSERPHYSTATUSRST,
    I<1>:$PCIEUSERRATESTART,
    I<12>:$PCSRSVDOUT,
    I<1>:$PHYSTATUS,
    I<8>:$PINRSRVDAS,
    I<1>:$RESETEXCEPTION,
    I<3>:$RXBUFSTATUS,
    I<1>:$RXBYTEISALIGNED,
    I<1>:$RXBYTEREALIGN,
    I<1>:$RXCDRLOCK,
    I<1>:$RXCDRPHDONE,
    I<1>:$RXCHANBONDSEQ,
    I<1>:$RXCHANISALIGNED,
    I<1>:$RXCHANREALIGN,
    I<5>:$RXCHBONDO,
    I<2>:$RXCLKCORCNT,
    I<1>:$RXCOMINITDET,
    I<1>:$RXCOMMADET,
    I<1>:$RXCOMSASDET,
    I<1>:$RXCOMWAKEDET,
    I<16>:$RXCTRL0,
    I<16>:$RXCTRL1,
    I<8>:$RXCTRL2,
    I<8>:$RXCTRL3,
    I<128>:$RXDATA,
    I<8>:$RXDATAEXTENDRSVD,
    I<2>:$RXDATAVALID,
    I<1>:$RXDLYSRESETDONE,
    I<1>:$RXELECIDLE,
    I<6>:$RXHEADER,
    I<2>:$RXHEADERVALID,
    I<7>:$RXMONITOROUT,
    I<1>:$RXOSINTDONE,
    I<1>:$RXOSINTSTARTED,
    I<1>:$RXOSINTSTROBEDONE,
    I<1>:$RXOSINTSTROBESTARTED,
    I<1>:$RXOUTCLK,
    I<1>:$RXOUTCLKFABRIC,
    I<1>:$RXOUTCLKPCS,
    I<1>:$RXPHALIGNDONE,
    I<1>:$RXPHALIGNERR,
    I<1>:$RXPMARESETDONE,
    I<1>:$RXPRBSERR,
    I<1>:$RXPRBSLOCKED,
    I<1>:$RXPRGDIVRESETDONE,
    I<1>:$RXQPISENN,
    I<1>:$RXQPISENP,
    I<1>:$RXRATEDONE,
    I<1>:$RXRECCLKOUT,
    I<1>:$RXRESETDONE,
    I<1>:$RXSLIDERDY,
    I<1>:$RXSLIPDONE,
    I<1>:$RXSLIPOUTCLKRDY,
    I<1>:$RXSLIPPMARDY,
    I<2>:$RXSTARTOFSEQ,
    I<3>:$RXSTATUS,
    I<1>:$RXSYNCDONE,
    I<1>:$RXSYNCOUT,
    I<1>:$RXVALID,
    I<2>:$TXBUFSTATUS,
    I<1>:$TXCOMFINISH,
    I<1>:$TXDLYSRESETDONE,
    I<1>:$TXOUTCLK,
    I<1>:$TXOUTCLKFABRIC,
    I<1>:$TXOUTCLKPCS,
    I<1>:$TXPHALIGNDONE,
    I<1>:$TXPHINITDONE,
    I<1>:$TXPMARESETDONE,
    I<1>:$TXPRGDIVRESETDONE,
    I<1>:$TXQPISENN,
    I<1>:$TXQPISENP,
    I<1>:$TXRATEDONE,
    I<1>:$TXRESETDONE,
    I<1>:$TXSYNCDONE,
    I<1>:$TXSYNCOUT
  );
}

def GTHE3uCOMMON : XilinxPrimitiveOp<"GTHE3_COMMON", []> {
  let summary = "GTHE3_COMMON Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$BGBYPASSB,
    I<1>:$BGMONITORENB,
    I<1>:$BGPDB,
    I<5>:$BGRCALOVRD,
    I<1>:$BGRCALOVRDENB,
    I<9>:$DRPADDR,
    I<1>:$DRPCLK,
    I<16>:$DRPDI,
    I<1>:$DRPEN,
    I<1>:$DRPWE,
    I<1>:$GTGREFCLK0,
    I<1>:$GTGREFCLK1,
    I<1>:$GTNORTHREFCLK00,
    I<1>:$GTNORTHREFCLK01,
    I<1>:$GTNORTHREFCLK10,
    I<1>:$GTNORTHREFCLK11,
    I<1>:$GTREFCLK00,
    I<1>:$GTREFCLK01,
    I<1>:$GTREFCLK10,
    I<1>:$GTREFCLK11,
    I<1>:$GTSOUTHREFCLK00,
    I<1>:$GTSOUTHREFCLK01,
    I<1>:$GTSOUTHREFCLK10,
    I<1>:$GTSOUTHREFCLK11,
    I<8>:$PMARSVD0,
    I<8>:$PMARSVD1,
    I<1>:$QPLL0CLKRSVD0,
    I<1>:$QPLL0CLKRSVD1,
    I<1>:$QPLL0LOCKDETCLK,
    I<1>:$QPLL0LOCKEN,
    I<1>:$QPLL0PD,
    I<3>:$QPLL0REFCLKSEL,
    I<1>:$QPLL0RESET,
    I<1>:$QPLL1CLKRSVD0,
    I<1>:$QPLL1CLKRSVD1,
    I<1>:$QPLL1LOCKDETCLK,
    I<1>:$QPLL1LOCKEN,
    I<1>:$QPLL1PD,
    I<3>:$QPLL1REFCLKSEL,
    I<1>:$QPLL1RESET,
    I<8>:$QPLLRSVD1,
    I<5>:$QPLLRSVD2,
    I<5>:$QPLLRSVD3,
    I<8>:$QPLLRSVD4,
    I<1>:$RCALENB,

    // GTHE3_COMMON parameters follows
    APIntAttr<I<16>>:$BIAS_CFG0,
    APIntAttr<I<16>>:$BIAS_CFG1,
    APIntAttr<I<16>>:$BIAS_CFG2,
    APIntAttr<I<16>>:$BIAS_CFG3,
    APIntAttr<I<16>>:$BIAS_CFG4,
    APIntAttr<I<10>>:$BIAS_CFG_RSVD,
    APIntAttr<I<16>>:$COMMON_CFG0,
    APIntAttr<I<16>>:$COMMON_CFG1,
    APIntAttr<I<16>>:$POR_CFG,
    APIntAttr<I<16>>:$QPLL0_CFG0,
    APIntAttr<I<16>>:$QPLL0_CFG1,
    APIntAttr<I<16>>:$QPLL0_CFG1_G3,
    APIntAttr<I<16>>:$QPLL0_CFG2,
    APIntAttr<I<16>>:$QPLL0_CFG2_G3,
    APIntAttr<I<16>>:$QPLL0_CFG3,
    APIntAttr<I<16>>:$QPLL0_CFG4,
    APIntAttr<I<10>>:$QPLL0_CP,
    APIntAttr<I<10>>:$QPLL0_CP_G3,
    SI64Attr:$QPLL0_FBDIV,
    SI64Attr:$QPLL0_FBDIV_G3,
    APIntAttr<I<16>>:$QPLL0_INIT_CFG0,
    APIntAttr<I<8>>:$QPLL0_INIT_CFG1,
    APIntAttr<I<16>>:$QPLL0_LOCK_CFG,
    APIntAttr<I<16>>:$QPLL0_LOCK_CFG_G3,
    APIntAttr<I<10>>:$QPLL0_LPF,
    APIntAttr<I<10>>:$QPLL0_LPF_G3,
    SI64Attr:$QPLL0_REFCLK_DIV,
    APIntAttr<I<16>>:$QPLL0_SDM_CFG0,
    APIntAttr<I<16>>:$QPLL0_SDM_CFG1,
    APIntAttr<I<16>>:$QPLL0_SDM_CFG2,
    APIntAttr<I<16>>:$QPLL1_CFG0,
    APIntAttr<I<16>>:$QPLL1_CFG1,
    APIntAttr<I<16>>:$QPLL1_CFG1_G3,
    APIntAttr<I<16>>:$QPLL1_CFG2,
    APIntAttr<I<16>>:$QPLL1_CFG2_G3,
    APIntAttr<I<16>>:$QPLL1_CFG3,
    APIntAttr<I<16>>:$QPLL1_CFG4,
    APIntAttr<I<10>>:$QPLL1_CP,
    APIntAttr<I<10>>:$QPLL1_CP_G3,
    SI64Attr:$QPLL1_FBDIV,
    SI64Attr:$QPLL1_FBDIV_G3,
    APIntAttr<I<16>>:$QPLL1_INIT_CFG0,
    APIntAttr<I<8>>:$QPLL1_INIT_CFG1,
    APIntAttr<I<16>>:$QPLL1_LOCK_CFG,
    APIntAttr<I<16>>:$QPLL1_LOCK_CFG_G3,
    APIntAttr<I<10>>:$QPLL1_LPF,
    APIntAttr<I<10>>:$QPLL1_LPF_G3,
    SI64Attr:$QPLL1_REFCLK_DIV,
    APIntAttr<I<16>>:$QPLL1_SDM_CFG0,
    APIntAttr<I<16>>:$QPLL1_SDM_CFG1,
    APIntAttr<I<16>>:$QPLL1_SDM_CFG2,
    APIntAttr<I<16>>:$RSVD_ATTR0,
    APIntAttr<I<16>>:$RSVD_ATTR1,
    APIntAttr<I<16>>:$RSVD_ATTR2,
    APIntAttr<I<16>>:$RSVD_ATTR3,
    APIntAttr<I<2>>:$RXRECCLKOUT0_SEL,
    APIntAttr<I<2>>:$RXRECCLKOUT1_SEL,
    APIntAttr<I<1>>:$SARC_EN,
    APIntAttr<I<1>>:$SARC_SEL,
    APIntAttr<I<16>>:$SDM0DATA1_0,
    APIntAttr<I<9>>:$SDM0DATA1_1,
    APIntAttr<I<16>>:$SDM0INITSEED0_0,
    APIntAttr<I<9>>:$SDM0INITSEED0_1,
    APIntAttr<I<1>>:$SDM0_DATA_PIN_SEL,
    APIntAttr<I<1>>:$SDM0_WIDTH_PIN_SEL,
    APIntAttr<I<16>>:$SDM1DATA1_0,
    APIntAttr<I<9>>:$SDM1DATA1_1,
    APIntAttr<I<16>>:$SDM1INITSEED0_0,
    APIntAttr<I<9>>:$SDM1INITSEED0_1,
    APIntAttr<I<1>>:$SDM1_DATA_PIN_SEL,
    APIntAttr<I<1>>:$SDM1_WIDTH_PIN_SEL,
    StrAttr:$SIM_MODE,
    StrAttr:$SIM_RESET_SPEEDUP,
    SI64Attr:$SIM_VERSION
  );

  let results = (outs
    I<16>:$DRPDO,
    I<1>:$DRPRDY,
    I<8>:$PMARSVDOUT0,
    I<8>:$PMARSVDOUT1,
    I<1>:$QPLL0FBCLKLOST,
    I<1>:$QPLL0LOCK,
    I<1>:$QPLL0OUTCLK,
    I<1>:$QPLL0OUTREFCLK,
    I<1>:$QPLL0REFCLKLOST,
    I<1>:$QPLL1FBCLKLOST,
    I<1>:$QPLL1LOCK,
    I<1>:$QPLL1OUTCLK,
    I<1>:$QPLL1OUTREFCLK,
    I<1>:$QPLL1REFCLKLOST,
    I<8>:$QPLLDMONITOR0,
    I<8>:$QPLLDMONITOR1,
    I<1>:$REFCLKOUTMONITOR0,
    I<1>:$REFCLKOUTMONITOR1,
    I<2>:$RXRECCLK0_SEL,
    I<2>:$RXRECCLK1_SEL
  );
}

def GTHE4uCHANNEL : XilinxPrimitiveOp<"GTHE4_CHANNEL", []> {
  let summary = "GTHE4_CHANNEL Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CDRSTEPDIR,
    I<1>:$CDRSTEPSQ,
    I<1>:$CDRSTEPSX,
    I<1>:$CFGRESET,
    I<1>:$CLKRSVD0,
    I<1>:$CLKRSVD1,
    I<1>:$CPLLFREQLOCK,
    I<1>:$CPLLLOCKDETCLK,
    I<1>:$CPLLLOCKEN,
    I<1>:$CPLLPD,
    I<3>:$CPLLREFCLKSEL,
    I<1>:$CPLLRESET,
    I<1>:$DMONFIFORESET,
    I<1>:$DMONITORCLK,
    I<10>:$DRPADDR,
    I<1>:$DRPCLK,
    I<16>:$DRPDI,
    I<1>:$DRPEN,
    I<1>:$DRPRST,
    I<1>:$DRPWE,
    I<1>:$EYESCANRESET,
    I<1>:$EYESCANTRIGGER,
    I<1>:$FREQOS,
    I<1>:$GTGREFCLK,
    I<1>:$GTHRXN,
    I<1>:$GTHRXP,
    I<1>:$GTNORTHREFCLK0,
    I<1>:$GTNORTHREFCLK1,
    I<1>:$GTREFCLK0,
    I<1>:$GTREFCLK1,
    I<16>:$GTRSVD,
    I<1>:$GTRXRESET,
    I<1>:$GTRXRESETSEL,
    I<1>:$GTSOUTHREFCLK0,
    I<1>:$GTSOUTHREFCLK1,
    I<1>:$GTTXRESET,
    I<1>:$GTTXRESETSEL,
    I<1>:$INCPCTRL,
    I<3>:$LOOPBACK,
    I<1>:$PCIEEQRXEQADAPTDONE,
    I<1>:$PCIERSTIDLE,
    I<1>:$PCIERSTTXSYNCSTART,
    I<1>:$PCIEUSERRATEDONE,
    I<16>:$PCSRSVDIN,
    I<1>:$QPLL0CLK,
    I<1>:$QPLL0FREQLOCK,
    I<1>:$QPLL0REFCLK,
    I<1>:$QPLL1CLK,
    I<1>:$QPLL1FREQLOCK,
    I<1>:$QPLL1REFCLK,
    I<1>:$RESETOVRD,
    I<1>:$RX8B10BEN,
    I<1>:$RXAFECFOKEN,
    I<1>:$RXBUFRESET,
    I<1>:$RXCDRFREQRESET,
    I<1>:$RXCDRHOLD,
    I<1>:$RXCDROVRDEN,
    I<1>:$RXCDRRESET,
    I<1>:$RXCHBONDEN,
    I<5>:$RXCHBONDI,
    I<3>:$RXCHBONDLEVEL,
    I<1>:$RXCHBONDMASTER,
    I<1>:$RXCHBONDSLAVE,
    I<1>:$RXCKCALRESET,
    I<7>:$RXCKCALSTART,
    I<1>:$RXCOMMADETEN,
    I<2>:$RXDFEAGCCTRL,
    I<1>:$RXDFEAGCHOLD,
    I<1>:$RXDFEAGCOVRDEN,
    I<4>:$RXDFECFOKFCNUM,
    I<1>:$RXDFECFOKFEN,
    I<1>:$RXDFECFOKFPULSE,
    I<1>:$RXDFECFOKHOLD,
    I<1>:$RXDFECFOKOVREN,
    I<1>:$RXDFEKHHOLD,
    I<1>:$RXDFEKHOVRDEN,
    I<1>:$RXDFELFHOLD,
    I<1>:$RXDFELFOVRDEN,
    I<1>:$RXDFELPMRESET,
    I<1>:$RXDFETAP10HOLD,
    I<1>:$RXDFETAP10OVRDEN,
    I<1>:$RXDFETAP11HOLD,
    I<1>:$RXDFETAP11OVRDEN,
    I<1>:$RXDFETAP12HOLD,
    I<1>:$RXDFETAP12OVRDEN,
    I<1>:$RXDFETAP13HOLD,
    I<1>:$RXDFETAP13OVRDEN,
    I<1>:$RXDFETAP14HOLD,
    I<1>:$RXDFETAP14OVRDEN,
    I<1>:$RXDFETAP15HOLD,
    I<1>:$RXDFETAP15OVRDEN,
    I<1>:$RXDFETAP2HOLD,
    I<1>:$RXDFETAP2OVRDEN,
    I<1>:$RXDFETAP3HOLD,
    I<1>:$RXDFETAP3OVRDEN,
    I<1>:$RXDFETAP4HOLD,
    I<1>:$RXDFETAP4OVRDEN,
    I<1>:$RXDFETAP5HOLD,
    I<1>:$RXDFETAP5OVRDEN,
    I<1>:$RXDFETAP6HOLD,
    I<1>:$RXDFETAP6OVRDEN,
    I<1>:$RXDFETAP7HOLD,
    I<1>:$RXDFETAP7OVRDEN,
    I<1>:$RXDFETAP8HOLD,
    I<1>:$RXDFETAP8OVRDEN,
    I<1>:$RXDFETAP9HOLD,
    I<1>:$RXDFETAP9OVRDEN,
    I<1>:$RXDFEUTHOLD,
    I<1>:$RXDFEUTOVRDEN,
    I<1>:$RXDFEVPHOLD,
    I<1>:$RXDFEVPOVRDEN,
    I<1>:$RXDFEXYDEN,
    I<1>:$RXDLYBYPASS,
    I<1>:$RXDLYEN,
    I<1>:$RXDLYOVRDEN,
    I<1>:$RXDLYSRESET,
    I<2>:$RXELECIDLEMODE,
    I<1>:$RXEQTRAINING,
    I<1>:$RXGEARBOXSLIP,
    I<1>:$RXLATCLK,
    I<1>:$RXLPMEN,
    I<1>:$RXLPMGCHOLD,
    I<1>:$RXLPMGCOVRDEN,
    I<1>:$RXLPMHFHOLD,
    I<1>:$RXLPMHFOVRDEN,
    I<1>:$RXLPMLFHOLD,
    I<1>:$RXLPMLFKLOVRDEN,
    I<1>:$RXLPMOSHOLD,
    I<1>:$RXLPMOSOVRDEN,
    I<1>:$RXMCOMMAALIGNEN,
    I<2>:$RXMONITORSEL,
    I<1>:$RXOOBRESET,
    I<1>:$RXOSCALRESET,
    I<1>:$RXOSHOLD,
    I<1>:$RXOSOVRDEN,
    I<3>:$RXOUTCLKSEL,
    I<1>:$RXPCOMMAALIGNEN,
    I<1>:$RXPCSRESET,
    I<2>:$RXPD,
    I<1>:$RXPHALIGN,
    I<1>:$RXPHALIGNEN,
    I<1>:$RXPHDLYPD,
    I<1>:$RXPHDLYRESET,
    I<1>:$RXPHOVRDEN,
    I<2>:$RXPLLCLKSEL,
    I<1>:$RXPMARESET,
    I<1>:$RXPOLARITY,
    I<1>:$RXPRBSCNTRESET,
    I<4>:$RXPRBSSEL,
    I<1>:$RXPROGDIVRESET,
    I<1>:$RXQPIEN,
    I<3>:$RXRATE,
    I<1>:$RXRATEMODE,
    I<1>:$RXSLIDE,
    I<1>:$RXSLIPOUTCLK,
    I<1>:$RXSLIPPMA,
    I<1>:$RXSYNCALLIN,
    I<1>:$RXSYNCIN,
    I<1>:$RXSYNCMODE,
    I<2>:$RXSYSCLKSEL,
    I<1>:$RXTERMINATION,
    I<1>:$RXUSERRDY,
    I<1>:$RXUSRCLK,
    I<1>:$RXUSRCLK2,
    I<1>:$SIGVALIDCLK,
    I<20>:$TSTIN,
    I<8>:$TX8B10BBYPASS,
    I<1>:$TX8B10BEN,
    I<1>:$TXCOMINIT,
    I<1>:$TXCOMSAS,
    I<1>:$TXCOMWAKE,
    I<16>:$TXCTRL0,
    I<16>:$TXCTRL1,
    I<8>:$TXCTRL2,
    I<128>:$TXDATA,
    I<8>:$TXDATAEXTENDRSVD,
    I<1>:$TXDCCFORCESTART,
    I<1>:$TXDCCRESET,
    I<2>:$TXDEEMPH,
    I<1>:$TXDETECTRX,
    I<5>:$TXDIFFCTRL,
    I<1>:$TXDLYBYPASS,
    I<1>:$TXDLYEN,
    I<1>:$TXDLYHOLD,
    I<1>:$TXDLYOVRDEN,
    I<1>:$TXDLYSRESET,
    I<1>:$TXDLYUPDOWN,
    I<1>:$TXELECIDLE,
    I<6>:$TXHEADER,
    I<1>:$TXINHIBIT,
    I<1>:$TXLATCLK,
    I<1>:$TXLFPSTRESET,
    I<1>:$TXLFPSU2LPEXIT,
    I<1>:$TXLFPSU3WAKE,
    I<7>:$TXMAINCURSOR,
    I<3>:$TXMARGIN,
    I<1>:$TXMUXDCDEXHOLD,
    I<1>:$TXMUXDCDORWREN,
    I<1>:$TXONESZEROS,
    I<3>:$TXOUTCLKSEL,
    I<1>:$TXPCSRESET,
    I<2>:$TXPD,
    I<1>:$TXPDELECIDLEMODE,
    I<1>:$TXPHALIGN,
    I<1>:$TXPHALIGNEN,
    I<1>:$TXPHDLYPD,
    I<1>:$TXPHDLYRESET,
    I<1>:$TXPHDLYTSTCLK,
    I<1>:$TXPHINIT,
    I<1>:$TXPHOVRDEN,
    I<1>:$TXPIPPMEN,
    I<1>:$TXPIPPMOVRDEN,
    I<1>:$TXPIPPMPD,
    I<1>:$TXPIPPMSEL,
    I<5>:$TXPIPPMSTEPSIZE,
    I<1>:$TXPISOPD,
    I<2>:$TXPLLCLKSEL,
    I<1>:$TXPMARESET,
    I<1>:$TXPOLARITY,
    I<5>:$TXPOSTCURSOR,
    I<1>:$TXPRBSFORCEERR,
    I<4>:$TXPRBSSEL,
    I<5>:$TXPRECURSOR,
    I<1>:$TXPROGDIVRESET,
    I<1>:$TXQPIBIASEN,
    I<1>:$TXQPIWEAKPUP,
    I<3>:$TXRATE,
    I<1>:$TXRATEMODE,
    I<7>:$TXSEQUENCE,
    I<1>:$TXSWING,
    I<1>:$TXSYNCALLIN,
    I<1>:$TXSYNCIN,
    I<1>:$TXSYNCMODE,
    I<2>:$TXSYSCLKSEL,
    I<1>:$TXUSERRDY,
    I<1>:$TXUSRCLK,
    I<1>:$TXUSRCLK2,

    // GTHE4_CHANNEL parameters follows
    APIntAttr<I<1>>:$ACJTAG_DEBUG_MODE,
    APIntAttr<I<1>>:$ACJTAG_MODE,
    APIntAttr<I<1>>:$ACJTAG_RESET,
    APIntAttr<I<16>>:$ADAPT_CFG0,
    APIntAttr<I<16>>:$ADAPT_CFG1,
    APIntAttr<I<16>>:$ADAPT_CFG2,
    StrAttr:$ALIGN_COMMA_DOUBLE,
    APIntAttr<I<10>>:$ALIGN_COMMA_ENABLE,
    SI64Attr:$ALIGN_COMMA_WORD,
    StrAttr:$ALIGN_MCOMMA_DET,
    APIntAttr<I<10>>:$ALIGN_MCOMMA_VALUE,
    StrAttr:$ALIGN_PCOMMA_DET,
    APIntAttr<I<10>>:$ALIGN_PCOMMA_VALUE,
    APIntAttr<I<1>>:$A_RXOSCALRESET,
    APIntAttr<I<1>>:$A_RXPROGDIVRESET,
    APIntAttr<I<1>>:$A_RXTERMINATION,
    APIntAttr<I<5>>:$A_TXDIFFCTRL,
    APIntAttr<I<1>>:$A_TXPROGDIVRESET,
    APIntAttr<I<1>>:$CAPBYPASS_FORCE,
    StrAttr:$CBCC_DATA_SOURCE_SEL,
    APIntAttr<I<1>>:$CDR_SWAP_MODE_EN,
    APIntAttr<I<1>>:$CFOK_PWRSVE_EN,
    StrAttr:$CHAN_BOND_KEEP_ALIGN,
    SI64Attr:$CHAN_BOND_MAX_SKEW,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_1,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_2,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_3,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_4,
    APIntAttr<I<4>>:$CHAN_BOND_SEQ_1_ENABLE,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_1,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_2,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_3,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_4,
    APIntAttr<I<4>>:$CHAN_BOND_SEQ_2_ENABLE,
    StrAttr:$CHAN_BOND_SEQ_2_USE,
    SI64Attr:$CHAN_BOND_SEQ_LEN,
    APIntAttr<I<16>>:$CH_HSPMUX,
    APIntAttr<I<16>>:$CKCAL1_CFG_0,
    APIntAttr<I<16>>:$CKCAL1_CFG_1,
    APIntAttr<I<16>>:$CKCAL1_CFG_2,
    APIntAttr<I<16>>:$CKCAL1_CFG_3,
    APIntAttr<I<16>>:$CKCAL2_CFG_0,
    APIntAttr<I<16>>:$CKCAL2_CFG_1,
    APIntAttr<I<16>>:$CKCAL2_CFG_2,
    APIntAttr<I<16>>:$CKCAL2_CFG_3,
    APIntAttr<I<16>>:$CKCAL2_CFG_4,
    APIntAttr<I<16>>:$CKCAL_RSVD0,
    APIntAttr<I<16>>:$CKCAL_RSVD1,
    StrAttr:$CLK_CORRECT_USE,
    StrAttr:$CLK_COR_KEEP_IDLE,
    SI64Attr:$CLK_COR_MAX_LAT,
    SI64Attr:$CLK_COR_MIN_LAT,
    StrAttr:$CLK_COR_PRECEDENCE,
    SI64Attr:$CLK_COR_REPEAT_WAIT,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_1,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_2,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_3,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_4,
    APIntAttr<I<4>>:$CLK_COR_SEQ_1_ENABLE,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_1,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_2,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_3,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_4,
    APIntAttr<I<4>>:$CLK_COR_SEQ_2_ENABLE,
    StrAttr:$CLK_COR_SEQ_2_USE,
    SI64Attr:$CLK_COR_SEQ_LEN,
    APIntAttr<I<16>>:$CPLL_CFG0,
    APIntAttr<I<16>>:$CPLL_CFG1,
    APIntAttr<I<16>>:$CPLL_CFG2,
    APIntAttr<I<16>>:$CPLL_CFG3,
    SI64Attr:$CPLL_FBDIV,
    SI64Attr:$CPLL_FBDIV_45,
    APIntAttr<I<16>>:$CPLL_INIT_CFG0,
    APIntAttr<I<16>>:$CPLL_LOCK_CFG,
    SI64Attr:$CPLL_REFCLK_DIV,
    APIntAttr<I<3>>:$CTLE3_OCAP_EXT_CTRL,
    APIntAttr<I<1>>:$CTLE3_OCAP_EXT_EN,
    APIntAttr<I<2>>:$DDI_CTRL,
    SI64Attr:$DDI_REALIGN_WAIT,
    StrAttr:$DEC_MCOMMA_DETECT,
    StrAttr:$DEC_PCOMMA_DETECT,
    StrAttr:$DEC_VALID_COMMA_ONLY,
    APIntAttr<I<1>>:$DELAY_ELEC,
    APIntAttr<I<10>>:$DMONITOR_CFG0,
    APIntAttr<I<8>>:$DMONITOR_CFG1,
    APIntAttr<I<1>>:$ES_CLK_PHASE_SEL,
    APIntAttr<I<6>>:$ES_CONTROL,
    StrAttr:$ES_ERRDET_EN,
    StrAttr:$ES_EYE_SCAN_EN,
    APIntAttr<I<12>>:$ES_HORZ_OFFSET,
    APIntAttr<I<5>>:$ES_PRESCALE,
    APIntAttr<I<16>>:$ES_QUALIFIER0,
    APIntAttr<I<16>>:$ES_QUALIFIER1,
    APIntAttr<I<16>>:$ES_QUALIFIER2,
    APIntAttr<I<16>>:$ES_QUALIFIER3,
    APIntAttr<I<16>>:$ES_QUALIFIER4,
    APIntAttr<I<16>>:$ES_QUALIFIER5,
    APIntAttr<I<16>>:$ES_QUALIFIER6,
    APIntAttr<I<16>>:$ES_QUALIFIER7,
    APIntAttr<I<16>>:$ES_QUALIFIER8,
    APIntAttr<I<16>>:$ES_QUALIFIER9,
    APIntAttr<I<16>>:$ES_QUAL_MASK0,
    APIntAttr<I<16>>:$ES_QUAL_MASK1,
    APIntAttr<I<16>>:$ES_QUAL_MASK2,
    APIntAttr<I<16>>:$ES_QUAL_MASK3,
    APIntAttr<I<16>>:$ES_QUAL_MASK4,
    APIntAttr<I<16>>:$ES_QUAL_MASK5,
    APIntAttr<I<16>>:$ES_QUAL_MASK6,
    APIntAttr<I<16>>:$ES_QUAL_MASK7,
    APIntAttr<I<16>>:$ES_QUAL_MASK8,
    APIntAttr<I<16>>:$ES_QUAL_MASK9,
    APIntAttr<I<16>>:$ES_SDATA_MASK0,
    APIntAttr<I<16>>:$ES_SDATA_MASK1,
    APIntAttr<I<16>>:$ES_SDATA_MASK2,
    APIntAttr<I<16>>:$ES_SDATA_MASK3,
    APIntAttr<I<16>>:$ES_SDATA_MASK4,
    APIntAttr<I<16>>:$ES_SDATA_MASK5,
    APIntAttr<I<16>>:$ES_SDATA_MASK6,
    APIntAttr<I<16>>:$ES_SDATA_MASK7,
    APIntAttr<I<16>>:$ES_SDATA_MASK8,
    APIntAttr<I<16>>:$ES_SDATA_MASK9,
    APIntAttr<I<1>>:$EYE_SCAN_SWAP_EN,
    APIntAttr<I<4>>:$FTS_DESKEW_SEQ_ENABLE,
    APIntAttr<I<4>>:$FTS_LANE_DESKEW_CFG,
    StrAttr:$FTS_LANE_DESKEW_EN,
    APIntAttr<I<5>>:$GEARBOX_MODE,
    APIntAttr<I<1>>:$ISCAN_CK_PH_SEL2,
    APIntAttr<I<1>>:$LOCAL_MASTER,
    APIntAttr<I<3>>:$LPBK_BIAS_CTRL,
    APIntAttr<I<1>>:$LPBK_EN_RCAL_B,
    APIntAttr<I<4>>:$LPBK_EXT_RCAL,
    APIntAttr<I<3>>:$LPBK_IND_CTRL0,
    APIntAttr<I<3>>:$LPBK_IND_CTRL1,
    APIntAttr<I<3>>:$LPBK_IND_CTRL2,
    APIntAttr<I<4>>:$LPBK_RG_CTRL,
    APIntAttr<I<2>>:$OOBDIVCTL,
    APIntAttr<I<1>>:$OOB_PWRUP,
    StrAttr:$PCI3_AUTO_REALIGN,
    APIntAttr<I<1>>:$PCI3_PIPE_RX_ELECIDLE,
    APIntAttr<I<2>>:$PCI3_RX_ASYNC_EBUF_BYPASS,
    APIntAttr<I<1>>:$PCI3_RX_ELECIDLE_EI2_ENABLE,
    APIntAttr<I<6>>:$PCI3_RX_ELECIDLE_H2L_COUNT,
    APIntAttr<I<3>>:$PCI3_RX_ELECIDLE_H2L_DISABLE,
    APIntAttr<I<6>>:$PCI3_RX_ELECIDLE_HI_COUNT,
    APIntAttr<I<1>>:$PCI3_RX_ELECIDLE_LP4_DISABLE,
    APIntAttr<I<1>>:$PCI3_RX_FIFO_DISABLE,
    APIntAttr<I<5>>:$PCIE3_CLK_COR_EMPTY_THRSH,
    APIntAttr<I<6>>:$PCIE3_CLK_COR_FULL_THRSH,
    APIntAttr<I<5>>:$PCIE3_CLK_COR_MAX_LAT,
    APIntAttr<I<5>>:$PCIE3_CLK_COR_MIN_LAT,
    APIntAttr<I<6>>:$PCIE3_CLK_COR_THRSH_TIMER,
    APIntAttr<I<16>>:$PCIE_BUFG_DIV_CTRL,
    APIntAttr<I<2>>:$PCIE_PLL_SEL_MODE_GEN12,
    APIntAttr<I<2>>:$PCIE_PLL_SEL_MODE_GEN3,
    APIntAttr<I<2>>:$PCIE_PLL_SEL_MODE_GEN4,
    APIntAttr<I<16>>:$PCIE_RXPCS_CFG_GEN3,
    APIntAttr<I<16>>:$PCIE_RXPMA_CFG,
    APIntAttr<I<16>>:$PCIE_TXPCS_CFG_GEN3,
    APIntAttr<I<16>>:$PCIE_TXPMA_CFG,
    StrAttr:$PCS_PCIE_EN,
    APIntAttr<I<16>>:$PCS_RSVD0,
    APIntAttr<I<12>>:$PD_TRANS_TIME_FROM_P2,
    APIntAttr<I<8>>:$PD_TRANS_TIME_NONE_P2,
    APIntAttr<I<8>>:$PD_TRANS_TIME_TO_P2,
    SI64Attr:$PREIQ_FREQ_BST,
    APIntAttr<I<3>>:$PROCESS_PAR,
    APIntAttr<I<1>>:$RATE_SW_USE_DRP,
    APIntAttr<I<1>>:$RCLK_SIPO_DLY_ENB,
    APIntAttr<I<1>>:$RCLK_SIPO_INV_EN,
    APIntAttr<I<1>>:$RESET_POWERSAVE_DISABLE,
    APIntAttr<I<3>>:$RTX_BUF_CML_CTRL,
    APIntAttr<I<2>>:$RTX_BUF_TERM_CTRL,
    APIntAttr<I<5>>:$RXBUFRESET_TIME,
    StrAttr:$RXBUF_ADDR_MODE,
    APIntAttr<I<4>>:$RXBUF_EIDLE_HI_CNT,
    APIntAttr<I<4>>:$RXBUF_EIDLE_LO_CNT,
    StrAttr:$RXBUF_EN,
    StrAttr:$RXBUF_RESET_ON_CB_CHANGE,
    StrAttr:$RXBUF_RESET_ON_COMMAALIGN,
    StrAttr:$RXBUF_RESET_ON_EIDLE,
    StrAttr:$RXBUF_RESET_ON_RATE_CHANGE,
    SI64Attr:$RXBUF_THRESH_OVFLW,
    StrAttr:$RXBUF_THRESH_OVRD,
    SI64Attr:$RXBUF_THRESH_UNDFLW,
    APIntAttr<I<5>>:$RXCDRFREQRESET_TIME,
    APIntAttr<I<5>>:$RXCDRPHRESET_TIME,
    APIntAttr<I<16>>:$RXCDR_CFG0,
    APIntAttr<I<16>>:$RXCDR_CFG0_GEN3,
    APIntAttr<I<16>>:$RXCDR_CFG1,
    APIntAttr<I<16>>:$RXCDR_CFG1_GEN3,
    APIntAttr<I<16>>:$RXCDR_CFG2,
    APIntAttr<I<10>>:$RXCDR_CFG2_GEN2,
    APIntAttr<I<16>>:$RXCDR_CFG2_GEN3,
    APIntAttr<I<16>>:$RXCDR_CFG2_GEN4,
    APIntAttr<I<16>>:$RXCDR_CFG3,
    APIntAttr<I<6>>:$RXCDR_CFG3_GEN2,
    APIntAttr<I<16>>:$RXCDR_CFG3_GEN3,
    APIntAttr<I<16>>:$RXCDR_CFG3_GEN4,
    APIntAttr<I<16>>:$RXCDR_CFG4,
    APIntAttr<I<16>>:$RXCDR_CFG4_GEN3,
    APIntAttr<I<16>>:$RXCDR_CFG5,
    APIntAttr<I<16>>:$RXCDR_CFG5_GEN3,
    APIntAttr<I<1>>:$RXCDR_FR_RESET_ON_EIDLE,
    APIntAttr<I<1>>:$RXCDR_HOLD_DURING_EIDLE,
    APIntAttr<I<16>>:$RXCDR_LOCK_CFG0,
    APIntAttr<I<16>>:$RXCDR_LOCK_CFG1,
    APIntAttr<I<16>>:$RXCDR_LOCK_CFG2,
    APIntAttr<I<16>>:$RXCDR_LOCK_CFG3,
    APIntAttr<I<16>>:$RXCDR_LOCK_CFG4,
    APIntAttr<I<1>>:$RXCDR_PH_RESET_ON_EIDLE,
    APIntAttr<I<16>>:$RXCFOK_CFG0,
    APIntAttr<I<16>>:$RXCFOK_CFG1,
    APIntAttr<I<16>>:$RXCFOK_CFG2,
    APIntAttr<I<16>>:$RXCKCAL1_IQ_LOOP_RST_CFG,
    APIntAttr<I<16>>:$RXCKCAL1_I_LOOP_RST_CFG,
    APIntAttr<I<16>>:$RXCKCAL1_Q_LOOP_RST_CFG,
    APIntAttr<I<16>>:$RXCKCAL2_DX_LOOP_RST_CFG,
    APIntAttr<I<16>>:$RXCKCAL2_D_LOOP_RST_CFG,
    APIntAttr<I<16>>:$RXCKCAL2_S_LOOP_RST_CFG,
    APIntAttr<I<16>>:$RXCKCAL2_X_LOOP_RST_CFG,
    APIntAttr<I<7>>:$RXDFELPMRESET_TIME,
    APIntAttr<I<16>>:$RXDFELPM_KL_CFG0,
    APIntAttr<I<16>>:$RXDFELPM_KL_CFG1,
    APIntAttr<I<16>>:$RXDFELPM_KL_CFG2,
    APIntAttr<I<16>>:$RXDFE_CFG0,
    APIntAttr<I<16>>:$RXDFE_CFG1,
    APIntAttr<I<16>>:$RXDFE_GC_CFG0,
    APIntAttr<I<16>>:$RXDFE_GC_CFG1,
    APIntAttr<I<16>>:$RXDFE_GC_CFG2,
    APIntAttr<I<16>>:$RXDFE_H2_CFG0,
    APIntAttr<I<16>>:$RXDFE_H2_CFG1,
    APIntAttr<I<16>>:$RXDFE_H3_CFG0,
    APIntAttr<I<16>>:$RXDFE_H3_CFG1,
    APIntAttr<I<16>>:$RXDFE_H4_CFG0,
    APIntAttr<I<16>>:$RXDFE_H4_CFG1,
    APIntAttr<I<16>>:$RXDFE_H5_CFG0,
    APIntAttr<I<16>>:$RXDFE_H5_CFG1,
    APIntAttr<I<16>>:$RXDFE_H6_CFG0,
    APIntAttr<I<16>>:$RXDFE_H6_CFG1,
    APIntAttr<I<16>>:$RXDFE_H7_CFG0,
    APIntAttr<I<16>>:$RXDFE_H7_CFG1,
    APIntAttr<I<16>>:$RXDFE_H8_CFG0,
    APIntAttr<I<16>>:$RXDFE_H8_CFG1,
    APIntAttr<I<16>>:$RXDFE_H9_CFG0,
    APIntAttr<I<16>>:$RXDFE_H9_CFG1,
    APIntAttr<I<16>>:$RXDFE_HA_CFG0,
    APIntAttr<I<16>>:$RXDFE_HA_CFG1,
    APIntAttr<I<16>>:$RXDFE_HB_CFG0,
    APIntAttr<I<16>>:$RXDFE_HB_CFG1,
    APIntAttr<I<16>>:$RXDFE_HC_CFG0,
    APIntAttr<I<16>>:$RXDFE_HC_CFG1,
    APIntAttr<I<16>>:$RXDFE_HD_CFG0,
    APIntAttr<I<16>>:$RXDFE_HD_CFG1,
    APIntAttr<I<16>>:$RXDFE_HE_CFG0,
    APIntAttr<I<16>>:$RXDFE_HE_CFG1,
    APIntAttr<I<16>>:$RXDFE_HF_CFG0,
    APIntAttr<I<16>>:$RXDFE_HF_CFG1,
    APIntAttr<I<16>>:$RXDFE_KH_CFG0,
    APIntAttr<I<16>>:$RXDFE_KH_CFG1,
    APIntAttr<I<16>>:$RXDFE_KH_CFG2,
    APIntAttr<I<16>>:$RXDFE_KH_CFG3,
    APIntAttr<I<16>>:$RXDFE_OS_CFG0,
    APIntAttr<I<16>>:$RXDFE_OS_CFG1,
    APIntAttr<I<1>>:$RXDFE_PWR_SAVING,
    APIntAttr<I<16>>:$RXDFE_UT_CFG0,
    APIntAttr<I<16>>:$RXDFE_UT_CFG1,
    APIntAttr<I<16>>:$RXDFE_UT_CFG2,
    APIntAttr<I<16>>:$RXDFE_VP_CFG0,
    APIntAttr<I<16>>:$RXDFE_VP_CFG1,
    APIntAttr<I<16>>:$RXDLY_CFG,
    APIntAttr<I<16>>:$RXDLY_LCFG,
    StrAttr:$RXELECIDLE_CFG,
    SI64Attr:$RXGBOX_FIFO_INIT_RD_ADDR,
    StrAttr:$RXGEARBOX_EN,
    APIntAttr<I<5>>:$RXISCANRESET_TIME,
    APIntAttr<I<16>>:$RXLPM_CFG,
    APIntAttr<I<16>>:$RXLPM_GC_CFG,
    APIntAttr<I<16>>:$RXLPM_KH_CFG0,
    APIntAttr<I<16>>:$RXLPM_KH_CFG1,
    APIntAttr<I<16>>:$RXLPM_OS_CFG0,
    APIntAttr<I<16>>:$RXLPM_OS_CFG1,
    APIntAttr<I<9>>:$RXOOB_CFG,
    StrAttr:$RXOOB_CLK_CFG,
    APIntAttr<I<5>>:$RXOSCALRESET_TIME,
    SI64Attr:$RXOUT_DIV,
    APIntAttr<I<5>>:$RXPCSRESET_TIME,
    APIntAttr<I<16>>:$RXPHBEACON_CFG,
    APIntAttr<I<16>>:$RXPHDLY_CFG,
    APIntAttr<I<16>>:$RXPHSAMP_CFG,
    APIntAttr<I<16>>:$RXPHSLIP_CFG,
    APIntAttr<I<5>>:$RXPH_MONITOR_SEL,
    APIntAttr<I<1>>:$RXPI_AUTO_BW_SEL_BYPASS,
    APIntAttr<I<16>>:$RXPI_CFG0,
    APIntAttr<I<16>>:$RXPI_CFG1,
    APIntAttr<I<1>>:$RXPI_LPM,
    APIntAttr<I<2>>:$RXPI_SEL_LC,
    APIntAttr<I<2>>:$RXPI_STARTCODE,
    APIntAttr<I<1>>:$RXPI_VREFSEL,
    StrAttr:$RXPMACLK_SEL,
    APIntAttr<I<5>>:$RXPMARESET_TIME,
    APIntAttr<I<1>>:$RXPRBS_ERR_LOOPBACK,
    SI64Attr:$RXPRBS_LINKACQ_CNT,
    APIntAttr<I<1>>:$RXREFCLKDIV2_SEL,
    SI64Attr:$RXSLIDE_AUTO_WAIT,
    StrAttr:$RXSLIDE_MODE,
    APIntAttr<I<1>>:$RXSYNC_MULTILANE,
    APIntAttr<I<1>>:$RXSYNC_OVRD,
    APIntAttr<I<1>>:$RXSYNC_SKIP_DA,
    APIntAttr<I<1>>:$RX_AFE_CM_EN,
    APIntAttr<I<16>>:$RX_BIAS_CFG0,
    APIntAttr<I<6>>:$RX_BUFFER_CFG,
    APIntAttr<I<1>>:$RX_CAPFF_SARC_ENB,
    SI64Attr:$RX_CLK25_DIV,
    APIntAttr<I<1>>:$RX_CLKMUX_EN,
    APIntAttr<I<5>>:$RX_CLK_SLIP_OVRD,
    APIntAttr<I<4>>:$RX_CM_BUF_CFG,
    APIntAttr<I<1>>:$RX_CM_BUF_PD,
    SI64Attr:$RX_CM_SEL,
    SI64Attr:$RX_CM_TRIM,
    APIntAttr<I<8>>:$RX_CTLE3_LPF,
    SI64Attr:$RX_DATA_WIDTH,
    APIntAttr<I<6>>:$RX_DDI_SEL,
    StrAttr:$RX_DEFER_RESET_BUF_EN,
    APIntAttr<I<3>>:$RX_DEGEN_CTRL,
    SI64Attr:$RX_DFELPM_CFG0,
    APIntAttr<I<1>>:$RX_DFELPM_CFG1,
    APIntAttr<I<1>>:$RX_DFELPM_KLKH_AGC_STUP_EN,
    APIntAttr<I<2>>:$RX_DFE_AGC_CFG0,
    SI64Attr:$RX_DFE_AGC_CFG1,
    SI64Attr:$RX_DFE_KL_LPM_KH_CFG0,
    SI64Attr:$RX_DFE_KL_LPM_KH_CFG1,
    APIntAttr<I<2>>:$RX_DFE_KL_LPM_KL_CFG0,
    SI64Attr:$RX_DFE_KL_LPM_KL_CFG1,
    APIntAttr<I<1>>:$RX_DFE_LPM_HOLD_DURING_EIDLE,
    StrAttr:$RX_DISPERR_SEQ_MATCH,
    APIntAttr<I<1>>:$RX_DIV2_MODE_B,
    APIntAttr<I<5>>:$RX_DIVRESET_TIME,
    APIntAttr<I<1>>:$RX_EN_CTLE_RCAL_B,
    APIntAttr<I<1>>:$RX_EN_HI_LR,
    APIntAttr<I<9>>:$RX_EXT_RL_CTRL,
    APIntAttr<I<7>>:$RX_EYESCAN_VS_CODE,
    APIntAttr<I<1>>:$RX_EYESCAN_VS_NEG_DIR,
    APIntAttr<I<2>>:$RX_EYESCAN_VS_RANGE,
    APIntAttr<I<1>>:$RX_EYESCAN_VS_UT_SIGN,
    APIntAttr<I<1>>:$RX_FABINT_USRCLK_FLOP,
    SI64Attr:$RX_INT_DATAWIDTH,
    APIntAttr<I<1>>:$RX_PMA_POWER_SAVE,
    APIntAttr<I<16>>:$RX_PMA_RSV0,
    StrAttr:$RX_PROGDIV_CFG,
    APIntAttr<I<16>>:$RX_PROGDIV_RATE,
    APIntAttr<I<4>>:$RX_RESLOAD_CTRL,
    APIntAttr<I<1>>:$RX_RESLOAD_OVRD,
    APIntAttr<I<3>>:$RX_SAMPLE_PERIOD,
    SI64Attr:$RX_SIG_VALID_DLY,
    APIntAttr<I<1>>:$RX_SUM_DFETAPREP_EN,
    APIntAttr<I<4>>:$RX_SUM_IREF_TUNE,
    APIntAttr<I<4>>:$RX_SUM_RESLOAD_CTRL,
    APIntAttr<I<4>>:$RX_SUM_VCMTUNE,
    APIntAttr<I<1>>:$RX_SUM_VCM_OVWR,
    APIntAttr<I<3>>:$RX_SUM_VREF_TUNE,
    APIntAttr<I<2>>:$RX_TUNE_AFE_OS,
    APIntAttr<I<3>>:$RX_VREG_CTRL,
    APIntAttr<I<1>>:$RX_VREG_PDB,
    APIntAttr<I<2>>:$RX_WIDEMODE_CDR,
    APIntAttr<I<2>>:$RX_WIDEMODE_CDR_GEN3,
    APIntAttr<I<2>>:$RX_WIDEMODE_CDR_GEN4,
    StrAttr:$RX_XCLK_SEL,
    APIntAttr<I<1>>:$RX_XMODE_SEL,
    APIntAttr<I<1>>:$SAMPLE_CLK_PHASE,
    APIntAttr<I<1>>:$SAS_12G_MODE,
    APIntAttr<I<4>>:$SATA_BURST_SEQ_LEN,
    APIntAttr<I<3>>:$SATA_BURST_VAL,
    StrAttr:$SATA_CPLL_CFG,
    APIntAttr<I<3>>:$SATA_EIDLE_VAL,
    StrAttr:$SHOW_REALIGN_COMMA,
    StrAttr:$SIM_DEVICE,
    StrAttr:$SIM_MODE,
    StrAttr:$SIM_RECEIVER_DETECT_PASS,
    StrAttr:$SIM_RESET_SPEEDUP,
    StrAttr:$SIM_TX_EIDLE_DRIVE_LEVEL,
    APIntAttr<I<1>>:$SRSTMODE,
    APIntAttr<I<2>>:$TAPDLY_SET_TX,
    APIntAttr<I<4>>:$TEMPERATURE_PAR,
    APIntAttr<I<15>>:$TERM_RCAL_CFG,
    APIntAttr<I<3>>:$TERM_RCAL_OVRD,
    APIntAttr<I<8>>:$TRANS_TIME_RATE,
    APIntAttr<I<8>>:$TST_RSV0,
    APIntAttr<I<8>>:$TST_RSV1,
    StrAttr:$TXBUF_EN,
    StrAttr:$TXBUF_RESET_ON_RATE_CHANGE,
    APIntAttr<I<16>>:$TXDLY_CFG,
    APIntAttr<I<16>>:$TXDLY_LCFG,
    APIntAttr<I<4>>:$TXDRVBIAS_N,
    StrAttr:$TXFIFO_ADDR_CFG,
    SI64Attr:$TXGBOX_FIFO_INIT_RD_ADDR,
    StrAttr:$TXGEARBOX_EN,
    SI64Attr:$TXOUT_DIV,
    APIntAttr<I<5>>:$TXPCSRESET_TIME,
    APIntAttr<I<16>>:$TXPHDLY_CFG0,
    APIntAttr<I<16>>:$TXPHDLY_CFG1,
    APIntAttr<I<16>>:$TXPH_CFG,
    APIntAttr<I<16>>:$TXPH_CFG2,
    APIntAttr<I<5>>:$TXPH_MONITOR_SEL,
    APIntAttr<I<16>>:$TXPI_CFG,
    APIntAttr<I<2>>:$TXPI_CFG0,
    APIntAttr<I<2>>:$TXPI_CFG1,
    APIntAttr<I<2>>:$TXPI_CFG2,
    APIntAttr<I<1>>:$TXPI_CFG3,
    APIntAttr<I<1>>:$TXPI_CFG4,
    APIntAttr<I<3>>:$TXPI_CFG5,
    APIntAttr<I<1>>:$TXPI_GRAY_SEL,
    APIntAttr<I<1>>:$TXPI_INVSTROBE_SEL,
    APIntAttr<I<1>>:$TXPI_LPM,
    APIntAttr<I<1>>:$TXPI_PPM,
    StrAttr:$TXPI_PPMCLK_SEL,
    APIntAttr<I<8>>:$TXPI_PPM_CFG,
    APIntAttr<I<3>>:$TXPI_SYNFREQ_PPM,
    APIntAttr<I<1>>:$TXPI_VREFSEL,
    APIntAttr<I<5>>:$TXPMARESET_TIME,
    APIntAttr<I<1>>:$TXREFCLKDIV2_SEL,
    APIntAttr<I<1>>:$TXSYNC_MULTILANE,
    APIntAttr<I<1>>:$TXSYNC_OVRD,
    APIntAttr<I<1>>:$TXSYNC_SKIP_DA,
    SI64Attr:$TX_CLK25_DIV,
    APIntAttr<I<1>>:$TX_CLKMUX_EN,
    SI64Attr:$TX_DATA_WIDTH,
    APIntAttr<I<16>>:$TX_DCC_LOOP_RST_CFG,
    APIntAttr<I<6>>:$TX_DEEMPH0,
    APIntAttr<I<6>>:$TX_DEEMPH1,
    APIntAttr<I<6>>:$TX_DEEMPH2,
    APIntAttr<I<6>>:$TX_DEEMPH3,
    APIntAttr<I<5>>:$TX_DIVRESET_TIME,
    StrAttr:$TX_DRIVE_MODE,
    SI64Attr:$TX_DRVMUX_CTRL,
    APIntAttr<I<3>>:$TX_EIDLE_ASSERT_DELAY,
    APIntAttr<I<3>>:$TX_EIDLE_DEASSERT_DELAY,
    APIntAttr<I<1>>:$TX_FABINT_USRCLK_FLOP,
    APIntAttr<I<1>>:$TX_FIFO_BYP_EN,
    APIntAttr<I<1>>:$TX_IDLE_DATA_ZERO,
    SI64Attr:$TX_INT_DATAWIDTH,
    StrAttr:$TX_LOOPBACK_DRIVE_HIZ,
    APIntAttr<I<1>>:$TX_MAINCURSOR_SEL,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_0,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_1,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_2,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_3,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_4,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_0,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_1,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_2,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_3,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_4,
    APIntAttr<I<16>>:$TX_PHICAL_CFG0,
    APIntAttr<I<16>>:$TX_PHICAL_CFG1,
    APIntAttr<I<16>>:$TX_PHICAL_CFG2,
    SI64Attr:$TX_PI_BIASSET,
    APIntAttr<I<2>>:$TX_PI_IBIAS_MID,
    APIntAttr<I<1>>:$TX_PMADATA_OPT,
    APIntAttr<I<1>>:$TX_PMA_POWER_SAVE,
    APIntAttr<I<16>>:$TX_PMA_RSV0,
    SI64Attr:$TX_PREDRV_CTRL,
    StrAttr:$TX_PROGCLK_SEL,
    StrAttr:$TX_PROGDIV_CFG,
    APIntAttr<I<16>>:$TX_PROGDIV_RATE,
    APIntAttr<I<1>>:$TX_QPI_STATUS_EN,
    APIntAttr<I<14>>:$TX_RXDETECT_CFG,
    SI64Attr:$TX_RXDETECT_REF,
    APIntAttr<I<3>>:$TX_SAMPLE_PERIOD,
    APIntAttr<I<1>>:$TX_SARC_LPBK_ENB,
    APIntAttr<I<2>>:$TX_SW_MEAS,
    APIntAttr<I<3>>:$TX_VREG_CTRL,
    APIntAttr<I<1>>:$TX_VREG_PDB,
    APIntAttr<I<2>>:$TX_VREG_VREFSEL,
    StrAttr:$TX_XCLK_SEL,
    APIntAttr<I<1>>:$USB_BOTH_BURST_IDLE,
    APIntAttr<I<7>>:$USB_BURSTMAX_U3WAKE,
    APIntAttr<I<7>>:$USB_BURSTMIN_U3WAKE,
    APIntAttr<I<1>>:$USB_CLK_COR_EQ_EN,
    APIntAttr<I<1>>:$USB_EXT_CNTL,
    APIntAttr<I<10>>:$USB_IDLEMAX_POLLING,
    APIntAttr<I<10>>:$USB_IDLEMIN_POLLING,
    APIntAttr<I<9>>:$USB_LFPSPING_BURST,
    APIntAttr<I<9>>:$USB_LFPSPOLLING_BURST,
    APIntAttr<I<9>>:$USB_LFPSPOLLING_IDLE_MS,
    APIntAttr<I<9>>:$USB_LFPSU1EXIT_BURST,
    APIntAttr<I<9>>:$USB_LFPSU2LPEXIT_BURST_MS,
    APIntAttr<I<9>>:$USB_LFPSU3WAKE_BURST_MS,
    APIntAttr<I<4>>:$USB_LFPS_TPERIOD,
    APIntAttr<I<1>>:$USB_LFPS_TPERIOD_ACCURATE,
    APIntAttr<I<1>>:$USB_MODE,
    APIntAttr<I<1>>:$USB_PCIE_ERR_REP_DIS,
    SI64Attr:$USB_PING_SATA_MAX_INIT,
    SI64Attr:$USB_PING_SATA_MIN_INIT,
    SI64Attr:$USB_POLL_SATA_MAX_BURST,
    SI64Attr:$USB_POLL_SATA_MIN_BURST,
    APIntAttr<I<1>>:$USB_RAW_ELEC,
    APIntAttr<I<1>>:$USB_RXIDLE_P0_CTRL,
    APIntAttr<I<1>>:$USB_TXIDLE_TUNE_ENABLE,
    SI64Attr:$USB_U1_SATA_MAX_WAKE,
    SI64Attr:$USB_U1_SATA_MIN_WAKE,
    SI64Attr:$USB_U2_SAS_MAX_COM,
    SI64Attr:$USB_U2_SAS_MIN_COM,
    APIntAttr<I<1>>:$USE_PCS_CLK_PHASE_SEL,
    APIntAttr<I<1>>:$Y_ALL_MODE
  );

  let results = (outs
    I<1>:$BUFGTCE,
    I<3>:$BUFGTCEMASK,
    I<9>:$BUFGTDIV,
    I<1>:$BUFGTRESET,
    I<3>:$BUFGTRSTMASK,
    I<1>:$CPLLFBCLKLOST,
    I<1>:$CPLLLOCK,
    I<1>:$CPLLREFCLKLOST,
    I<16>:$DMONITOROUT,
    I<1>:$DMONITOROUTCLK,
    I<16>:$DRPDO,
    I<1>:$DRPRDY,
    I<1>:$EYESCANDATAERROR,
    I<1>:$GTHTXN,
    I<1>:$GTHTXP,
    I<1>:$GTPOWERGOOD,
    I<1>:$GTREFCLKMONITOR,
    I<1>:$PCIERATEGEN3,
    I<1>:$PCIERATEIDLE,
    I<2>:$PCIERATEQPLLPD,
    I<2>:$PCIERATEQPLLRESET,
    I<1>:$PCIESYNCTXSYNCDONE,
    I<1>:$PCIEUSERGEN3RDY,
    I<1>:$PCIEUSERPHYSTATUSRST,
    I<1>:$PCIEUSERRATESTART,
    I<16>:$PCSRSVDOUT,
    I<1>:$PHYSTATUS,
    I<16>:$PINRSRVDAS,
    I<1>:$POWERPRESENT,
    I<1>:$RESETEXCEPTION,
    I<3>:$RXBUFSTATUS,
    I<1>:$RXBYTEISALIGNED,
    I<1>:$RXBYTEREALIGN,
    I<1>:$RXCDRLOCK,
    I<1>:$RXCDRPHDONE,
    I<1>:$RXCHANBONDSEQ,
    I<1>:$RXCHANISALIGNED,
    I<1>:$RXCHANREALIGN,
    I<5>:$RXCHBONDO,
    I<1>:$RXCKCALDONE,
    I<2>:$RXCLKCORCNT,
    I<1>:$RXCOMINITDET,
    I<1>:$RXCOMMADET,
    I<1>:$RXCOMSASDET,
    I<1>:$RXCOMWAKEDET,
    I<16>:$RXCTRL0,
    I<16>:$RXCTRL1,
    I<8>:$RXCTRL2,
    I<8>:$RXCTRL3,
    I<128>:$RXDATA,
    I<8>:$RXDATAEXTENDRSVD,
    I<2>:$RXDATAVALID,
    I<1>:$RXDLYSRESETDONE,
    I<1>:$RXELECIDLE,
    I<6>:$RXHEADER,
    I<2>:$RXHEADERVALID,
    I<1>:$RXLFPSTRESETDET,
    I<1>:$RXLFPSU2LPEXITDET,
    I<1>:$RXLFPSU3WAKEDET,
    I<8>:$RXMONITOROUT,
    I<1>:$RXOSINTDONE,
    I<1>:$RXOSINTSTARTED,
    I<1>:$RXOSINTSTROBEDONE,
    I<1>:$RXOSINTSTROBESTARTED,
    I<1>:$RXOUTCLK,
    I<1>:$RXOUTCLKFABRIC,
    I<1>:$RXOUTCLKPCS,
    I<1>:$RXPHALIGNDONE,
    I<1>:$RXPHALIGNERR,
    I<1>:$RXPMARESETDONE,
    I<1>:$RXPRBSERR,
    I<1>:$RXPRBSLOCKED,
    I<1>:$RXPRGDIVRESETDONE,
    I<1>:$RXQPISENN,
    I<1>:$RXQPISENP,
    I<1>:$RXRATEDONE,
    I<1>:$RXRECCLKOUT,
    I<1>:$RXRESETDONE,
    I<1>:$RXSLIDERDY,
    I<1>:$RXSLIPDONE,
    I<1>:$RXSLIPOUTCLKRDY,
    I<1>:$RXSLIPPMARDY,
    I<2>:$RXSTARTOFSEQ,
    I<3>:$RXSTATUS,
    I<1>:$RXSYNCDONE,
    I<1>:$RXSYNCOUT,
    I<1>:$RXVALID,
    I<2>:$TXBUFSTATUS,
    I<1>:$TXCOMFINISH,
    I<1>:$TXDCCDONE,
    I<1>:$TXDLYSRESETDONE,
    I<1>:$TXOUTCLK,
    I<1>:$TXOUTCLKFABRIC,
    I<1>:$TXOUTCLKPCS,
    I<1>:$TXPHALIGNDONE,
    I<1>:$TXPHINITDONE,
    I<1>:$TXPMARESETDONE,
    I<1>:$TXPRGDIVRESETDONE,
    I<1>:$TXQPISENN,
    I<1>:$TXQPISENP,
    I<1>:$TXRATEDONE,
    I<1>:$TXRESETDONE,
    I<1>:$TXSYNCDONE,
    I<1>:$TXSYNCOUT
  );
}

def GTHE4uCOMMON : XilinxPrimitiveOp<"GTHE4_COMMON", []> {
  let summary = "GTHE4_COMMON Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$BGBYPASSB,
    I<1>:$BGMONITORENB,
    I<1>:$BGPDB,
    I<5>:$BGRCALOVRD,
    I<1>:$BGRCALOVRDENB,
    I<16>:$DRPADDR,
    I<1>:$DRPCLK,
    I<16>:$DRPDI,
    I<1>:$DRPEN,
    I<1>:$DRPWE,
    I<1>:$GTGREFCLK0,
    I<1>:$GTGREFCLK1,
    I<1>:$GTNORTHREFCLK00,
    I<1>:$GTNORTHREFCLK01,
    I<1>:$GTNORTHREFCLK10,
    I<1>:$GTNORTHREFCLK11,
    I<1>:$GTREFCLK00,
    I<1>:$GTREFCLK01,
    I<1>:$GTREFCLK10,
    I<1>:$GTREFCLK11,
    I<1>:$GTSOUTHREFCLK00,
    I<1>:$GTSOUTHREFCLK01,
    I<1>:$GTSOUTHREFCLK10,
    I<1>:$GTSOUTHREFCLK11,
    I<3>:$PCIERATEQPLL0,
    I<3>:$PCIERATEQPLL1,
    I<8>:$PMARSVD0,
    I<8>:$PMARSVD1,
    I<1>:$QPLL0CLKRSVD0,
    I<1>:$QPLL0CLKRSVD1,
    I<8>:$QPLL0FBDIV,
    I<1>:$QPLL0LOCKDETCLK,
    I<1>:$QPLL0LOCKEN,
    I<1>:$QPLL0PD,
    I<3>:$QPLL0REFCLKSEL,
    I<1>:$QPLL0RESET,
    I<1>:$QPLL1CLKRSVD0,
    I<1>:$QPLL1CLKRSVD1,
    I<8>:$QPLL1FBDIV,
    I<1>:$QPLL1LOCKDETCLK,
    I<1>:$QPLL1LOCKEN,
    I<1>:$QPLL1PD,
    I<3>:$QPLL1REFCLKSEL,
    I<1>:$QPLL1RESET,
    I<8>:$QPLLRSVD1,
    I<5>:$QPLLRSVD2,
    I<5>:$QPLLRSVD3,
    I<8>:$QPLLRSVD4,
    I<1>:$RCALENB,
    I<25>:$SDM0DATA,
    I<1>:$SDM0RESET,
    I<1>:$SDM0TOGGLE,
    I<2>:$SDM0WIDTH,
    I<25>:$SDM1DATA,
    I<1>:$SDM1RESET,
    I<1>:$SDM1TOGGLE,
    I<2>:$SDM1WIDTH,
    I<10>:$TCONGPI,
    I<1>:$TCONPOWERUP,
    I<2>:$TCONRESET,
    I<2>:$TCONRSVDIN1,

    // GTHE4_COMMON parameters follows
    APIntAttr<I<1>>:$AEN_QPLL0_FBDIV,
    APIntAttr<I<1>>:$AEN_QPLL1_FBDIV,
    APIntAttr<I<1>>:$AEN_SDM0TOGGLE,
    APIntAttr<I<1>>:$AEN_SDM1TOGGLE,
    APIntAttr<I<1>>:$A_SDM0TOGGLE,
    APIntAttr<I<9>>:$A_SDM1DATA_HIGH,
    APIntAttr<I<16>>:$A_SDM1DATA_LOW,
    APIntAttr<I<1>>:$A_SDM1TOGGLE,
    APIntAttr<I<16>>:$BIAS_CFG0,
    APIntAttr<I<16>>:$BIAS_CFG1,
    APIntAttr<I<16>>:$BIAS_CFG2,
    APIntAttr<I<16>>:$BIAS_CFG3,
    APIntAttr<I<16>>:$BIAS_CFG4,
    APIntAttr<I<16>>:$BIAS_CFG_RSVD,
    APIntAttr<I<16>>:$COMMON_CFG0,
    APIntAttr<I<16>>:$COMMON_CFG1,
    APIntAttr<I<16>>:$POR_CFG,
    APIntAttr<I<16>>:$PPF0_CFG,
    APIntAttr<I<16>>:$PPF1_CFG,
    StrAttr:$QPLL0CLKOUT_RATE,
    APIntAttr<I<16>>:$QPLL0_CFG0,
    APIntAttr<I<16>>:$QPLL0_CFG1,
    APIntAttr<I<16>>:$QPLL0_CFG1_G3,
    APIntAttr<I<16>>:$QPLL0_CFG2,
    APIntAttr<I<16>>:$QPLL0_CFG2_G3,
    APIntAttr<I<16>>:$QPLL0_CFG3,
    APIntAttr<I<16>>:$QPLL0_CFG4,
    APIntAttr<I<10>>:$QPLL0_CP,
    APIntAttr<I<10>>:$QPLL0_CP_G3,
    SI64Attr:$QPLL0_FBDIV,
    SI64Attr:$QPLL0_FBDIV_G3,
    APIntAttr<I<16>>:$QPLL0_INIT_CFG0,
    APIntAttr<I<8>>:$QPLL0_INIT_CFG1,
    APIntAttr<I<16>>:$QPLL0_LOCK_CFG,
    APIntAttr<I<16>>:$QPLL0_LOCK_CFG_G3,
    APIntAttr<I<10>>:$QPLL0_LPF,
    APIntAttr<I<10>>:$QPLL0_LPF_G3,
    APIntAttr<I<1>>:$QPLL0_PCI_EN,
    APIntAttr<I<1>>:$QPLL0_RATE_SW_USE_DRP,
    SI64Attr:$QPLL0_REFCLK_DIV,
    APIntAttr<I<16>>:$QPLL0_SDM_CFG0,
    APIntAttr<I<16>>:$QPLL0_SDM_CFG1,
    APIntAttr<I<16>>:$QPLL0_SDM_CFG2,
    StrAttr:$QPLL1CLKOUT_RATE,
    APIntAttr<I<16>>:$QPLL1_CFG0,
    APIntAttr<I<16>>:$QPLL1_CFG1,
    APIntAttr<I<16>>:$QPLL1_CFG1_G3,
    APIntAttr<I<16>>:$QPLL1_CFG2,
    APIntAttr<I<16>>:$QPLL1_CFG2_G3,
    APIntAttr<I<16>>:$QPLL1_CFG3,
    APIntAttr<I<16>>:$QPLL1_CFG4,
    APIntAttr<I<10>>:$QPLL1_CP,
    APIntAttr<I<10>>:$QPLL1_CP_G3,
    SI64Attr:$QPLL1_FBDIV,
    SI64Attr:$QPLL1_FBDIV_G3,
    APIntAttr<I<16>>:$QPLL1_INIT_CFG0,
    APIntAttr<I<8>>:$QPLL1_INIT_CFG1,
    APIntAttr<I<16>>:$QPLL1_LOCK_CFG,
    APIntAttr<I<16>>:$QPLL1_LOCK_CFG_G3,
    APIntAttr<I<10>>:$QPLL1_LPF,
    APIntAttr<I<10>>:$QPLL1_LPF_G3,
    APIntAttr<I<1>>:$QPLL1_PCI_EN,
    APIntAttr<I<1>>:$QPLL1_RATE_SW_USE_DRP,
    SI64Attr:$QPLL1_REFCLK_DIV,
    APIntAttr<I<16>>:$QPLL1_SDM_CFG0,
    APIntAttr<I<16>>:$QPLL1_SDM_CFG1,
    APIntAttr<I<16>>:$QPLL1_SDM_CFG2,
    APIntAttr<I<16>>:$RSVD_ATTR0,
    APIntAttr<I<16>>:$RSVD_ATTR1,
    APIntAttr<I<16>>:$RSVD_ATTR2,
    APIntAttr<I<16>>:$RSVD_ATTR3,
    APIntAttr<I<2>>:$RXRECCLKOUT0_SEL,
    APIntAttr<I<2>>:$RXRECCLKOUT1_SEL,
    APIntAttr<I<1>>:$SARC_ENB,
    APIntAttr<I<1>>:$SARC_SEL,
    APIntAttr<I<16>>:$SDM0INITSEED0_0,
    APIntAttr<I<9>>:$SDM0INITSEED0_1,
    APIntAttr<I<16>>:$SDM1INITSEED0_0,
    APIntAttr<I<9>>:$SDM1INITSEED0_1,
    StrAttr:$SIM_DEVICE,
    StrAttr:$SIM_MODE,
    StrAttr:$SIM_RESET_SPEEDUP
  );

  let results = (outs
    I<16>:$DRPDO,
    I<1>:$DRPRDY,
    I<8>:$PMARSVDOUT0,
    I<8>:$PMARSVDOUT1,
    I<1>:$QPLL0FBCLKLOST,
    I<1>:$QPLL0LOCK,
    I<1>:$QPLL0OUTCLK,
    I<1>:$QPLL0OUTREFCLK,
    I<1>:$QPLL0REFCLKLOST,
    I<1>:$QPLL1FBCLKLOST,
    I<1>:$QPLL1LOCK,
    I<1>:$QPLL1OUTCLK,
    I<1>:$QPLL1OUTREFCLK,
    I<1>:$QPLL1REFCLKLOST,
    I<8>:$QPLLDMONITOR0,
    I<8>:$QPLLDMONITOR1,
    I<1>:$REFCLKOUTMONITOR0,
    I<1>:$REFCLKOUTMONITOR1,
    I<2>:$RXRECCLK0SEL,
    I<2>:$RXRECCLK1SEL,
    I<4>:$SDM0FINALOUT,
    I<15>:$SDM0TESTDATA,
    I<4>:$SDM1FINALOUT,
    I<15>:$SDM1TESTDATA,
    I<10>:$TCONGPO,
    I<1>:$TCONRSVDOUT0
  );
}

def GTPE2uCHANNEL : XilinxPrimitiveOp<"GTPE2_CHANNEL", []> {
  let summary = "GTPE2_CHANNEL Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CFGRESET,
    I<1>:$CLKRSVD0,
    I<1>:$CLKRSVD1,
    I<1>:$DMONFIFORESET,
    I<1>:$DMONITORCLK,
    I<1>:$DRPCLK,
    I<1>:$DRPEN,
    I<1>:$DRPWE,
    I<1>:$EYESCANMODE,
    I<1>:$EYESCANRESET,
    I<1>:$EYESCANTRIGGER,
    I<1>:$GTPRXN,
    I<1>:$GTPRXP,
    I<1>:$GTRESETSEL,
    I<1>:$GTRXRESET,
    I<1>:$GTTXRESET,
    I<1>:$PLL0CLK,
    I<1>:$PLL0REFCLK,
    I<1>:$PLL1CLK,
    I<1>:$PLL1REFCLK,
    I<1>:$PMARSVDIN0,
    I<1>:$PMARSVDIN1,
    I<1>:$PMARSVDIN2,
    I<1>:$PMARSVDIN3,
    I<1>:$PMARSVDIN4,
    I<1>:$RESETOVRD,
    I<1>:$RX8B10BEN,
    I<1>:$RXBUFRESET,
    I<1>:$RXCDRFREQRESET,
    I<1>:$RXCDRHOLD,
    I<1>:$RXCDROVRDEN,
    I<1>:$RXCDRRESET,
    I<1>:$RXCDRRESETRSV,
    I<1>:$RXCHBONDEN,
    I<1>:$RXCHBONDMASTER,
    I<1>:$RXCHBONDSLAVE,
    I<1>:$RXCOMMADETEN,
    I<1>:$RXDDIEN,
    I<1>:$RXDFEXYDEN,
    I<1>:$RXDLYBYPASS,
    I<1>:$RXDLYEN,
    I<1>:$RXDLYOVRDEN,
    I<1>:$RXDLYSRESET,
    I<1>:$RXGEARBOXSLIP,
    I<1>:$RXLPMHFHOLD,
    I<1>:$RXLPMHFOVRDEN,
    I<1>:$RXLPMLFHOLD,
    I<1>:$RXLPMLFOVRDEN,
    I<1>:$RXLPMOSINTNTRLEN,
    I<1>:$RXLPMRESET,
    I<1>:$RXMCOMMAALIGNEN,
    I<1>:$RXOOBRESET,
    I<1>:$RXOSCALRESET,
    I<1>:$RXOSHOLD,
    I<1>:$RXOSINTEN,
    I<1>:$RXOSINTHOLD,
    I<1>:$RXOSINTNTRLEN,
    I<1>:$RXOSINTOVRDEN,
    I<1>:$RXOSINTPD,
    I<1>:$RXOSINTSTROBE,
    I<1>:$RXOSINTTESTOVRDEN,
    I<1>:$RXOSOVRDEN,
    I<1>:$RXPCOMMAALIGNEN,
    I<1>:$RXPCSRESET,
    I<1>:$RXPHALIGN,
    I<1>:$RXPHALIGNEN,
    I<1>:$RXPHDLYPD,
    I<1>:$RXPHDLYRESET,
    I<1>:$RXPHOVRDEN,
    I<1>:$RXPMARESET,
    I<1>:$RXPOLARITY,
    I<1>:$RXPRBSCNTRESET,
    I<1>:$RXRATEMODE,
    I<1>:$RXSLIDE,
    I<1>:$RXSYNCALLIN,
    I<1>:$RXSYNCIN,
    I<1>:$RXSYNCMODE,
    I<1>:$RXUSERRDY,
    I<1>:$RXUSRCLK2,
    I<1>:$RXUSRCLK,
    I<1>:$SETERRSTATUS,
    I<1>:$SIGVALIDCLK,
    I<1>:$TX8B10BEN,
    I<1>:$TXCOMINIT,
    I<1>:$TXCOMSAS,
    I<1>:$TXCOMWAKE,
    I<1>:$TXDEEMPH,
    I<1>:$TXDETECTRX,
    I<1>:$TXDIFFPD,
    I<1>:$TXDLYBYPASS,
    I<1>:$TXDLYEN,
    I<1>:$TXDLYHOLD,
    I<1>:$TXDLYOVRDEN,
    I<1>:$TXDLYSRESET,
    I<1>:$TXDLYUPDOWN,
    I<1>:$TXELECIDLE,
    I<1>:$TXINHIBIT,
    I<1>:$TXPCSRESET,
    I<1>:$TXPDELECIDLEMODE,
    I<1>:$TXPHALIGN,
    I<1>:$TXPHALIGNEN,
    I<1>:$TXPHDLYPD,
    I<1>:$TXPHDLYRESET,
    I<1>:$TXPHDLYTSTCLK,
    I<1>:$TXPHINIT,
    I<1>:$TXPHOVRDEN,
    I<1>:$TXPIPPMEN,
    I<1>:$TXPIPPMOVRDEN,
    I<1>:$TXPIPPMPD,
    I<1>:$TXPIPPMSEL,
    I<1>:$TXPISOPD,
    I<1>:$TXPMARESET,
    I<1>:$TXPOLARITY,
    I<1>:$TXPOSTCURSORINV,
    I<1>:$TXPRBSFORCEERR,
    I<1>:$TXPRECURSORINV,
    I<1>:$TXRATEMODE,
    I<1>:$TXSTARTSEQ,
    I<1>:$TXSWING,
    I<1>:$TXSYNCALLIN,
    I<1>:$TXSYNCIN,
    I<1>:$TXSYNCMODE,
    I<1>:$TXUSERRDY,
    I<1>:$TXUSRCLK2,
    I<1>:$TXUSRCLK,
    I<14>:$RXADAPTSELTEST,
    I<16>:$DRPDI,
    I<16>:$GTRSVD,
    I<16>:$PCSRSVDIN,
    I<20>:$TSTIN,
    I<2>:$RXELECIDLEMODE,
    I<2>:$RXPD,
    I<2>:$RXSYSCLKSEL,
    I<2>:$TXPD,
    I<2>:$TXSYSCLKSEL,
    I<3>:$LOOPBACK,
    I<3>:$RXCHBONDLEVEL,
    I<3>:$RXOUTCLKSEL,
    I<3>:$RXPRBSSEL,
    I<3>:$RXRATE,
    I<3>:$TXBUFDIFFCTRL,
    I<3>:$TXHEADER,
    I<3>:$TXMARGIN,
    I<3>:$TXOUTCLKSEL,
    I<3>:$TXPRBSSEL,
    I<3>:$TXRATE,
    I<32>:$TXDATA,
    I<4>:$RXCHBONDI,
    I<4>:$RXOSINTCFG,
    I<4>:$RXOSINTID0,
    I<4>:$TX8B10BBYPASS,
    I<4>:$TXCHARDISPMODE,
    I<4>:$TXCHARDISPVAL,
    I<4>:$TXCHARISK,
    I<4>:$TXDIFFCTRL,
    I<5>:$TXPIPPMSTEPSIZE,
    I<5>:$TXPOSTCURSOR,
    I<5>:$TXPRECURSOR,
    I<7>:$TXMAINCURSOR,
    I<7>:$TXSEQUENCE,
    I<9>:$DRPADDR,

    // GTPE2_CHANNEL parameters follows
    StrAttr:$LOC,
    APIntAttr<I<1>>:$ACJTAG_DEBUG_MODE,
    APIntAttr<I<1>>:$ACJTAG_MODE,
    APIntAttr<I<1>>:$ACJTAG_RESET,
    APIntAttr<I<20>>:$ADAPT_CFG0,
    StrAttr:$ALIGN_COMMA_DOUBLE,
    APIntAttr<I<10>>:$ALIGN_COMMA_ENABLE,
    SI64Attr:$ALIGN_COMMA_WORD,
    StrAttr:$ALIGN_MCOMMA_DET,
    APIntAttr<I<10>>:$ALIGN_MCOMMA_VALUE,
    StrAttr:$ALIGN_PCOMMA_DET,
    APIntAttr<I<10>>:$ALIGN_PCOMMA_VALUE,
    StrAttr:$CBCC_DATA_SOURCE_SEL,
    APIntAttr<I<43>>:$CFOK_CFG,
    APIntAttr<I<7>>:$CFOK_CFG2,
    APIntAttr<I<7>>:$CFOK_CFG3,
    APIntAttr<I<1>>:$CFOK_CFG4,
    APIntAttr<I<2>>:$CFOK_CFG5,
    APIntAttr<I<4>>:$CFOK_CFG6,
    StrAttr:$CHAN_BOND_KEEP_ALIGN,
    SI64Attr:$CHAN_BOND_MAX_SKEW,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_1,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_2,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_3,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_4,
    APIntAttr<I<4>>:$CHAN_BOND_SEQ_1_ENABLE,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_1,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_2,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_3,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_4,
    APIntAttr<I<4>>:$CHAN_BOND_SEQ_2_ENABLE,
    StrAttr:$CHAN_BOND_SEQ_2_USE,
    SI64Attr:$CHAN_BOND_SEQ_LEN,
    APIntAttr<I<1>>:$CLK_COMMON_SWING,
    StrAttr:$CLK_CORRECT_USE,
    StrAttr:$CLK_COR_KEEP_IDLE,
    SI64Attr:$CLK_COR_MAX_LAT,
    SI64Attr:$CLK_COR_MIN_LAT,
    StrAttr:$CLK_COR_PRECEDENCE,
    SI64Attr:$CLK_COR_REPEAT_WAIT,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_1,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_2,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_3,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_4,
    APIntAttr<I<4>>:$CLK_COR_SEQ_1_ENABLE,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_1,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_2,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_3,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_4,
    APIntAttr<I<4>>:$CLK_COR_SEQ_2_ENABLE,
    StrAttr:$CLK_COR_SEQ_2_USE,
    SI64Attr:$CLK_COR_SEQ_LEN,
    StrAttr:$DEC_MCOMMA_DETECT,
    StrAttr:$DEC_PCOMMA_DETECT,
    StrAttr:$DEC_VALID_COMMA_ONLY,
    APIntAttr<I<24>>:$DMONITOR_CFG,
    APIntAttr<I<1>>:$ES_CLK_PHASE_SEL,
    APIntAttr<I<6>>:$ES_CONTROL,
    StrAttr:$ES_ERRDET_EN,
    StrAttr:$ES_EYE_SCAN_EN,
    APIntAttr<I<12>>:$ES_HORZ_OFFSET,
    APIntAttr<I<10>>:$ES_PMA_CFG,
    APIntAttr<I<5>>:$ES_PRESCALE,
    APIntAttr<I<80>>:$ES_QUALIFIER,
    APIntAttr<I<80>>:$ES_QUAL_MASK,
    APIntAttr<I<80>>:$ES_SDATA_MASK,
    APIntAttr<I<9>>:$ES_VERT_OFFSET,
    APIntAttr<I<4>>:$FTS_DESKEW_SEQ_ENABLE,
    APIntAttr<I<4>>:$FTS_LANE_DESKEW_CFG,
    StrAttr:$FTS_LANE_DESKEW_EN,
    APIntAttr<I<3>>:$GEARBOX_MODE,
    APIntAttr<I<1>>:$IS_CLKRSVD0_INVERTED,
    APIntAttr<I<1>>:$IS_CLKRSVD1_INVERTED,
    APIntAttr<I<1>>:$IS_DMONITORCLK_INVERTED,
    APIntAttr<I<1>>:$IS_DRPCLK_INVERTED,
    APIntAttr<I<1>>:$IS_RXUSRCLK2_INVERTED,
    APIntAttr<I<1>>:$IS_RXUSRCLK_INVERTED,
    APIntAttr<I<1>>:$IS_SIGVALIDCLK_INVERTED,
    APIntAttr<I<1>>:$IS_TXPHDLYTSTCLK_INVERTED,
    APIntAttr<I<1>>:$IS_TXUSRCLK2_INVERTED,
    APIntAttr<I<1>>:$IS_TXUSRCLK_INVERTED,
    APIntAttr<I<1>>:$LOOPBACK_CFG,
    APIntAttr<I<2>>:$OUTREFCLK_SEL_INV,
    StrAttr:$PCS_PCIE_EN,
    APIntAttr<I<48>>:$PCS_RSVD_ATTR,
    APIntAttr<I<12>>:$PD_TRANS_TIME_FROM_P2,
    APIntAttr<I<8>>:$PD_TRANS_TIME_NONE_P2,
    APIntAttr<I<8>>:$PD_TRANS_TIME_TO_P2,
    APIntAttr<I<1>>:$PMA_LOOPBACK_CFG,
    APIntAttr<I<32>>:$PMA_RSV,
    APIntAttr<I<32>>:$PMA_RSV2,
    APIntAttr<I<2>>:$PMA_RSV3,
    APIntAttr<I<4>>:$PMA_RSV4,
    APIntAttr<I<1>>:$PMA_RSV5,
    APIntAttr<I<1>>:$PMA_RSV6,
    APIntAttr<I<1>>:$PMA_RSV7,
    APIntAttr<I<5>>:$RXBUFRESET_TIME,
    StrAttr:$RXBUF_ADDR_MODE,
    APIntAttr<I<4>>:$RXBUF_EIDLE_HI_CNT,
    APIntAttr<I<4>>:$RXBUF_EIDLE_LO_CNT,
    StrAttr:$RXBUF_EN,
    StrAttr:$RXBUF_RESET_ON_CB_CHANGE,
    StrAttr:$RXBUF_RESET_ON_COMMAALIGN,
    StrAttr:$RXBUF_RESET_ON_EIDLE,
    StrAttr:$RXBUF_RESET_ON_RATE_CHANGE,
    SI64Attr:$RXBUF_THRESH_OVFLW,
    StrAttr:$RXBUF_THRESH_OVRD,
    SI64Attr:$RXBUF_THRESH_UNDFLW,
    APIntAttr<I<5>>:$RXCDRFREQRESET_TIME,
    APIntAttr<I<5>>:$RXCDRPHRESET_TIME,
    APIntAttr<I<83>>:$RXCDR_CFG,
    APIntAttr<I<1>>:$RXCDR_FR_RESET_ON_EIDLE,
    APIntAttr<I<1>>:$RXCDR_HOLD_DURING_EIDLE,
    APIntAttr<I<6>>:$RXCDR_LOCK_CFG,
    APIntAttr<I<1>>:$RXCDR_PH_RESET_ON_EIDLE,
    APIntAttr<I<16>>:$RXDLY_CFG,
    APIntAttr<I<9>>:$RXDLY_LCFG,
    APIntAttr<I<16>>:$RXDLY_TAP_CFG,
    StrAttr:$RXGEARBOX_EN,
    APIntAttr<I<5>>:$RXISCANRESET_TIME,
    APIntAttr<I<7>>:$RXLPMRESET_TIME,
    APIntAttr<I<1>>:$RXLPM_BIAS_STARTUP_DISABLE,
    APIntAttr<I<4>>:$RXLPM_CFG,
    APIntAttr<I<1>>:$RXLPM_CFG1,
    APIntAttr<I<1>>:$RXLPM_CM_CFG,
    APIntAttr<I<9>>:$RXLPM_GC_CFG,
    APIntAttr<I<3>>:$RXLPM_GC_CFG2,
    APIntAttr<I<14>>:$RXLPM_HF_CFG,
    APIntAttr<I<5>>:$RXLPM_HF_CFG2,
    APIntAttr<I<4>>:$RXLPM_HF_CFG3,
    APIntAttr<I<1>>:$RXLPM_HOLD_DURING_EIDLE,
    APIntAttr<I<1>>:$RXLPM_INCM_CFG,
    APIntAttr<I<1>>:$RXLPM_IPCM_CFG,
    APIntAttr<I<18>>:$RXLPM_LF_CFG,
    APIntAttr<I<5>>:$RXLPM_LF_CFG2,
    APIntAttr<I<3>>:$RXLPM_OSINT_CFG,
    APIntAttr<I<7>>:$RXOOB_CFG,
    StrAttr:$RXOOB_CLK_CFG,
    APIntAttr<I<5>>:$RXOSCALRESET_TIME,
    APIntAttr<I<5>>:$RXOSCALRESET_TIMEOUT,
    SI64Attr:$RXOUT_DIV,
    APIntAttr<I<5>>:$RXPCSRESET_TIME,
    APIntAttr<I<24>>:$RXPHDLY_CFG,
    APIntAttr<I<24>>:$RXPH_CFG,
    APIntAttr<I<5>>:$RXPH_MONITOR_SEL,
    APIntAttr<I<3>>:$RXPI_CFG0,
    APIntAttr<I<1>>:$RXPI_CFG1,
    APIntAttr<I<1>>:$RXPI_CFG2,
    APIntAttr<I<5>>:$RXPMARESET_TIME,
    APIntAttr<I<1>>:$RXPRBS_ERR_LOOPBACK,
    SI64Attr:$RXSLIDE_AUTO_WAIT,
    StrAttr:$RXSLIDE_MODE,
    APIntAttr<I<1>>:$RXSYNC_MULTILANE,
    APIntAttr<I<1>>:$RXSYNC_OVRD,
    APIntAttr<I<1>>:$RXSYNC_SKIP_DA,
    APIntAttr<I<16>>:$RX_BIAS_CFG,
    APIntAttr<I<6>>:$RX_BUFFER_CFG,
    SI64Attr:$RX_CLK25_DIV,
    APIntAttr<I<1>>:$RX_CLKMUX_EN,
    APIntAttr<I<2>>:$RX_CM_SEL,
    APIntAttr<I<4>>:$RX_CM_TRIM,
    SI64Attr:$RX_DATA_WIDTH,
    APIntAttr<I<6>>:$RX_DDI_SEL,
    APIntAttr<I<14>>:$RX_DEBUG_CFG,
    StrAttr:$RX_DEFER_RESET_BUF_EN,
    StrAttr:$RX_DISPERR_SEQ_MATCH,
    APIntAttr<I<13>>:$RX_OS_CFG,
    SI64Attr:$RX_SIG_VALID_DLY,
    StrAttr:$RX_XCLK_SEL,
    SI64Attr:$SAS_MAX_COM,
    SI64Attr:$SAS_MIN_COM,
    APIntAttr<I<4>>:$SATA_BURST_SEQ_LEN,
    APIntAttr<I<3>>:$SATA_BURST_VAL,
    APIntAttr<I<3>>:$SATA_EIDLE_VAL,
    SI64Attr:$SATA_MAX_BURST,
    SI64Attr:$SATA_MAX_INIT,
    SI64Attr:$SATA_MAX_WAKE,
    SI64Attr:$SATA_MIN_BURST,
    SI64Attr:$SATA_MIN_INIT,
    SI64Attr:$SATA_MIN_WAKE,
    StrAttr:$SATA_PLL_CFG,
    StrAttr:$SHOW_REALIGN_COMMA,
    StrAttr:$SIM_RECEIVER_DETECT_PASS,
    StrAttr:$SIM_RESET_SPEEDUP,
    StrAttr:$SIM_TX_EIDLE_DRIVE_LEVEL,
    StrAttr:$SIM_VERSION,
    APIntAttr<I<15>>:$TERM_RCAL_CFG,
    APIntAttr<I<3>>:$TERM_RCAL_OVRD,
    APIntAttr<I<8>>:$TRANS_TIME_RATE,
    APIntAttr<I<32>>:$TST_RSV,
    StrAttr:$TXBUF_EN,
    StrAttr:$TXBUF_RESET_ON_RATE_CHANGE,
    APIntAttr<I<16>>:$TXDLY_CFG,
    APIntAttr<I<9>>:$TXDLY_LCFG,
    APIntAttr<I<16>>:$TXDLY_TAP_CFG,
    StrAttr:$TXGEARBOX_EN,
    APIntAttr<I<1>>:$TXOOB_CFG,
    SI64Attr:$TXOUT_DIV,
    APIntAttr<I<5>>:$TXPCSRESET_TIME,
    APIntAttr<I<24>>:$TXPHDLY_CFG,
    APIntAttr<I<16>>:$TXPH_CFG,
    APIntAttr<I<5>>:$TXPH_MONITOR_SEL,
    APIntAttr<I<2>>:$TXPI_CFG0,
    APIntAttr<I<2>>:$TXPI_CFG1,
    APIntAttr<I<2>>:$TXPI_CFG2,
    APIntAttr<I<1>>:$TXPI_CFG3,
    APIntAttr<I<1>>:$TXPI_CFG4,
    APIntAttr<I<3>>:$TXPI_CFG5,
    APIntAttr<I<1>>:$TXPI_GREY_SEL,
    APIntAttr<I<1>>:$TXPI_INVSTROBE_SEL,
    StrAttr:$TXPI_PPMCLK_SEL,
    APIntAttr<I<8>>:$TXPI_PPM_CFG,
    APIntAttr<I<3>>:$TXPI_SYNFREQ_PPM,
    APIntAttr<I<5>>:$TXPMARESET_TIME,
    APIntAttr<I<1>>:$TXSYNC_MULTILANE,
    APIntAttr<I<1>>:$TXSYNC_OVRD,
    APIntAttr<I<1>>:$TXSYNC_SKIP_DA,
    SI64Attr:$TX_CLK25_DIV,
    APIntAttr<I<1>>:$TX_CLKMUX_EN,
    SI64Attr:$TX_DATA_WIDTH,
    APIntAttr<I<6>>:$TX_DEEMPH0,
    APIntAttr<I<6>>:$TX_DEEMPH1,
    StrAttr:$TX_DRIVE_MODE,
    APIntAttr<I<3>>:$TX_EIDLE_ASSERT_DELAY,
    APIntAttr<I<3>>:$TX_EIDLE_DEASSERT_DELAY,
    StrAttr:$TX_LOOPBACK_DRIVE_HIZ,
    APIntAttr<I<1>>:$TX_MAINCURSOR_SEL,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_0,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_1,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_2,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_3,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_4,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_0,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_1,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_2,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_3,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_4,
    APIntAttr<I<1>>:$TX_PREDRIVER_MODE,
    APIntAttr<I<14>>:$TX_RXDETECT_CFG,
    APIntAttr<I<3>>:$TX_RXDETECT_REF,
    StrAttr:$TX_XCLK_SEL,
    APIntAttr<I<1>>:$UCODEER_CLR,
    APIntAttr<I<1>>:$USE_PCS_CLK_PHASE_SEL
  );

  let results = (outs
    I<1>:$DRPRDY,
    I<1>:$EYESCANDATAERROR,
    I<1>:$GTPTXN,
    I<1>:$GTPTXP,
    I<1>:$PHYSTATUS,
    I<1>:$PMARSVDOUT0,
    I<1>:$PMARSVDOUT1,
    I<1>:$RXBYTEISALIGNED,
    I<1>:$RXBYTEREALIGN,
    I<1>:$RXCDRLOCK,
    I<1>:$RXCHANBONDSEQ,
    I<1>:$RXCHANISALIGNED,
    I<1>:$RXCHANREALIGN,
    I<1>:$RXCOMINITDET,
    I<1>:$RXCOMMADET,
    I<1>:$RXCOMSASDET,
    I<1>:$RXCOMWAKEDET,
    I<1>:$RXDLYSRESETDONE,
    I<1>:$RXELECIDLE,
    I<1>:$RXHEADERVALID,
    I<1>:$RXOSINTDONE,
    I<1>:$RXOSINTSTARTED,
    I<1>:$RXOSINTSTROBEDONE,
    I<1>:$RXOSINTSTROBESTARTED,
    I<1>:$RXOUTCLK,
    I<1>:$RXOUTCLKFABRIC,
    I<1>:$RXOUTCLKPCS,
    I<1>:$RXPHALIGNDONE,
    I<1>:$RXPMARESETDONE,
    I<1>:$RXPRBSERR,
    I<1>:$RXRATEDONE,
    I<1>:$RXRESETDONE,
    I<1>:$RXSYNCDONE,
    I<1>:$RXSYNCOUT,
    I<1>:$RXVALID,
    I<1>:$TXCOMFINISH,
    I<1>:$TXDLYSRESETDONE,
    I<1>:$TXGEARBOXREADY,
    I<1>:$TXOUTCLK,
    I<1>:$TXOUTCLKFABRIC,
    I<1>:$TXOUTCLKPCS,
    I<1>:$TXPHALIGNDONE,
    I<1>:$TXPHINITDONE,
    I<1>:$TXPMARESETDONE,
    I<1>:$TXRATEDONE,
    I<1>:$TXRESETDONE,
    I<1>:$TXSYNCDONE,
    I<1>:$TXSYNCOUT,
    I<15>:$DMONITOROUT,
    I<16>:$DRPDO,
    I<16>:$PCSRSVDOUT,
    I<2>:$RXCLKCORCNT,
    I<2>:$RXDATAVALID,
    I<2>:$RXSTARTOFSEQ,
    I<2>:$TXBUFSTATUS,
    I<3>:$RXBUFSTATUS,
    I<3>:$RXHEADER,
    I<3>:$RXSTATUS,
    I<32>:$RXDATA,
    I<4>:$RXCHARISCOMMA,
    I<4>:$RXCHARISK,
    I<4>:$RXCHBONDO,
    I<4>:$RXDISPERR,
    I<4>:$RXNOTINTABLE,
    I<5>:$RXPHMONITOR,
    I<5>:$RXPHSLIPMONITOR
  );
}

def GTPE2uCOMMON : XilinxPrimitiveOp<"GTPE2_COMMON", []> {
  let summary = "GTPE2_COMMON Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$BGBYPASSB,
    I<1>:$BGMONITORENB,
    I<1>:$BGPDB,
    I<1>:$BGRCALOVRDENB,
    I<1>:$DRPCLK,
    I<1>:$DRPEN,
    I<1>:$DRPWE,
    I<1>:$GTEASTREFCLK0,
    I<1>:$GTEASTREFCLK1,
    I<1>:$GTGREFCLK0,
    I<1>:$GTGREFCLK1,
    I<1>:$GTREFCLK0,
    I<1>:$GTREFCLK1,
    I<1>:$GTWESTREFCLK0,
    I<1>:$GTWESTREFCLK1,
    I<1>:$PLL0LOCKDETCLK,
    I<1>:$PLL0LOCKEN,
    I<1>:$PLL0PD,
    I<1>:$PLL0RESET,
    I<1>:$PLL1LOCKDETCLK,
    I<1>:$PLL1LOCKEN,
    I<1>:$PLL1PD,
    I<1>:$PLL1RESET,
    I<1>:$RCALENB,
    I<16>:$DRPDI,
    I<16>:$PLLRSVD1,
    I<3>:$PLL0REFCLKSEL,
    I<3>:$PLL1REFCLKSEL,
    I<5>:$BGRCALOVRD,
    I<5>:$PLLRSVD2,
    I<8>:$DRPADDR,
    I<8>:$PMARSVD,

    // GTPE2_COMMON parameters follows
    StrAttr:$LOC,
    APIntAttr<I<64>>:$BIAS_CFG,
    APIntAttr<I<32>>:$COMMON_CFG,
    APIntAttr<I<1>>:$IS_DRPCLK_INVERTED,
    APIntAttr<I<1>>:$IS_GTGREFCLK0_INVERTED,
    APIntAttr<I<1>>:$IS_GTGREFCLK1_INVERTED,
    APIntAttr<I<1>>:$IS_PLL0LOCKDETCLK_INVERTED,
    APIntAttr<I<1>>:$IS_PLL1LOCKDETCLK_INVERTED,
    APIntAttr<I<27>>:$PLL0_CFG,
    APIntAttr<I<1>>:$PLL0_DMON_CFG,
    SI64Attr:$PLL0_FBDIV,
    SI64Attr:$PLL0_FBDIV_45,
    APIntAttr<I<24>>:$PLL0_INIT_CFG,
    APIntAttr<I<9>>:$PLL0_LOCK_CFG,
    SI64Attr:$PLL0_REFCLK_DIV,
    APIntAttr<I<27>>:$PLL1_CFG,
    APIntAttr<I<1>>:$PLL1_DMON_CFG,
    SI64Attr:$PLL1_FBDIV,
    SI64Attr:$PLL1_FBDIV_45,
    APIntAttr<I<24>>:$PLL1_INIT_CFG,
    APIntAttr<I<9>>:$PLL1_LOCK_CFG,
    SI64Attr:$PLL1_REFCLK_DIV,
    APIntAttr<I<8>>:$PLL_CLKOUT_CFG,
    APIntAttr<I<16>>:$RSVD_ATTR0,
    APIntAttr<I<16>>:$RSVD_ATTR1,
    APIntAttr<I<3>>:$SIM_PLL0REFCLK_SEL,
    APIntAttr<I<3>>:$SIM_PLL1REFCLK_SEL,
    StrAttr:$SIM_RESET_SPEEDUP,
    StrAttr:$SIM_VERSION
  );

  let results = (outs
    I<1>:$DRPRDY,
    I<1>:$PLL0FBCLKLOST,
    I<1>:$PLL0LOCK,
    I<1>:$PLL0OUTCLK,
    I<1>:$PLL0OUTREFCLK,
    I<1>:$PLL0REFCLKLOST,
    I<1>:$PLL1FBCLKLOST,
    I<1>:$PLL1LOCK,
    I<1>:$PLL1OUTCLK,
    I<1>:$PLL1OUTREFCLK,
    I<1>:$PLL1REFCLKLOST,
    I<1>:$REFCLKOUTMONITOR0,
    I<1>:$REFCLKOUTMONITOR1,
    I<16>:$DRPDO,
    I<16>:$PMARSVDOUT,
    I<8>:$DMONITOROUT
  );
}

def GTXE2uCHANNEL : XilinxPrimitiveOp<"GTXE2_CHANNEL", []> {
  let summary = "GTXE2_CHANNEL Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CFGRESET,
    I<1>:$CPLLLOCKDETCLK,
    I<1>:$CPLLLOCKEN,
    I<1>:$CPLLPD,
    I<1>:$CPLLRESET,
    I<1>:$DRPCLK,
    I<1>:$DRPEN,
    I<1>:$DRPWE,
    I<1>:$EYESCANMODE,
    I<1>:$EYESCANRESET,
    I<1>:$EYESCANTRIGGER,
    I<1>:$GTGREFCLK,
    I<1>:$GTNORTHREFCLK0,
    I<1>:$GTNORTHREFCLK1,
    I<1>:$GTREFCLK0,
    I<1>:$GTREFCLK1,
    I<1>:$GTRESETSEL,
    I<1>:$GTRXRESET,
    I<1>:$GTSOUTHREFCLK0,
    I<1>:$GTSOUTHREFCLK1,
    I<1>:$GTTXRESET,
    I<1>:$GTXRXN,
    I<1>:$GTXRXP,
    I<1>:$QPLLCLK,
    I<1>:$QPLLREFCLK,
    I<1>:$RESETOVRD,
    I<1>:$RX8B10BEN,
    I<1>:$RXBUFRESET,
    I<1>:$RXCDRFREQRESET,
    I<1>:$RXCDRHOLD,
    I<1>:$RXCDROVRDEN,
    I<1>:$RXCDRRESET,
    I<1>:$RXCDRRESETRSV,
    I<1>:$RXCHBONDEN,
    I<1>:$RXCHBONDMASTER,
    I<1>:$RXCHBONDSLAVE,
    I<1>:$RXCOMMADETEN,
    I<1>:$RXDDIEN,
    I<1>:$RXDFEAGCHOLD,
    I<1>:$RXDFEAGCOVRDEN,
    I<1>:$RXDFECM1EN,
    I<1>:$RXDFELFHOLD,
    I<1>:$RXDFELFOVRDEN,
    I<1>:$RXDFELPMRESET,
    I<1>:$RXDFETAP2HOLD,
    I<1>:$RXDFETAP2OVRDEN,
    I<1>:$RXDFETAP3HOLD,
    I<1>:$RXDFETAP3OVRDEN,
    I<1>:$RXDFETAP4HOLD,
    I<1>:$RXDFETAP4OVRDEN,
    I<1>:$RXDFETAP5HOLD,
    I<1>:$RXDFETAP5OVRDEN,
    I<1>:$RXDFEUTHOLD,
    I<1>:$RXDFEUTOVRDEN,
    I<1>:$RXDFEVPHOLD,
    I<1>:$RXDFEVPOVRDEN,
    I<1>:$RXDFEVSEN,
    I<1>:$RXDFEXYDEN,
    I<1>:$RXDFEXYDHOLD,
    I<1>:$RXDFEXYDOVRDEN,
    I<1>:$RXDLYBYPASS,
    I<1>:$RXDLYEN,
    I<1>:$RXDLYOVRDEN,
    I<1>:$RXDLYSRESET,
    I<1>:$RXGEARBOXSLIP,
    I<1>:$RXLPMEN,
    I<1>:$RXLPMHFHOLD,
    I<1>:$RXLPMHFOVRDEN,
    I<1>:$RXLPMLFHOLD,
    I<1>:$RXLPMLFKLOVRDEN,
    I<1>:$RXMCOMMAALIGNEN,
    I<1>:$RXOOBRESET,
    I<1>:$RXOSHOLD,
    I<1>:$RXOSOVRDEN,
    I<1>:$RXPCOMMAALIGNEN,
    I<1>:$RXPCSRESET,
    I<1>:$RXPHALIGN,
    I<1>:$RXPHALIGNEN,
    I<1>:$RXPHDLYPD,
    I<1>:$RXPHDLYRESET,
    I<1>:$RXPHOVRDEN,
    I<1>:$RXPMARESET,
    I<1>:$RXPOLARITY,
    I<1>:$RXPRBSCNTRESET,
    I<1>:$RXQPIEN,
    I<1>:$RXSLIDE,
    I<1>:$RXUSERRDY,
    I<1>:$RXUSRCLK2,
    I<1>:$RXUSRCLK,
    I<1>:$SETERRSTATUS,
    I<1>:$TX8B10BEN,
    I<1>:$TXCOMINIT,
    I<1>:$TXCOMSAS,
    I<1>:$TXCOMWAKE,
    I<1>:$TXDEEMPH,
    I<1>:$TXDETECTRX,
    I<1>:$TXDIFFPD,
    I<1>:$TXDLYBYPASS,
    I<1>:$TXDLYEN,
    I<1>:$TXDLYHOLD,
    I<1>:$TXDLYOVRDEN,
    I<1>:$TXDLYSRESET,
    I<1>:$TXDLYUPDOWN,
    I<1>:$TXELECIDLE,
    I<1>:$TXINHIBIT,
    I<1>:$TXPCSRESET,
    I<1>:$TXPDELECIDLEMODE,
    I<1>:$TXPHALIGN,
    I<1>:$TXPHALIGNEN,
    I<1>:$TXPHDLYPD,
    I<1>:$TXPHDLYRESET,
    I<1>:$TXPHDLYTSTCLK,
    I<1>:$TXPHINIT,
    I<1>:$TXPHOVRDEN,
    I<1>:$TXPISOPD,
    I<1>:$TXPMARESET,
    I<1>:$TXPOLARITY,
    I<1>:$TXPOSTCURSORINV,
    I<1>:$TXPRBSFORCEERR,
    I<1>:$TXPRECURSORINV,
    I<1>:$TXQPIBIASEN,
    I<1>:$TXQPISTRONGPDOWN,
    I<1>:$TXQPIWEAKPUP,
    I<1>:$TXSTARTSEQ,
    I<1>:$TXSWING,
    I<1>:$TXUSERRDY,
    I<1>:$TXUSRCLK2,
    I<1>:$TXUSRCLK,
    I<16>:$DRPDI,
    I<16>:$GTRSVD,
    I<16>:$PCSRSVDIN,
    I<20>:$TSTIN,
    I<2>:$RXELECIDLEMODE,
    I<2>:$RXMONITORSEL,
    I<2>:$RXPD,
    I<2>:$RXSYSCLKSEL,
    I<2>:$TXPD,
    I<2>:$TXSYSCLKSEL,
    I<3>:$CPLLREFCLKSEL,
    I<3>:$LOOPBACK,
    I<3>:$RXCHBONDLEVEL,
    I<3>:$RXOUTCLKSEL,
    I<3>:$RXPRBSSEL,
    I<3>:$RXRATE,
    I<3>:$TXBUFDIFFCTRL,
    I<3>:$TXHEADER,
    I<3>:$TXMARGIN,
    I<3>:$TXOUTCLKSEL,
    I<3>:$TXPRBSSEL,
    I<3>:$TXRATE,
    I<4>:$CLKRSVD,
    I<4>:$TXDIFFCTRL,
    I<5>:$PCSRSVDIN2,
    I<5>:$PMARSVDIN2,
    I<5>:$PMARSVDIN,
    I<5>:$RXCHBONDI,
    I<5>:$TXPOSTCURSOR,
    I<5>:$TXPRECURSOR,
    I<64>:$TXDATA,
    I<7>:$TXMAINCURSOR,
    I<7>:$TXSEQUENCE,
    I<8>:$TX8B10BBYPASS,
    I<8>:$TXCHARDISPMODE,
    I<8>:$TXCHARDISPVAL,
    I<8>:$TXCHARISK,
    I<9>:$DRPADDR,

    // GTXE2_CHANNEL parameters follows
    StrAttr:$LOC,
    StrAttr:$ALIGN_COMMA_DOUBLE,
    APIntAttr<I<10>>:$ALIGN_COMMA_ENABLE,
    SI64Attr:$ALIGN_COMMA_WORD,
    StrAttr:$ALIGN_MCOMMA_DET,
    APIntAttr<I<10>>:$ALIGN_MCOMMA_VALUE,
    StrAttr:$ALIGN_PCOMMA_DET,
    APIntAttr<I<10>>:$ALIGN_PCOMMA_VALUE,
    StrAttr:$CBCC_DATA_SOURCE_SEL,
    StrAttr:$CHAN_BOND_KEEP_ALIGN,
    SI64Attr:$CHAN_BOND_MAX_SKEW,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_1,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_2,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_3,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_4,
    APIntAttr<I<4>>:$CHAN_BOND_SEQ_1_ENABLE,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_1,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_2,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_3,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_4,
    APIntAttr<I<4>>:$CHAN_BOND_SEQ_2_ENABLE,
    StrAttr:$CHAN_BOND_SEQ_2_USE,
    SI64Attr:$CHAN_BOND_SEQ_LEN,
    StrAttr:$CLK_CORRECT_USE,
    StrAttr:$CLK_COR_KEEP_IDLE,
    SI64Attr:$CLK_COR_MAX_LAT,
    SI64Attr:$CLK_COR_MIN_LAT,
    StrAttr:$CLK_COR_PRECEDENCE,
    SI64Attr:$CLK_COR_REPEAT_WAIT,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_1,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_2,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_3,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_4,
    APIntAttr<I<4>>:$CLK_COR_SEQ_1_ENABLE,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_1,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_2,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_3,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_4,
    APIntAttr<I<4>>:$CLK_COR_SEQ_2_ENABLE,
    StrAttr:$CLK_COR_SEQ_2_USE,
    SI64Attr:$CLK_COR_SEQ_LEN,
    APIntAttr<I<24>>:$CPLL_CFG,
    SI64Attr:$CPLL_FBDIV,
    SI64Attr:$CPLL_FBDIV_45,
    APIntAttr<I<24>>:$CPLL_INIT_CFG,
    APIntAttr<I<16>>:$CPLL_LOCK_CFG,
    SI64Attr:$CPLL_REFCLK_DIV,
    StrAttr:$DEC_MCOMMA_DETECT,
    StrAttr:$DEC_PCOMMA_DETECT,
    StrAttr:$DEC_VALID_COMMA_ONLY,
    APIntAttr<I<24>>:$DMONITOR_CFG,
    APIntAttr<I<6>>:$ES_CONTROL,
    StrAttr:$ES_ERRDET_EN,
    StrAttr:$ES_EYE_SCAN_EN,
    APIntAttr<I<12>>:$ES_HORZ_OFFSET,
    APIntAttr<I<10>>:$ES_PMA_CFG,
    APIntAttr<I<5>>:$ES_PRESCALE,
    APIntAttr<I<80>>:$ES_QUALIFIER,
    APIntAttr<I<80>>:$ES_QUAL_MASK,
    APIntAttr<I<80>>:$ES_SDATA_MASK,
    APIntAttr<I<9>>:$ES_VERT_OFFSET,
    APIntAttr<I<4>>:$FTS_DESKEW_SEQ_ENABLE,
    APIntAttr<I<4>>:$FTS_LANE_DESKEW_CFG,
    StrAttr:$FTS_LANE_DESKEW_EN,
    APIntAttr<I<3>>:$GEARBOX_MODE,
    APIntAttr<I<1>>:$IS_CPLLLOCKDETCLK_INVERTED,
    APIntAttr<I<1>>:$IS_DRPCLK_INVERTED,
    APIntAttr<I<1>>:$IS_GTGREFCLK_INVERTED,
    APIntAttr<I<1>>:$IS_RXUSRCLK2_INVERTED,
    APIntAttr<I<1>>:$IS_RXUSRCLK_INVERTED,
    APIntAttr<I<1>>:$IS_TXPHDLYTSTCLK_INVERTED,
    APIntAttr<I<1>>:$IS_TXUSRCLK2_INVERTED,
    APIntAttr<I<1>>:$IS_TXUSRCLK_INVERTED,
    APIntAttr<I<2>>:$OUTREFCLK_SEL_INV,
    StrAttr:$PCS_PCIE_EN,
    APIntAttr<I<48>>:$PCS_RSVD_ATTR,
    APIntAttr<I<12>>:$PD_TRANS_TIME_FROM_P2,
    APIntAttr<I<8>>:$PD_TRANS_TIME_NONE_P2,
    APIntAttr<I<8>>:$PD_TRANS_TIME_TO_P2,
    APIntAttr<I<32>>:$PMA_RSV,
    APIntAttr<I<16>>:$PMA_RSV2,
    APIntAttr<I<2>>:$PMA_RSV3,
    APIntAttr<I<32>>:$PMA_RSV4,
    APIntAttr<I<5>>:$RXBUFRESET_TIME,
    StrAttr:$RXBUF_ADDR_MODE,
    APIntAttr<I<4>>:$RXBUF_EIDLE_HI_CNT,
    APIntAttr<I<4>>:$RXBUF_EIDLE_LO_CNT,
    StrAttr:$RXBUF_EN,
    StrAttr:$RXBUF_RESET_ON_CB_CHANGE,
    StrAttr:$RXBUF_RESET_ON_COMMAALIGN,
    StrAttr:$RXBUF_RESET_ON_EIDLE,
    StrAttr:$RXBUF_RESET_ON_RATE_CHANGE,
    SI64Attr:$RXBUF_THRESH_OVFLW,
    StrAttr:$RXBUF_THRESH_OVRD,
    SI64Attr:$RXBUF_THRESH_UNDFLW,
    APIntAttr<I<5>>:$RXCDRFREQRESET_TIME,
    APIntAttr<I<5>>:$RXCDRPHRESET_TIME,
    APIntAttr<I<72>>:$RXCDR_CFG,
    APIntAttr<I<1>>:$RXCDR_FR_RESET_ON_EIDLE,
    APIntAttr<I<1>>:$RXCDR_HOLD_DURING_EIDLE,
    APIntAttr<I<6>>:$RXCDR_LOCK_CFG,
    APIntAttr<I<1>>:$RXCDR_PH_RESET_ON_EIDLE,
    APIntAttr<I<7>>:$RXDFELPMRESET_TIME,
    APIntAttr<I<16>>:$RXDLY_CFG,
    APIntAttr<I<9>>:$RXDLY_LCFG,
    APIntAttr<I<16>>:$RXDLY_TAP_CFG,
    StrAttr:$RXGEARBOX_EN,
    APIntAttr<I<5>>:$RXISCANRESET_TIME,
    APIntAttr<I<14>>:$RXLPM_HF_CFG,
    APIntAttr<I<14>>:$RXLPM_LF_CFG,
    APIntAttr<I<7>>:$RXOOB_CFG,
    SI64Attr:$RXOUT_DIV,
    APIntAttr<I<5>>:$RXPCSRESET_TIME,
    APIntAttr<I<24>>:$RXPHDLY_CFG,
    APIntAttr<I<24>>:$RXPH_CFG,
    APIntAttr<I<5>>:$RXPH_MONITOR_SEL,
    APIntAttr<I<5>>:$RXPMARESET_TIME,
    APIntAttr<I<1>>:$RXPRBS_ERR_LOOPBACK,
    SI64Attr:$RXSLIDE_AUTO_WAIT,
    StrAttr:$RXSLIDE_MODE,
    APIntAttr<I<12>>:$RX_BIAS_CFG,
    APIntAttr<I<6>>:$RX_BUFFER_CFG,
    SI64Attr:$RX_CLK25_DIV,
    APIntAttr<I<1>>:$RX_CLKMUX_PD,
    APIntAttr<I<2>>:$RX_CM_SEL,
    APIntAttr<I<3>>:$RX_CM_TRIM,
    SI64Attr:$RX_DATA_WIDTH,
    APIntAttr<I<6>>:$RX_DDI_SEL,
    APIntAttr<I<12>>:$RX_DEBUG_CFG,
    StrAttr:$RX_DEFER_RESET_BUF_EN,
    APIntAttr<I<23>>:$RX_DFE_GAIN_CFG,
    APIntAttr<I<12>>:$RX_DFE_H2_CFG,
    APIntAttr<I<12>>:$RX_DFE_H3_CFG,
    APIntAttr<I<11>>:$RX_DFE_H4_CFG,
    APIntAttr<I<11>>:$RX_DFE_H5_CFG,
    APIntAttr<I<13>>:$RX_DFE_KL_CFG,
    APIntAttr<I<32>>:$RX_DFE_KL_CFG2,
    APIntAttr<I<16>>:$RX_DFE_LPM_CFG,
    APIntAttr<I<1>>:$RX_DFE_LPM_HOLD_DURING_EIDLE,
    APIntAttr<I<17>>:$RX_DFE_UT_CFG,
    APIntAttr<I<17>>:$RX_DFE_VP_CFG,
    APIntAttr<I<13>>:$RX_DFE_XYD_CFG,
    StrAttr:$RX_DISPERR_SEQ_MATCH,
    SI64Attr:$RX_INT_DATAWIDTH,
    APIntAttr<I<13>>:$RX_OS_CFG,
    SI64Attr:$RX_SIG_VALID_DLY,
    StrAttr:$RX_XCLK_SEL,
    SI64Attr:$SAS_MAX_COM,
    SI64Attr:$SAS_MIN_COM,
    APIntAttr<I<4>>:$SATA_BURST_SEQ_LEN,
    APIntAttr<I<3>>:$SATA_BURST_VAL,
    StrAttr:$SATA_CPLL_CFG,
    APIntAttr<I<3>>:$SATA_EIDLE_VAL,
    SI64Attr:$SATA_MAX_BURST,
    SI64Attr:$SATA_MAX_INIT,
    SI64Attr:$SATA_MAX_WAKE,
    SI64Attr:$SATA_MIN_BURST,
    SI64Attr:$SATA_MIN_INIT,
    SI64Attr:$SATA_MIN_WAKE,
    StrAttr:$SHOW_REALIGN_COMMA,
    APIntAttr<I<3>>:$SIM_CPLLREFCLK_SEL,
    StrAttr:$SIM_RECEIVER_DETECT_PASS,
    StrAttr:$SIM_RESET_SPEEDUP,
    StrAttr:$SIM_TX_EIDLE_DRIVE_LEVEL,
    StrAttr:$SIM_VERSION,
    APIntAttr<I<5>>:$TERM_RCAL_CFG,
    APIntAttr<I<1>>:$TERM_RCAL_OVRD,
    APIntAttr<I<8>>:$TRANS_TIME_RATE,
    APIntAttr<I<32>>:$TST_RSV,
    StrAttr:$TXBUF_EN,
    StrAttr:$TXBUF_RESET_ON_RATE_CHANGE,
    APIntAttr<I<16>>:$TXDLY_CFG,
    APIntAttr<I<9>>:$TXDLY_LCFG,
    APIntAttr<I<16>>:$TXDLY_TAP_CFG,
    StrAttr:$TXGEARBOX_EN,
    SI64Attr:$TXOUT_DIV,
    APIntAttr<I<5>>:$TXPCSRESET_TIME,
    APIntAttr<I<24>>:$TXPHDLY_CFG,
    APIntAttr<I<16>>:$TXPH_CFG,
    APIntAttr<I<5>>:$TXPH_MONITOR_SEL,
    APIntAttr<I<5>>:$TXPMARESET_TIME,
    SI64Attr:$TX_CLK25_DIV,
    APIntAttr<I<1>>:$TX_CLKMUX_PD,
    SI64Attr:$TX_DATA_WIDTH,
    APIntAttr<I<5>>:$TX_DEEMPH0,
    APIntAttr<I<5>>:$TX_DEEMPH1,
    StrAttr:$TX_DRIVE_MODE,
    APIntAttr<I<3>>:$TX_EIDLE_ASSERT_DELAY,
    APIntAttr<I<3>>:$TX_EIDLE_DEASSERT_DELAY,
    SI64Attr:$TX_INT_DATAWIDTH,
    StrAttr:$TX_LOOPBACK_DRIVE_HIZ,
    APIntAttr<I<1>>:$TX_MAINCURSOR_SEL,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_0,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_1,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_2,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_3,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_4,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_0,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_1,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_2,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_3,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_4,
    APIntAttr<I<1>>:$TX_PREDRIVER_MODE,
    APIntAttr<I<1>>:$TX_QPI_STATUS_EN,
    APIntAttr<I<14>>:$TX_RXDETECT_CFG,
    APIntAttr<I<3>>:$TX_RXDETECT_REF,
    StrAttr:$TX_XCLK_SEL,
    APIntAttr<I<1>>:$UCODEER_CLR
  );

  let results = (outs
    I<1>:$CPLLFBCLKLOST,
    I<1>:$CPLLLOCK,
    I<1>:$CPLLREFCLKLOST,
    I<1>:$DRPRDY,
    I<1>:$EYESCANDATAERROR,
    I<1>:$GTREFCLKMONITOR,
    I<1>:$GTXTXN,
    I<1>:$GTXTXP,
    I<1>:$PHYSTATUS,
    I<1>:$RXBYTEISALIGNED,
    I<1>:$RXBYTEREALIGN,
    I<1>:$RXCDRLOCK,
    I<1>:$RXCHANBONDSEQ,
    I<1>:$RXCHANISALIGNED,
    I<1>:$RXCHANREALIGN,
    I<1>:$RXCOMINITDET,
    I<1>:$RXCOMMADET,
    I<1>:$RXCOMSASDET,
    I<1>:$RXCOMWAKEDET,
    I<1>:$RXDATAVALID,
    I<1>:$RXDLYSRESETDONE,
    I<1>:$RXELECIDLE,
    I<1>:$RXHEADERVALID,
    I<1>:$RXOUTCLK,
    I<1>:$RXOUTCLKFABRIC,
    I<1>:$RXOUTCLKPCS,
    I<1>:$RXPHALIGNDONE,
    I<1>:$RXPRBSERR,
    I<1>:$RXQPISENN,
    I<1>:$RXQPISENP,
    I<1>:$RXRATEDONE,
    I<1>:$RXRESETDONE,
    I<1>:$RXSTARTOFSEQ,
    I<1>:$RXVALID,
    I<1>:$TXCOMFINISH,
    I<1>:$TXDLYSRESETDONE,
    I<1>:$TXGEARBOXREADY,
    I<1>:$TXOUTCLK,
    I<1>:$TXOUTCLKFABRIC,
    I<1>:$TXOUTCLKPCS,
    I<1>:$TXPHALIGNDONE,
    I<1>:$TXPHINITDONE,
    I<1>:$TXQPISENN,
    I<1>:$TXQPISENP,
    I<1>:$TXRATEDONE,
    I<1>:$TXRESETDONE,
    I<16>:$DRPDO,
    I<16>:$PCSRSVDOUT,
    I<2>:$RXCLKCORCNT,
    I<2>:$TXBUFSTATUS,
    I<3>:$RXBUFSTATUS,
    I<3>:$RXHEADER,
    I<3>:$RXSTATUS,
    I<5>:$RXCHBONDO,
    I<5>:$RXPHMONITOR,
    I<5>:$RXPHSLIPMONITOR,
    I<64>:$RXDATA,
    I<7>:$RXMONITOROUT,
    I<8>:$DMONITOROUT,
    I<8>:$RXCHARISCOMMA,
    I<8>:$RXCHARISK,
    I<8>:$RXDISPERR,
    I<8>:$RXNOTINTABLE,
    I<10>:$TSTOUT
  );
}

def GTXE2uCOMMON : XilinxPrimitiveOp<"GTXE2_COMMON", []> {
  let summary = "GTXE2_COMMON Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$BGBYPASSB,
    I<1>:$BGMONITORENB,
    I<1>:$BGPDB,
    I<1>:$DRPCLK,
    I<1>:$DRPEN,
    I<1>:$DRPWE,
    I<1>:$GTGREFCLK,
    I<1>:$GTNORTHREFCLK0,
    I<1>:$GTNORTHREFCLK1,
    I<1>:$GTREFCLK0,
    I<1>:$GTREFCLK1,
    I<1>:$GTSOUTHREFCLK0,
    I<1>:$GTSOUTHREFCLK1,
    I<1>:$QPLLLOCKDETCLK,
    I<1>:$QPLLLOCKEN,
    I<1>:$QPLLOUTRESET,
    I<1>:$QPLLPD,
    I<1>:$QPLLRESET,
    I<1>:$RCALENB,
    I<16>:$DRPDI,
    I<16>:$QPLLRSVD1,
    I<3>:$QPLLREFCLKSEL,
    I<5>:$BGRCALOVRD,
    I<5>:$QPLLRSVD2,
    I<8>:$DRPADDR,
    I<8>:$PMARSVD,

    // GTXE2_COMMON parameters follows
    StrAttr:$LOC,
    APIntAttr<I<64>>:$BIAS_CFG,
    APIntAttr<I<32>>:$COMMON_CFG,
    APIntAttr<I<1>>:$IS_DRPCLK_INVERTED,
    APIntAttr<I<1>>:$IS_GTGREFCLK_INVERTED,
    APIntAttr<I<1>>:$IS_QPLLLOCKDETCLK_INVERTED,
    APIntAttr<I<27>>:$QPLL_CFG,
    APIntAttr<I<4>>:$QPLL_CLKOUT_CFG,
    APIntAttr<I<6>>:$QPLL_COARSE_FREQ_OVRD,
    APIntAttr<I<1>>:$QPLL_COARSE_FREQ_OVRD_EN,
    APIntAttr<I<10>>:$QPLL_CP,
    APIntAttr<I<1>>:$QPLL_CP_MONITOR_EN,
    APIntAttr<I<1>>:$QPLL_DMONITOR_SEL,
    APIntAttr<I<10>>:$QPLL_FBDIV,
    APIntAttr<I<1>>:$QPLL_FBDIV_MONITOR_EN,
    APIntAttr<I<1>>:$QPLL_FBDIV_RATIO,
    APIntAttr<I<24>>:$QPLL_INIT_CFG,
    APIntAttr<I<16>>:$QPLL_LOCK_CFG,
    APIntAttr<I<4>>:$QPLL_LPF,
    SI64Attr:$QPLL_REFCLK_DIV,
    APIntAttr<I<3>>:$SIM_QPLLREFCLK_SEL,
    StrAttr:$SIM_RESET_SPEEDUP,
    StrAttr:$SIM_VERSION
  );

  let results = (outs
    I<1>:$DRPRDY,
    I<1>:$QPLLFBCLKLOST,
    I<1>:$QPLLLOCK,
    I<1>:$QPLLOUTCLK,
    I<1>:$QPLLOUTREFCLK,
    I<1>:$QPLLREFCLKLOST,
    I<1>:$REFCLKOUTMONITOR,
    I<16>:$DRPDO,
    I<8>:$QPLLDMONITOR
  );
}

def GTYE3uCHANNEL : XilinxPrimitiveOp<"GTYE3_CHANNEL", []> {
  let summary = "GTYE3_CHANNEL Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CDRSTEPDIR,
    I<1>:$CDRSTEPSQ,
    I<1>:$CDRSTEPSX,
    I<1>:$CFGRESET,
    I<1>:$CLKRSVD0,
    I<1>:$CLKRSVD1,
    I<1>:$CPLLLOCKDETCLK,
    I<1>:$CPLLLOCKEN,
    I<1>:$CPLLPD,
    I<3>:$CPLLREFCLKSEL,
    I<1>:$CPLLRESET,
    I<1>:$DMONFIFORESET,
    I<1>:$DMONITORCLK,
    I<10>:$DRPADDR,
    I<1>:$DRPCLK,
    I<16>:$DRPDI,
    I<1>:$DRPEN,
    I<1>:$DRPWE,
    I<1>:$ELPCALDVORWREN,
    I<1>:$ELPCALPAORWREN,
    I<1>:$EVODDPHICALDONE,
    I<1>:$EVODDPHICALSTART,
    I<1>:$EVODDPHIDRDEN,
    I<1>:$EVODDPHIDWREN,
    I<1>:$EVODDPHIXRDEN,
    I<1>:$EVODDPHIXWREN,
    I<1>:$EYESCANMODE,
    I<1>:$EYESCANRESET,
    I<1>:$EYESCANTRIGGER,
    I<1>:$GTGREFCLK,
    I<1>:$GTNORTHREFCLK0,
    I<1>:$GTNORTHREFCLK1,
    I<1>:$GTREFCLK0,
    I<1>:$GTREFCLK1,
    I<1>:$GTRESETSEL,
    I<16>:$GTRSVD,
    I<1>:$GTRXRESET,
    I<1>:$GTSOUTHREFCLK0,
    I<1>:$GTSOUTHREFCLK1,
    I<1>:$GTTXRESET,
    I<1>:$GTYRXN,
    I<1>:$GTYRXP,
    I<3>:$LOOPBACK,
    I<16>:$LOOPRSVD,
    I<1>:$LPBKRXTXSEREN,
    I<1>:$LPBKTXRXSEREN,
    I<1>:$PCIEEQRXEQADAPTDONE,
    I<1>:$PCIERSTIDLE,
    I<1>:$PCIERSTTXSYNCSTART,
    I<1>:$PCIEUSERRATEDONE,
    I<16>:$PCSRSVDIN,
    I<5>:$PCSRSVDIN2,
    I<5>:$PMARSVDIN,
    I<1>:$QPLL0CLK,
    I<1>:$QPLL0REFCLK,
    I<1>:$QPLL1CLK,
    I<1>:$QPLL1REFCLK,
    I<1>:$RESETOVRD,
    I<1>:$RSTCLKENTX,
    I<1>:$RX8B10BEN,
    I<1>:$RXBUFRESET,
    I<1>:$RXCDRFREQRESET,
    I<1>:$RXCDRHOLD,
    I<1>:$RXCDROVRDEN,
    I<1>:$RXCDRRESET,
    I<1>:$RXCDRRESETRSV,
    I<1>:$RXCHBONDEN,
    I<5>:$RXCHBONDI,
    I<3>:$RXCHBONDLEVEL,
    I<1>:$RXCHBONDMASTER,
    I<1>:$RXCHBONDSLAVE,
    I<1>:$RXCKCALRESET,
    I<1>:$RXCOMMADETEN,
    I<1>:$RXDCCFORCESTART,
    I<1>:$RXDFEAGCHOLD,
    I<1>:$RXDFEAGCOVRDEN,
    I<1>:$RXDFELFHOLD,
    I<1>:$RXDFELFOVRDEN,
    I<1>:$RXDFELPMRESET,
    I<1>:$RXDFETAP10HOLD,
    I<1>:$RXDFETAP10OVRDEN,
    I<1>:$RXDFETAP11HOLD,
    I<1>:$RXDFETAP11OVRDEN,
    I<1>:$RXDFETAP12HOLD,
    I<1>:$RXDFETAP12OVRDEN,
    I<1>:$RXDFETAP13HOLD,
    I<1>:$RXDFETAP13OVRDEN,
    I<1>:$RXDFETAP14HOLD,
    I<1>:$RXDFETAP14OVRDEN,
    I<1>:$RXDFETAP15HOLD,
    I<1>:$RXDFETAP15OVRDEN,
    I<1>:$RXDFETAP2HOLD,
    I<1>:$RXDFETAP2OVRDEN,
    I<1>:$RXDFETAP3HOLD,
    I<1>:$RXDFETAP3OVRDEN,
    I<1>:$RXDFETAP4HOLD,
    I<1>:$RXDFETAP4OVRDEN,
    I<1>:$RXDFETAP5HOLD,
    I<1>:$RXDFETAP5OVRDEN,
    I<1>:$RXDFETAP6HOLD,
    I<1>:$RXDFETAP6OVRDEN,
    I<1>:$RXDFETAP7HOLD,
    I<1>:$RXDFETAP7OVRDEN,
    I<1>:$RXDFETAP8HOLD,
    I<1>:$RXDFETAP8OVRDEN,
    I<1>:$RXDFETAP9HOLD,
    I<1>:$RXDFETAP9OVRDEN,
    I<1>:$RXDFEUTHOLD,
    I<1>:$RXDFEUTOVRDEN,
    I<1>:$RXDFEVPHOLD,
    I<1>:$RXDFEVPOVRDEN,
    I<1>:$RXDFEVSEN,
    I<1>:$RXDFEXYDEN,
    I<1>:$RXDLYBYPASS,
    I<1>:$RXDLYEN,
    I<1>:$RXDLYOVRDEN,
    I<1>:$RXDLYSRESET,
    I<2>:$RXELECIDLEMODE,
    I<1>:$RXGEARBOXSLIP,
    I<1>:$RXLATCLK,
    I<1>:$RXLPMEN,
    I<1>:$RXLPMGCHOLD,
    I<1>:$RXLPMGCOVRDEN,
    I<1>:$RXLPMHFHOLD,
    I<1>:$RXLPMHFOVRDEN,
    I<1>:$RXLPMLFHOLD,
    I<1>:$RXLPMLFKLOVRDEN,
    I<1>:$RXLPMOSHOLD,
    I<1>:$RXLPMOSOVRDEN,
    I<1>:$RXMCOMMAALIGNEN,
    I<2>:$RXMONITORSEL,
    I<1>:$RXOOBRESET,
    I<1>:$RXOSCALRESET,
    I<1>:$RXOSHOLD,
    I<4>:$RXOSINTCFG,
    I<1>:$RXOSINTEN,
    I<1>:$RXOSINTHOLD,
    I<1>:$RXOSINTOVRDEN,
    I<1>:$RXOSINTSTROBE,
    I<1>:$RXOSINTTESTOVRDEN,
    I<1>:$RXOSOVRDEN,
    I<3>:$RXOUTCLKSEL,
    I<1>:$RXPCOMMAALIGNEN,
    I<1>:$RXPCSRESET,
    I<2>:$RXPD,
    I<1>:$RXPHALIGN,
    I<1>:$RXPHALIGNEN,
    I<1>:$RXPHDLYPD,
    I<1>:$RXPHDLYRESET,
    I<1>:$RXPHOVRDEN,
    I<2>:$RXPLLCLKSEL,
    I<1>:$RXPMARESET,
    I<1>:$RXPOLARITY,
    I<1>:$RXPRBSCNTRESET,
    I<4>:$RXPRBSSEL,
    I<1>:$RXPROGDIVRESET,
    I<3>:$RXRATE,
    I<1>:$RXRATEMODE,
    I<1>:$RXSLIDE,
    I<1>:$RXSLIPOUTCLK,
    I<1>:$RXSLIPPMA,
    I<1>:$RXSYNCALLIN,
    I<1>:$RXSYNCIN,
    I<1>:$RXSYNCMODE,
    I<2>:$RXSYSCLKSEL,
    I<1>:$RXUSERRDY,
    I<1>:$RXUSRCLK,
    I<1>:$RXUSRCLK2,
    I<1>:$SIGVALIDCLK,
    I<20>:$TSTIN,
    I<8>:$TX8B10BBYPASS,
    I<1>:$TX8B10BEN,
    I<3>:$TXBUFDIFFCTRL,
    I<1>:$TXCOMINIT,
    I<1>:$TXCOMSAS,
    I<1>:$TXCOMWAKE,
    I<16>:$TXCTRL0,
    I<16>:$TXCTRL1,
    I<8>:$TXCTRL2,
    I<128>:$TXDATA,
    I<8>:$TXDATAEXTENDRSVD,
    I<1>:$TXDCCFORCESTART,
    I<1>:$TXDCCRESET,
    I<1>:$TXDEEMPH,
    I<1>:$TXDETECTRX,
    I<5>:$TXDIFFCTRL,
    I<1>:$TXDIFFPD,
    I<1>:$TXDLYBYPASS,
    I<1>:$TXDLYEN,
    I<1>:$TXDLYHOLD,
    I<1>:$TXDLYOVRDEN,
    I<1>:$TXDLYSRESET,
    I<1>:$TXDLYUPDOWN,
    I<1>:$TXELECIDLE,
    I<1>:$TXELFORCESTART,
    I<6>:$TXHEADER,
    I<1>:$TXINHIBIT,
    I<1>:$TXLATCLK,
    I<7>:$TXMAINCURSOR,
    I<3>:$TXMARGIN,
    I<3>:$TXOUTCLKSEL,
    I<1>:$TXPCSRESET,
    I<2>:$TXPD,
    I<1>:$TXPDELECIDLEMODE,
    I<1>:$TXPHALIGN,
    I<1>:$TXPHALIGNEN,
    I<1>:$TXPHDLYPD,
    I<1>:$TXPHDLYRESET,
    I<1>:$TXPHDLYTSTCLK,
    I<1>:$TXPHINIT,
    I<1>:$TXPHOVRDEN,
    I<1>:$TXPIPPMEN,
    I<1>:$TXPIPPMOVRDEN,
    I<1>:$TXPIPPMPD,
    I<1>:$TXPIPPMSEL,
    I<5>:$TXPIPPMSTEPSIZE,
    I<1>:$TXPISOPD,
    I<2>:$TXPLLCLKSEL,
    I<1>:$TXPMARESET,
    I<1>:$TXPOLARITY,
    I<5>:$TXPOSTCURSOR,
    I<1>:$TXPRBSFORCEERR,
    I<4>:$TXPRBSSEL,
    I<5>:$TXPRECURSOR,
    I<1>:$TXPROGDIVRESET,
    I<3>:$TXRATE,
    I<1>:$TXRATEMODE,
    I<7>:$TXSEQUENCE,
    I<1>:$TXSWING,
    I<1>:$TXSYNCALLIN,
    I<1>:$TXSYNCIN,
    I<1>:$TXSYNCMODE,
    I<2>:$TXSYSCLKSEL,
    I<1>:$TXUSERRDY,
    I<1>:$TXUSRCLK,
    I<1>:$TXUSRCLK2,

    // GTYE3_CHANNEL parameters follows
    APIntAttr<I<1>>:$ACJTAG_DEBUG_MODE,
    APIntAttr<I<1>>:$ACJTAG_MODE,
    APIntAttr<I<1>>:$ACJTAG_RESET,
    APIntAttr<I<16>>:$ADAPT_CFG0,
    APIntAttr<I<16>>:$ADAPT_CFG1,
    APIntAttr<I<16>>:$ADAPT_CFG2,
    StrAttr:$ALIGN_COMMA_DOUBLE,
    APIntAttr<I<10>>:$ALIGN_COMMA_ENABLE,
    SI64Attr:$ALIGN_COMMA_WORD,
    StrAttr:$ALIGN_MCOMMA_DET,
    APIntAttr<I<10>>:$ALIGN_MCOMMA_VALUE,
    StrAttr:$ALIGN_PCOMMA_DET,
    APIntAttr<I<10>>:$ALIGN_PCOMMA_VALUE,
    APIntAttr<I<1>>:$AUTO_BW_SEL_BYPASS,
    APIntAttr<I<1>>:$A_RXOSCALRESET,
    APIntAttr<I<1>>:$A_RXPROGDIVRESET,
    APIntAttr<I<5>>:$A_TXDIFFCTRL,
    APIntAttr<I<1>>:$A_TXPROGDIVRESET,
    APIntAttr<I<1>>:$CAPBYPASS_FORCE,
    StrAttr:$CBCC_DATA_SOURCE_SEL,
    APIntAttr<I<1>>:$CDR_SWAP_MODE_EN,
    StrAttr:$CHAN_BOND_KEEP_ALIGN,
    SI64Attr:$CHAN_BOND_MAX_SKEW,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_1,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_2,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_3,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_4,
    APIntAttr<I<4>>:$CHAN_BOND_SEQ_1_ENABLE,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_1,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_2,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_3,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_4,
    APIntAttr<I<4>>:$CHAN_BOND_SEQ_2_ENABLE,
    StrAttr:$CHAN_BOND_SEQ_2_USE,
    SI64Attr:$CHAN_BOND_SEQ_LEN,
    APIntAttr<I<16>>:$CH_HSPMUX,
    APIntAttr<I<16>>:$CKCAL1_CFG_0,
    APIntAttr<I<16>>:$CKCAL1_CFG_1,
    APIntAttr<I<16>>:$CKCAL1_CFG_2,
    APIntAttr<I<16>>:$CKCAL1_CFG_3,
    APIntAttr<I<16>>:$CKCAL2_CFG_0,
    APIntAttr<I<16>>:$CKCAL2_CFG_1,
    APIntAttr<I<16>>:$CKCAL2_CFG_2,
    APIntAttr<I<16>>:$CKCAL2_CFG_3,
    APIntAttr<I<16>>:$CKCAL2_CFG_4,
    APIntAttr<I<16>>:$CKCAL_RSVD0,
    APIntAttr<I<16>>:$CKCAL_RSVD1,
    StrAttr:$CLK_CORRECT_USE,
    StrAttr:$CLK_COR_KEEP_IDLE,
    SI64Attr:$CLK_COR_MAX_LAT,
    SI64Attr:$CLK_COR_MIN_LAT,
    StrAttr:$CLK_COR_PRECEDENCE,
    SI64Attr:$CLK_COR_REPEAT_WAIT,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_1,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_2,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_3,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_4,
    APIntAttr<I<4>>:$CLK_COR_SEQ_1_ENABLE,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_1,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_2,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_3,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_4,
    APIntAttr<I<4>>:$CLK_COR_SEQ_2_ENABLE,
    StrAttr:$CLK_COR_SEQ_2_USE,
    SI64Attr:$CLK_COR_SEQ_LEN,
    APIntAttr<I<16>>:$CPLL_CFG0,
    APIntAttr<I<16>>:$CPLL_CFG1,
    APIntAttr<I<16>>:$CPLL_CFG2,
    APIntAttr<I<6>>:$CPLL_CFG3,
    SI64Attr:$CPLL_FBDIV,
    SI64Attr:$CPLL_FBDIV_45,
    APIntAttr<I<16>>:$CPLL_INIT_CFG0,
    APIntAttr<I<8>>:$CPLL_INIT_CFG1,
    APIntAttr<I<16>>:$CPLL_LOCK_CFG,
    SI64Attr:$CPLL_REFCLK_DIV,
    APIntAttr<I<3>>:$CTLE3_OCAP_EXT_CTRL,
    APIntAttr<I<1>>:$CTLE3_OCAP_EXT_EN,
    APIntAttr<I<2>>:$DDI_CTRL,
    SI64Attr:$DDI_REALIGN_WAIT,
    StrAttr:$DEC_MCOMMA_DETECT,
    StrAttr:$DEC_PCOMMA_DETECT,
    StrAttr:$DEC_VALID_COMMA_ONLY,
    APIntAttr<I<1>>:$DFE_D_X_REL_POS,
    APIntAttr<I<1>>:$DFE_VCM_COMP_EN,
    APIntAttr<I<10>>:$DMONITOR_CFG0,
    APIntAttr<I<8>>:$DMONITOR_CFG1,
    APIntAttr<I<1>>:$ES_CLK_PHASE_SEL,
    APIntAttr<I<6>>:$ES_CONTROL,
    StrAttr:$ES_ERRDET_EN,
    StrAttr:$ES_EYE_SCAN_EN,
    APIntAttr<I<12>>:$ES_HORZ_OFFSET,
    APIntAttr<I<10>>:$ES_PMA_CFG,
    APIntAttr<I<5>>:$ES_PRESCALE,
    APIntAttr<I<16>>:$ES_QUALIFIER0,
    APIntAttr<I<16>>:$ES_QUALIFIER1,
    APIntAttr<I<16>>:$ES_QUALIFIER2,
    APIntAttr<I<16>>:$ES_QUALIFIER3,
    APIntAttr<I<16>>:$ES_QUALIFIER4,
    APIntAttr<I<16>>:$ES_QUALIFIER5,
    APIntAttr<I<16>>:$ES_QUALIFIER6,
    APIntAttr<I<16>>:$ES_QUALIFIER7,
    APIntAttr<I<16>>:$ES_QUALIFIER8,
    APIntAttr<I<16>>:$ES_QUALIFIER9,
    APIntAttr<I<16>>:$ES_QUAL_MASK0,
    APIntAttr<I<16>>:$ES_QUAL_MASK1,
    APIntAttr<I<16>>:$ES_QUAL_MASK2,
    APIntAttr<I<16>>:$ES_QUAL_MASK3,
    APIntAttr<I<16>>:$ES_QUAL_MASK4,
    APIntAttr<I<16>>:$ES_QUAL_MASK5,
    APIntAttr<I<16>>:$ES_QUAL_MASK6,
    APIntAttr<I<16>>:$ES_QUAL_MASK7,
    APIntAttr<I<16>>:$ES_QUAL_MASK8,
    APIntAttr<I<16>>:$ES_QUAL_MASK9,
    APIntAttr<I<16>>:$ES_SDATA_MASK0,
    APIntAttr<I<16>>:$ES_SDATA_MASK1,
    APIntAttr<I<16>>:$ES_SDATA_MASK2,
    APIntAttr<I<16>>:$ES_SDATA_MASK3,
    APIntAttr<I<16>>:$ES_SDATA_MASK4,
    APIntAttr<I<16>>:$ES_SDATA_MASK5,
    APIntAttr<I<16>>:$ES_SDATA_MASK6,
    APIntAttr<I<16>>:$ES_SDATA_MASK7,
    APIntAttr<I<16>>:$ES_SDATA_MASK8,
    APIntAttr<I<16>>:$ES_SDATA_MASK9,
    APIntAttr<I<11>>:$EVODD_PHI_CFG,
    APIntAttr<I<1>>:$EYE_SCAN_SWAP_EN,
    APIntAttr<I<4>>:$FTS_DESKEW_SEQ_ENABLE,
    APIntAttr<I<4>>:$FTS_LANE_DESKEW_CFG,
    StrAttr:$FTS_LANE_DESKEW_EN,
    APIntAttr<I<5>>:$GEARBOX_MODE,
    APIntAttr<I<1>>:$GM_BIAS_SELECT,
    APIntAttr<I<1>>:$ISCAN_CK_PH_SEL2,
    APIntAttr<I<1>>:$LOCAL_MASTER,
    APIntAttr<I<16>>:$LOOP0_CFG,
    APIntAttr<I<16>>:$LOOP10_CFG,
    APIntAttr<I<16>>:$LOOP11_CFG,
    APIntAttr<I<16>>:$LOOP12_CFG,
    APIntAttr<I<16>>:$LOOP13_CFG,
    APIntAttr<I<16>>:$LOOP1_CFG,
    APIntAttr<I<16>>:$LOOP2_CFG,
    APIntAttr<I<16>>:$LOOP3_CFG,
    APIntAttr<I<16>>:$LOOP4_CFG,
    APIntAttr<I<16>>:$LOOP5_CFG,
    APIntAttr<I<16>>:$LOOP6_CFG,
    APIntAttr<I<16>>:$LOOP7_CFG,
    APIntAttr<I<16>>:$LOOP8_CFG,
    APIntAttr<I<16>>:$LOOP9_CFG,
    APIntAttr<I<3>>:$LPBK_BIAS_CTRL,
    APIntAttr<I<1>>:$LPBK_EN_RCAL_B,
    APIntAttr<I<4>>:$LPBK_EXT_RCAL,
    APIntAttr<I<4>>:$LPBK_RG_CTRL,
    APIntAttr<I<2>>:$OOBDIVCTL,
    APIntAttr<I<1>>:$OOB_PWRUP,
    StrAttr:$PCI3_AUTO_REALIGN,
    APIntAttr<I<1>>:$PCI3_PIPE_RX_ELECIDLE,
    APIntAttr<I<2>>:$PCI3_RX_ASYNC_EBUF_BYPASS,
    APIntAttr<I<1>>:$PCI3_RX_ELECIDLE_EI2_ENABLE,
    APIntAttr<I<6>>:$PCI3_RX_ELECIDLE_H2L_COUNT,
    APIntAttr<I<3>>:$PCI3_RX_ELECIDLE_H2L_DISABLE,
    APIntAttr<I<6>>:$PCI3_RX_ELECIDLE_HI_COUNT,
    APIntAttr<I<1>>:$PCI3_RX_ELECIDLE_LP4_DISABLE,
    APIntAttr<I<1>>:$PCI3_RX_FIFO_DISABLE,
    APIntAttr<I<16>>:$PCIE_BUFG_DIV_CTRL,
    APIntAttr<I<16>>:$PCIE_RXPCS_CFG_GEN3,
    APIntAttr<I<16>>:$PCIE_RXPMA_CFG,
    APIntAttr<I<16>>:$PCIE_TXPCS_CFG_GEN3,
    APIntAttr<I<16>>:$PCIE_TXPMA_CFG,
    StrAttr:$PCS_PCIE_EN,
    APIntAttr<I<16>>:$PCS_RSVD0,
    APIntAttr<I<3>>:$PCS_RSVD1,
    APIntAttr<I<12>>:$PD_TRANS_TIME_FROM_P2,
    APIntAttr<I<8>>:$PD_TRANS_TIME_NONE_P2,
    APIntAttr<I<8>>:$PD_TRANS_TIME_TO_P2,
    APIntAttr<I<2>>:$PLL_SEL_MODE_GEN12,
    APIntAttr<I<2>>:$PLL_SEL_MODE_GEN3,
    APIntAttr<I<16>>:$PMA_RSV0,
    APIntAttr<I<16>>:$PMA_RSV1,
    SI64Attr:$PREIQ_FREQ_BST,
    APIntAttr<I<3>>:$PROCESS_PAR,
    APIntAttr<I<1>>:$RATE_SW_USE_DRP,
    APIntAttr<I<1>>:$RESET_POWERSAVE_DISABLE,
    APIntAttr<I<5>>:$RXBUFRESET_TIME,
    StrAttr:$RXBUF_ADDR_MODE,
    APIntAttr<I<4>>:$RXBUF_EIDLE_HI_CNT,
    APIntAttr<I<4>>:$RXBUF_EIDLE_LO_CNT,
    StrAttr:$RXBUF_EN,
    StrAttr:$RXBUF_RESET_ON_CB_CHANGE,
    StrAttr:$RXBUF_RESET_ON_COMMAALIGN,
    StrAttr:$RXBUF_RESET_ON_EIDLE,
    StrAttr:$RXBUF_RESET_ON_RATE_CHANGE,
    SI64Attr:$RXBUF_THRESH_OVFLW,
    StrAttr:$RXBUF_THRESH_OVRD,
    SI64Attr:$RXBUF_THRESH_UNDFLW,
    APIntAttr<I<5>>:$RXCDRFREQRESET_TIME,
    APIntAttr<I<5>>:$RXCDRPHRESET_TIME,
    APIntAttr<I<16>>:$RXCDR_CFG0,
    APIntAttr<I<16>>:$RXCDR_CFG0_GEN3,
    APIntAttr<I<16>>:$RXCDR_CFG1,
    APIntAttr<I<16>>:$RXCDR_CFG1_GEN3,
    APIntAttr<I<16>>:$RXCDR_CFG2,
    APIntAttr<I<16>>:$RXCDR_CFG2_GEN3,
    APIntAttr<I<16>>:$RXCDR_CFG3,
    APIntAttr<I<16>>:$RXCDR_CFG3_GEN3,
    APIntAttr<I<16>>:$RXCDR_CFG4,
    APIntAttr<I<16>>:$RXCDR_CFG4_GEN3,
    APIntAttr<I<16>>:$RXCDR_CFG5,
    APIntAttr<I<16>>:$RXCDR_CFG5_GEN3,
    APIntAttr<I<1>>:$RXCDR_FR_RESET_ON_EIDLE,
    APIntAttr<I<1>>:$RXCDR_HOLD_DURING_EIDLE,
    APIntAttr<I<16>>:$RXCDR_LOCK_CFG0,
    APIntAttr<I<16>>:$RXCDR_LOCK_CFG1,
    APIntAttr<I<16>>:$RXCDR_LOCK_CFG2,
    APIntAttr<I<16>>:$RXCDR_LOCK_CFG3,
    APIntAttr<I<1>>:$RXCDR_PH_RESET_ON_EIDLE,
    APIntAttr<I<2>>:$RXCFOKDONE_SRC,
    APIntAttr<I<16>>:$RXCFOK_CFG0,
    APIntAttr<I<16>>:$RXCFOK_CFG1,
    APIntAttr<I<16>>:$RXCFOK_CFG2,
    APIntAttr<I<7>>:$RXDFELPMRESET_TIME,
    APIntAttr<I<16>>:$RXDFELPM_KL_CFG0,
    APIntAttr<I<16>>:$RXDFELPM_KL_CFG1,
    APIntAttr<I<16>>:$RXDFELPM_KL_CFG2,
    APIntAttr<I<16>>:$RXDFE_CFG0,
    APIntAttr<I<16>>:$RXDFE_CFG1,
    APIntAttr<I<16>>:$RXDFE_GC_CFG0,
    APIntAttr<I<16>>:$RXDFE_GC_CFG1,
    APIntAttr<I<16>>:$RXDFE_GC_CFG2,
    APIntAttr<I<16>>:$RXDFE_H2_CFG0,
    APIntAttr<I<16>>:$RXDFE_H2_CFG1,
    APIntAttr<I<16>>:$RXDFE_H3_CFG0,
    APIntAttr<I<16>>:$RXDFE_H3_CFG1,
    APIntAttr<I<16>>:$RXDFE_H4_CFG0,
    APIntAttr<I<16>>:$RXDFE_H4_CFG1,
    APIntAttr<I<16>>:$RXDFE_H5_CFG0,
    APIntAttr<I<16>>:$RXDFE_H5_CFG1,
    APIntAttr<I<16>>:$RXDFE_H6_CFG0,
    APIntAttr<I<16>>:$RXDFE_H6_CFG1,
    APIntAttr<I<16>>:$RXDFE_H7_CFG0,
    APIntAttr<I<16>>:$RXDFE_H7_CFG1,
    APIntAttr<I<16>>:$RXDFE_H8_CFG0,
    APIntAttr<I<16>>:$RXDFE_H8_CFG1,
    APIntAttr<I<16>>:$RXDFE_H9_CFG0,
    APIntAttr<I<16>>:$RXDFE_H9_CFG1,
    APIntAttr<I<16>>:$RXDFE_HA_CFG0,
    APIntAttr<I<16>>:$RXDFE_HA_CFG1,
    APIntAttr<I<16>>:$RXDFE_HB_CFG0,
    APIntAttr<I<16>>:$RXDFE_HB_CFG1,
    APIntAttr<I<16>>:$RXDFE_HC_CFG0,
    APIntAttr<I<16>>:$RXDFE_HC_CFG1,
    APIntAttr<I<16>>:$RXDFE_HD_CFG0,
    APIntAttr<I<16>>:$RXDFE_HD_CFG1,
    APIntAttr<I<16>>:$RXDFE_HE_CFG0,
    APIntAttr<I<16>>:$RXDFE_HE_CFG1,
    APIntAttr<I<16>>:$RXDFE_HF_CFG0,
    APIntAttr<I<16>>:$RXDFE_HF_CFG1,
    APIntAttr<I<16>>:$RXDFE_OS_CFG0,
    APIntAttr<I<16>>:$RXDFE_OS_CFG1,
    APIntAttr<I<1>>:$RXDFE_PWR_SAVING,
    APIntAttr<I<16>>:$RXDFE_UT_CFG0,
    APIntAttr<I<16>>:$RXDFE_UT_CFG1,
    APIntAttr<I<16>>:$RXDFE_VP_CFG0,
    APIntAttr<I<16>>:$RXDFE_VP_CFG1,
    APIntAttr<I<16>>:$RXDLY_CFG,
    APIntAttr<I<16>>:$RXDLY_LCFG,
    StrAttr:$RXELECIDLE_CFG,
    SI64Attr:$RXGBOX_FIFO_INIT_RD_ADDR,
    StrAttr:$RXGEARBOX_EN,
    APIntAttr<I<5>>:$RXISCANRESET_TIME,
    APIntAttr<I<16>>:$RXLPM_CFG,
    APIntAttr<I<16>>:$RXLPM_GC_CFG,
    APIntAttr<I<16>>:$RXLPM_KH_CFG0,
    APIntAttr<I<16>>:$RXLPM_KH_CFG1,
    APIntAttr<I<16>>:$RXLPM_OS_CFG0,
    APIntAttr<I<16>>:$RXLPM_OS_CFG1,
    APIntAttr<I<9>>:$RXOOB_CFG,
    StrAttr:$RXOOB_CLK_CFG,
    APIntAttr<I<5>>:$RXOSCALRESET_TIME,
    SI64Attr:$RXOUT_DIV,
    APIntAttr<I<5>>:$RXPCSRESET_TIME,
    APIntAttr<I<16>>:$RXPHBEACON_CFG,
    APIntAttr<I<16>>:$RXPHDLY_CFG,
    APIntAttr<I<16>>:$RXPHSAMP_CFG,
    APIntAttr<I<16>>:$RXPHSLIP_CFG,
    APIntAttr<I<5>>:$RXPH_MONITOR_SEL,
    APIntAttr<I<1>>:$RXPI_AUTO_BW_SEL_BYPASS,
    APIntAttr<I<16>>:$RXPI_CFG,
    APIntAttr<I<1>>:$RXPI_LPM,
    APIntAttr<I<16>>:$RXPI_RSV0,
    APIntAttr<I<2>>:$RXPI_SEL_LC,
    APIntAttr<I<2>>:$RXPI_STARTCODE,
    APIntAttr<I<1>>:$RXPI_VREFSEL,
    StrAttr:$RXPMACLK_SEL,
    APIntAttr<I<5>>:$RXPMARESET_TIME,
    APIntAttr<I<1>>:$RXPRBS_ERR_LOOPBACK,
    SI64Attr:$RXPRBS_LINKACQ_CNT,
    SI64Attr:$RXSLIDE_AUTO_WAIT,
    StrAttr:$RXSLIDE_MODE,
    APIntAttr<I<1>>:$RXSYNC_MULTILANE,
    APIntAttr<I<1>>:$RXSYNC_OVRD,
    APIntAttr<I<1>>:$RXSYNC_SKIP_DA,
    APIntAttr<I<1>>:$RX_AFE_CM_EN,
    APIntAttr<I<16>>:$RX_BIAS_CFG0,
    APIntAttr<I<6>>:$RX_BUFFER_CFG,
    APIntAttr<I<1>>:$RX_CAPFF_SARC_ENB,
    SI64Attr:$RX_CLK25_DIV,
    APIntAttr<I<1>>:$RX_CLKMUX_EN,
    APIntAttr<I<5>>:$RX_CLK_SLIP_OVRD,
    APIntAttr<I<4>>:$RX_CM_BUF_CFG,
    APIntAttr<I<1>>:$RX_CM_BUF_PD,
    SI64Attr:$RX_CM_SEL,
    SI64Attr:$RX_CM_TRIM,
    APIntAttr<I<1>>:$RX_CTLE1_KHKL,
    APIntAttr<I<1>>:$RX_CTLE2_KHKL,
    APIntAttr<I<1>>:$RX_CTLE3_AGC,
    SI64Attr:$RX_DATA_WIDTH,
    APIntAttr<I<6>>:$RX_DDI_SEL,
    StrAttr:$RX_DEFER_RESET_BUF_EN,
    APIntAttr<I<3>>:$RX_DEGEN_CTRL,
    SI64Attr:$RX_DFELPM_CFG0,
    APIntAttr<I<1>>:$RX_DFELPM_CFG1,
    APIntAttr<I<1>>:$RX_DFELPM_KLKH_AGC_STUP_EN,
    APIntAttr<I<2>>:$RX_DFE_AGC_CFG0,
    SI64Attr:$RX_DFE_AGC_CFG1,
    SI64Attr:$RX_DFE_KL_LPM_KH_CFG0,
    SI64Attr:$RX_DFE_KL_LPM_KH_CFG1,
    APIntAttr<I<2>>:$RX_DFE_KL_LPM_KL_CFG0,
    APIntAttr<I<3>>:$RX_DFE_KL_LPM_KL_CFG1,
    APIntAttr<I<1>>:$RX_DFE_LPM_HOLD_DURING_EIDLE,
    StrAttr:$RX_DISPERR_SEQ_MATCH,
    APIntAttr<I<1>>:$RX_DIV2_MODE_B,
    APIntAttr<I<5>>:$RX_DIVRESET_TIME,
    APIntAttr<I<1>>:$RX_EN_CTLE_RCAL_B,
    APIntAttr<I<1>>:$RX_EN_HI_LR,
    APIntAttr<I<9>>:$RX_EXT_RL_CTRL,
    APIntAttr<I<7>>:$RX_EYESCAN_VS_CODE,
    APIntAttr<I<1>>:$RX_EYESCAN_VS_NEG_DIR,
    APIntAttr<I<2>>:$RX_EYESCAN_VS_RANGE,
    APIntAttr<I<1>>:$RX_EYESCAN_VS_UT_SIGN,
    APIntAttr<I<1>>:$RX_FABINT_USRCLK_FLOP,
    SI64Attr:$RX_INT_DATAWIDTH,
    APIntAttr<I<1>>:$RX_PMA_POWER_SAVE,
    StrAttr:$RX_PROGDIV_CFG,
    APIntAttr<I<16>>:$RX_PROGDIV_RATE,
    APIntAttr<I<4>>:$RX_RESLOAD_CTRL,
    APIntAttr<I<1>>:$RX_RESLOAD_OVRD,
    APIntAttr<I<3>>:$RX_SAMPLE_PERIOD,
    SI64Attr:$RX_SIG_VALID_DLY,
    APIntAttr<I<1>>:$RX_SUM_DFETAPREP_EN,
    APIntAttr<I<4>>:$RX_SUM_IREF_TUNE,
    APIntAttr<I<4>>:$RX_SUM_VCMTUNE,
    APIntAttr<I<1>>:$RX_SUM_VCM_OVWR,
    APIntAttr<I<3>>:$RX_SUM_VREF_TUNE,
    APIntAttr<I<2>>:$RX_TUNE_AFE_OS,
    APIntAttr<I<3>>:$RX_VREG_CTRL,
    APIntAttr<I<1>>:$RX_VREG_PDB,
    APIntAttr<I<2>>:$RX_WIDEMODE_CDR,
    StrAttr:$RX_XCLK_SEL,
    APIntAttr<I<1>>:$RX_XMODE_SEL,
    SI64Attr:$SAS_MAX_COM,
    SI64Attr:$SAS_MIN_COM,
    APIntAttr<I<4>>:$SATA_BURST_SEQ_LEN,
    APIntAttr<I<3>>:$SATA_BURST_VAL,
    StrAttr:$SATA_CPLL_CFG,
    APIntAttr<I<3>>:$SATA_EIDLE_VAL,
    SI64Attr:$SATA_MAX_BURST,
    SI64Attr:$SATA_MAX_INIT,
    SI64Attr:$SATA_MAX_WAKE,
    SI64Attr:$SATA_MIN_BURST,
    SI64Attr:$SATA_MIN_INIT,
    SI64Attr:$SATA_MIN_WAKE,
    StrAttr:$SHOW_REALIGN_COMMA,
    StrAttr:$SIM_MODE,
    StrAttr:$SIM_RECEIVER_DETECT_PASS,
    StrAttr:$SIM_RESET_SPEEDUP,
    APIntAttr<I<1>>:$SIM_TX_EIDLE_DRIVE_LEVEL,
    SI64Attr:$SIM_VERSION,
    APIntAttr<I<2>>:$TAPDLY_SET_TX,
    APIntAttr<I<4>>:$TEMPERATURE_PAR,
    APIntAttr<I<15>>:$TERM_RCAL_CFG,
    APIntAttr<I<3>>:$TERM_RCAL_OVRD,
    APIntAttr<I<8>>:$TRANS_TIME_RATE,
    APIntAttr<I<8>>:$TST_RSV0,
    APIntAttr<I<8>>:$TST_RSV1,
    StrAttr:$TXBUF_EN,
    StrAttr:$TXBUF_RESET_ON_RATE_CHANGE,
    APIntAttr<I<16>>:$TXDLY_CFG,
    APIntAttr<I<16>>:$TXDLY_LCFG,
    StrAttr:$TXFIFO_ADDR_CFG,
    SI64Attr:$TXGBOX_FIFO_INIT_RD_ADDR,
    StrAttr:$TXGEARBOX_EN,
    SI64Attr:$TXOUT_DIV,
    APIntAttr<I<5>>:$TXPCSRESET_TIME,
    APIntAttr<I<16>>:$TXPHDLY_CFG0,
    APIntAttr<I<16>>:$TXPHDLY_CFG1,
    APIntAttr<I<16>>:$TXPH_CFG,
    APIntAttr<I<16>>:$TXPH_CFG2,
    APIntAttr<I<5>>:$TXPH_MONITOR_SEL,
    APIntAttr<I<2>>:$TXPI_CFG0,
    APIntAttr<I<2>>:$TXPI_CFG1,
    APIntAttr<I<2>>:$TXPI_CFG2,
    APIntAttr<I<1>>:$TXPI_CFG3,
    APIntAttr<I<1>>:$TXPI_CFG4,
    APIntAttr<I<3>>:$TXPI_CFG5,
    APIntAttr<I<1>>:$TXPI_GRAY_SEL,
    APIntAttr<I<1>>:$TXPI_INVSTROBE_SEL,
    APIntAttr<I<1>>:$TXPI_LPM,
    StrAttr:$TXPI_PPMCLK_SEL,
    APIntAttr<I<8>>:$TXPI_PPM_CFG,
    APIntAttr<I<16>>:$TXPI_RSV0,
    APIntAttr<I<3>>:$TXPI_SYNFREQ_PPM,
    APIntAttr<I<1>>:$TXPI_VREFSEL,
    APIntAttr<I<5>>:$TXPMARESET_TIME,
    APIntAttr<I<1>>:$TXSYNC_MULTILANE,
    APIntAttr<I<1>>:$TXSYNC_OVRD,
    APIntAttr<I<1>>:$TXSYNC_SKIP_DA,
    SI64Attr:$TX_CLK25_DIV,
    APIntAttr<I<1>>:$TX_CLKMUX_EN,
    APIntAttr<I<1>>:$TX_CLKREG_PDB,
    APIntAttr<I<3>>:$TX_CLKREG_SET,
    SI64Attr:$TX_DATA_WIDTH,
    APIntAttr<I<6>>:$TX_DCD_CFG,
    APIntAttr<I<1>>:$TX_DCD_EN,
    APIntAttr<I<6>>:$TX_DEEMPH0,
    APIntAttr<I<6>>:$TX_DEEMPH1,
    APIntAttr<I<5>>:$TX_DIVRESET_TIME,
    StrAttr:$TX_DRIVE_MODE,
    SI64Attr:$TX_DRVMUX_CTRL,
    APIntAttr<I<3>>:$TX_EIDLE_ASSERT_DELAY,
    APIntAttr<I<3>>:$TX_EIDLE_DEASSERT_DELAY,
    APIntAttr<I<1>>:$TX_EML_PHI_TUNE,
    APIntAttr<I<1>>:$TX_FABINT_USRCLK_FLOP,
    APIntAttr<I<1>>:$TX_FIFO_BYP_EN,
    APIntAttr<I<1>>:$TX_IDLE_DATA_ZERO,
    SI64Attr:$TX_INT_DATAWIDTH,
    StrAttr:$TX_LOOPBACK_DRIVE_HIZ,
    APIntAttr<I<1>>:$TX_MAINCURSOR_SEL,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_0,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_1,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_2,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_3,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_4,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_0,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_1,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_2,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_3,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_4,
    APIntAttr<I<3>>:$TX_MODE_SEL,
    APIntAttr<I<16>>:$TX_PHICAL_CFG0,
    APIntAttr<I<16>>:$TX_PHICAL_CFG1,
    APIntAttr<I<16>>:$TX_PHICAL_CFG2,
    SI64Attr:$TX_PI_BIASSET,
    APIntAttr<I<16>>:$TX_PI_CFG0,
    APIntAttr<I<16>>:$TX_PI_CFG1,
    APIntAttr<I<1>>:$TX_PI_DIV2_MODE_B,
    APIntAttr<I<1>>:$TX_PI_SEL_QPLL0,
    APIntAttr<I<1>>:$TX_PI_SEL_QPLL1,
    APIntAttr<I<1>>:$TX_PMADATA_OPT,
    APIntAttr<I<1>>:$TX_PMA_POWER_SAVE,
    SI64Attr:$TX_PREDRV_CTRL,
    StrAttr:$TX_PROGCLK_SEL,
    StrAttr:$TX_PROGDIV_CFG,
    APIntAttr<I<16>>:$TX_PROGDIV_RATE,
    APIntAttr<I<14>>:$TX_RXDETECT_CFG,
    SI64Attr:$TX_RXDETECT_REF,
    APIntAttr<I<3>>:$TX_SAMPLE_PERIOD,
    APIntAttr<I<1>>:$TX_SARC_LPBK_ENB,
    StrAttr:$TX_XCLK_SEL,
    APIntAttr<I<1>>:$USE_PCS_CLK_PHASE_SEL
  );

  let results = (outs
    I<3>:$BUFGTCE,
    I<3>:$BUFGTCEMASK,
    I<9>:$BUFGTDIV,
    I<3>:$BUFGTRESET,
    I<3>:$BUFGTRSTMASK,
    I<1>:$CPLLFBCLKLOST,
    I<1>:$CPLLLOCK,
    I<1>:$CPLLREFCLKLOST,
    I<17>:$DMONITOROUT,
    I<16>:$DRPDO,
    I<1>:$DRPRDY,
    I<1>:$EYESCANDATAERROR,
    I<1>:$GTPOWERGOOD,
    I<1>:$GTREFCLKMONITOR,
    I<1>:$GTYTXN,
    I<1>:$GTYTXP,
    I<1>:$PCIERATEGEN3,
    I<1>:$PCIERATEIDLE,
    I<2>:$PCIERATEQPLLPD,
    I<2>:$PCIERATEQPLLRESET,
    I<1>:$PCIESYNCTXSYNCDONE,
    I<1>:$PCIEUSERGEN3RDY,
    I<1>:$PCIEUSERPHYSTATUSRST,
    I<1>:$PCIEUSERRATESTART,
    I<16>:$PCSRSVDOUT,
    I<1>:$PHYSTATUS,
    I<8>:$PINRSRVDAS,
    I<1>:$RESETEXCEPTION,
    I<3>:$RXBUFSTATUS,
    I<1>:$RXBYTEISALIGNED,
    I<1>:$RXBYTEREALIGN,
    I<1>:$RXCDRLOCK,
    I<1>:$RXCDRPHDONE,
    I<1>:$RXCHANBONDSEQ,
    I<1>:$RXCHANISALIGNED,
    I<1>:$RXCHANREALIGN,
    I<5>:$RXCHBONDO,
    I<1>:$RXCKCALDONE,
    I<2>:$RXCLKCORCNT,
    I<1>:$RXCOMINITDET,
    I<1>:$RXCOMMADET,
    I<1>:$RXCOMSASDET,
    I<1>:$RXCOMWAKEDET,
    I<16>:$RXCTRL0,
    I<16>:$RXCTRL1,
    I<8>:$RXCTRL2,
    I<8>:$RXCTRL3,
    I<128>:$RXDATA,
    I<8>:$RXDATAEXTENDRSVD,
    I<2>:$RXDATAVALID,
    I<1>:$RXDLYSRESETDONE,
    I<1>:$RXELECIDLE,
    I<6>:$RXHEADER,
    I<2>:$RXHEADERVALID,
    I<7>:$RXMONITOROUT,
    I<1>:$RXOSINTDONE,
    I<1>:$RXOSINTSTARTED,
    I<1>:$RXOSINTSTROBEDONE,
    I<1>:$RXOSINTSTROBESTARTED,
    I<1>:$RXOUTCLK,
    I<1>:$RXOUTCLKFABRIC,
    I<1>:$RXOUTCLKPCS,
    I<1>:$RXPHALIGNDONE,
    I<1>:$RXPHALIGNERR,
    I<1>:$RXPMARESETDONE,
    I<1>:$RXPRBSERR,
    I<1>:$RXPRBSLOCKED,
    I<1>:$RXPRGDIVRESETDONE,
    I<1>:$RXRATEDONE,
    I<1>:$RXRECCLKOUT,
    I<1>:$RXRESETDONE,
    I<1>:$RXSLIDERDY,
    I<1>:$RXSLIPDONE,
    I<1>:$RXSLIPOUTCLKRDY,
    I<1>:$RXSLIPPMARDY,
    I<2>:$RXSTARTOFSEQ,
    I<3>:$RXSTATUS,
    I<1>:$RXSYNCDONE,
    I<1>:$RXSYNCOUT,
    I<1>:$RXVALID,
    I<2>:$TXBUFSTATUS,
    I<1>:$TXCOMFINISH,
    I<1>:$TXDCCDONE,
    I<1>:$TXDLYSRESETDONE,
    I<1>:$TXOUTCLK,
    I<1>:$TXOUTCLKFABRIC,
    I<1>:$TXOUTCLKPCS,
    I<1>:$TXPHALIGNDONE,
    I<1>:$TXPHINITDONE,
    I<1>:$TXPMARESETDONE,
    I<1>:$TXPRGDIVRESETDONE,
    I<1>:$TXRATEDONE,
    I<1>:$TXRESETDONE,
    I<1>:$TXSYNCDONE,
    I<1>:$TXSYNCOUT
  );
}

def GTYE3uCOMMON : XilinxPrimitiveOp<"GTYE3_COMMON", []> {
  let summary = "GTYE3_COMMON Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$BGBYPASSB,
    I<1>:$BGMONITORENB,
    I<1>:$BGPDB,
    I<5>:$BGRCALOVRD,
    I<1>:$BGRCALOVRDENB,
    I<10>:$DRPADDR,
    I<1>:$DRPCLK,
    I<16>:$DRPDI,
    I<1>:$DRPEN,
    I<1>:$DRPWE,
    I<1>:$GTGREFCLK0,
    I<1>:$GTGREFCLK1,
    I<1>:$GTNORTHREFCLK00,
    I<1>:$GTNORTHREFCLK01,
    I<1>:$GTNORTHREFCLK10,
    I<1>:$GTNORTHREFCLK11,
    I<1>:$GTREFCLK00,
    I<1>:$GTREFCLK01,
    I<1>:$GTREFCLK10,
    I<1>:$GTREFCLK11,
    I<1>:$GTSOUTHREFCLK00,
    I<1>:$GTSOUTHREFCLK01,
    I<1>:$GTSOUTHREFCLK10,
    I<1>:$GTSOUTHREFCLK11,
    I<8>:$PMARSVD0,
    I<8>:$PMARSVD1,
    I<1>:$QPLL0CLKRSVD0,
    I<1>:$QPLL0LOCKDETCLK,
    I<1>:$QPLL0LOCKEN,
    I<1>:$QPLL0PD,
    I<3>:$QPLL0REFCLKSEL,
    I<1>:$QPLL0RESET,
    I<1>:$QPLL1CLKRSVD0,
    I<1>:$QPLL1LOCKDETCLK,
    I<1>:$QPLL1LOCKEN,
    I<1>:$QPLL1PD,
    I<3>:$QPLL1REFCLKSEL,
    I<1>:$QPLL1RESET,
    I<8>:$QPLLRSVD1,
    I<5>:$QPLLRSVD2,
    I<5>:$QPLLRSVD3,
    I<8>:$QPLLRSVD4,
    I<1>:$RCALENB,
    I<25>:$SDM0DATA,
    I<1>:$SDM0RESET,
    I<2>:$SDM0WIDTH,
    I<25>:$SDM1DATA,
    I<1>:$SDM1RESET,
    I<2>:$SDM1WIDTH,

    // GTYE3_COMMON parameters follows
    APIntAttr<I<16>>:$A_SDM1DATA1_0,
    APIntAttr<I<9>>:$A_SDM1DATA1_1,
    APIntAttr<I<16>>:$BIAS_CFG0,
    APIntAttr<I<16>>:$BIAS_CFG1,
    APIntAttr<I<16>>:$BIAS_CFG2,
    APIntAttr<I<16>>:$BIAS_CFG3,
    APIntAttr<I<16>>:$BIAS_CFG4,
    APIntAttr<I<10>>:$BIAS_CFG_RSVD,
    APIntAttr<I<16>>:$COMMON_CFG0,
    APIntAttr<I<16>>:$COMMON_CFG1,
    APIntAttr<I<16>>:$POR_CFG,
    APIntAttr<I<16>>:$PPF0_CFG,
    APIntAttr<I<16>>:$PPF1_CFG,
    StrAttr:$QPLL0CLKOUT_RATE,
    APIntAttr<I<16>>:$QPLL0_CFG0,
    APIntAttr<I<16>>:$QPLL0_CFG1,
    APIntAttr<I<16>>:$QPLL0_CFG1_G3,
    APIntAttr<I<16>>:$QPLL0_CFG2,
    APIntAttr<I<16>>:$QPLL0_CFG2_G3,
    APIntAttr<I<16>>:$QPLL0_CFG3,
    APIntAttr<I<16>>:$QPLL0_CFG4,
    APIntAttr<I<10>>:$QPLL0_CP,
    APIntAttr<I<10>>:$QPLL0_CP_G3,
    SI64Attr:$QPLL0_FBDIV,
    SI64Attr:$QPLL0_FBDIV_G3,
    APIntAttr<I<16>>:$QPLL0_INIT_CFG0,
    APIntAttr<I<8>>:$QPLL0_INIT_CFG1,
    APIntAttr<I<16>>:$QPLL0_LOCK_CFG,
    APIntAttr<I<16>>:$QPLL0_LOCK_CFG_G3,
    APIntAttr<I<10>>:$QPLL0_LPF,
    APIntAttr<I<10>>:$QPLL0_LPF_G3,
    SI64Attr:$QPLL0_REFCLK_DIV,
    APIntAttr<I<16>>:$QPLL0_SDM_CFG0,
    APIntAttr<I<16>>:$QPLL0_SDM_CFG1,
    APIntAttr<I<16>>:$QPLL0_SDM_CFG2,
    StrAttr:$QPLL1CLKOUT_RATE,
    APIntAttr<I<16>>:$QPLL1_CFG0,
    APIntAttr<I<16>>:$QPLL1_CFG1,
    APIntAttr<I<16>>:$QPLL1_CFG1_G3,
    APIntAttr<I<16>>:$QPLL1_CFG2,
    APIntAttr<I<16>>:$QPLL1_CFG2_G3,
    APIntAttr<I<16>>:$QPLL1_CFG3,
    APIntAttr<I<16>>:$QPLL1_CFG4,
    APIntAttr<I<10>>:$QPLL1_CP,
    APIntAttr<I<10>>:$QPLL1_CP_G3,
    SI64Attr:$QPLL1_FBDIV,
    SI64Attr:$QPLL1_FBDIV_G3,
    APIntAttr<I<16>>:$QPLL1_INIT_CFG0,
    APIntAttr<I<8>>:$QPLL1_INIT_CFG1,
    APIntAttr<I<16>>:$QPLL1_LOCK_CFG,
    APIntAttr<I<16>>:$QPLL1_LOCK_CFG_G3,
    APIntAttr<I<10>>:$QPLL1_LPF,
    APIntAttr<I<10>>:$QPLL1_LPF_G3,
    SI64Attr:$QPLL1_REFCLK_DIV,
    APIntAttr<I<16>>:$QPLL1_SDM_CFG0,
    APIntAttr<I<16>>:$QPLL1_SDM_CFG1,
    APIntAttr<I<16>>:$QPLL1_SDM_CFG2,
    APIntAttr<I<16>>:$RSVD_ATTR0,
    APIntAttr<I<16>>:$RSVD_ATTR1,
    APIntAttr<I<16>>:$RSVD_ATTR2,
    APIntAttr<I<16>>:$RSVD_ATTR3,
    APIntAttr<I<2>>:$RXRECCLKOUT0_SEL,
    APIntAttr<I<2>>:$RXRECCLKOUT1_SEL,
    APIntAttr<I<1>>:$SARC_EN,
    APIntAttr<I<1>>:$SARC_SEL,
    APIntAttr<I<16>>:$SDM0INITSEED0_0,
    APIntAttr<I<9>>:$SDM0INITSEED0_1,
    APIntAttr<I<16>>:$SDM1INITSEED0_0,
    APIntAttr<I<9>>:$SDM1INITSEED0_1,
    StrAttr:$SIM_MODE,
    StrAttr:$SIM_RESET_SPEEDUP,
    SI64Attr:$SIM_VERSION
  );

  let results = (outs
    I<16>:$DRPDO,
    I<1>:$DRPRDY,
    I<8>:$PMARSVDOUT0,
    I<8>:$PMARSVDOUT1,
    I<1>:$QPLL0FBCLKLOST,
    I<1>:$QPLL0LOCK,
    I<1>:$QPLL0OUTCLK,
    I<1>:$QPLL0OUTREFCLK,
    I<1>:$QPLL0REFCLKLOST,
    I<1>:$QPLL1FBCLKLOST,
    I<1>:$QPLL1LOCK,
    I<1>:$QPLL1OUTCLK,
    I<1>:$QPLL1OUTREFCLK,
    I<1>:$QPLL1REFCLKLOST,
    I<8>:$QPLLDMONITOR0,
    I<8>:$QPLLDMONITOR1,
    I<1>:$REFCLKOUTMONITOR0,
    I<1>:$REFCLKOUTMONITOR1,
    I<2>:$RXRECCLK0_SEL,
    I<2>:$RXRECCLK1_SEL,
    I<4>:$SDM0FINALOUT,
    I<15>:$SDM0TESTDATA,
    I<4>:$SDM1FINALOUT,
    I<15>:$SDM1TESTDATA
  );
}

def GTYE4uCHANNEL : XilinxPrimitiveOp<"GTYE4_CHANNEL", []> {
  let summary = "GTYE4_CHANNEL Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CDRSTEPDIR,
    I<1>:$CDRSTEPSQ,
    I<1>:$CDRSTEPSX,
    I<1>:$CFGRESET,
    I<1>:$CLKRSVD0,
    I<1>:$CLKRSVD1,
    I<1>:$CPLLFREQLOCK,
    I<1>:$CPLLLOCKDETCLK,
    I<1>:$CPLLLOCKEN,
    I<1>:$CPLLPD,
    I<3>:$CPLLREFCLKSEL,
    I<1>:$CPLLRESET,
    I<1>:$DMONFIFORESET,
    I<1>:$DMONITORCLK,
    I<10>:$DRPADDR,
    I<1>:$DRPCLK,
    I<16>:$DRPDI,
    I<1>:$DRPEN,
    I<1>:$DRPRST,
    I<1>:$DRPWE,
    I<1>:$EYESCANRESET,
    I<1>:$EYESCANTRIGGER,
    I<1>:$FREQOS,
    I<1>:$GTGREFCLK,
    I<1>:$GTNORTHREFCLK0,
    I<1>:$GTNORTHREFCLK1,
    I<1>:$GTREFCLK0,
    I<1>:$GTREFCLK1,
    I<16>:$GTRSVD,
    I<1>:$GTRXRESET,
    I<1>:$GTRXRESETSEL,
    I<1>:$GTSOUTHREFCLK0,
    I<1>:$GTSOUTHREFCLK1,
    I<1>:$GTTXRESET,
    I<1>:$GTTXRESETSEL,
    I<1>:$GTYRXN,
    I<1>:$GTYRXP,
    I<1>:$INCPCTRL,
    I<3>:$LOOPBACK,
    I<1>:$PCIEEQRXEQADAPTDONE,
    I<1>:$PCIERSTIDLE,
    I<1>:$PCIERSTTXSYNCSTART,
    I<1>:$PCIEUSERRATEDONE,
    I<16>:$PCSRSVDIN,
    I<1>:$QPLL0CLK,
    I<1>:$QPLL0FREQLOCK,
    I<1>:$QPLL0REFCLK,
    I<1>:$QPLL1CLK,
    I<1>:$QPLL1FREQLOCK,
    I<1>:$QPLL1REFCLK,
    I<1>:$RESETOVRD,
    I<1>:$RX8B10BEN,
    I<1>:$RXAFECFOKEN,
    I<1>:$RXBUFRESET,
    I<1>:$RXCDRFREQRESET,
    I<1>:$RXCDRHOLD,
    I<1>:$RXCDROVRDEN,
    I<1>:$RXCDRRESET,
    I<1>:$RXCHBONDEN,
    I<5>:$RXCHBONDI,
    I<3>:$RXCHBONDLEVEL,
    I<1>:$RXCHBONDMASTER,
    I<1>:$RXCHBONDSLAVE,
    I<1>:$RXCKCALRESET,
    I<7>:$RXCKCALSTART,
    I<1>:$RXCOMMADETEN,
    I<1>:$RXDFEAGCHOLD,
    I<1>:$RXDFEAGCOVRDEN,
    I<4>:$RXDFECFOKFCNUM,
    I<1>:$RXDFECFOKFEN,
    I<1>:$RXDFECFOKFPULSE,
    I<1>:$RXDFECFOKHOLD,
    I<1>:$RXDFECFOKOVREN,
    I<1>:$RXDFEKHHOLD,
    I<1>:$RXDFEKHOVRDEN,
    I<1>:$RXDFELFHOLD,
    I<1>:$RXDFELFOVRDEN,
    I<1>:$RXDFELPMRESET,
    I<1>:$RXDFETAP10HOLD,
    I<1>:$RXDFETAP10OVRDEN,
    I<1>:$RXDFETAP11HOLD,
    I<1>:$RXDFETAP11OVRDEN,
    I<1>:$RXDFETAP12HOLD,
    I<1>:$RXDFETAP12OVRDEN,
    I<1>:$RXDFETAP13HOLD,
    I<1>:$RXDFETAP13OVRDEN,
    I<1>:$RXDFETAP14HOLD,
    I<1>:$RXDFETAP14OVRDEN,
    I<1>:$RXDFETAP15HOLD,
    I<1>:$RXDFETAP15OVRDEN,
    I<1>:$RXDFETAP2HOLD,
    I<1>:$RXDFETAP2OVRDEN,
    I<1>:$RXDFETAP3HOLD,
    I<1>:$RXDFETAP3OVRDEN,
    I<1>:$RXDFETAP4HOLD,
    I<1>:$RXDFETAP4OVRDEN,
    I<1>:$RXDFETAP5HOLD,
    I<1>:$RXDFETAP5OVRDEN,
    I<1>:$RXDFETAP6HOLD,
    I<1>:$RXDFETAP6OVRDEN,
    I<1>:$RXDFETAP7HOLD,
    I<1>:$RXDFETAP7OVRDEN,
    I<1>:$RXDFETAP8HOLD,
    I<1>:$RXDFETAP8OVRDEN,
    I<1>:$RXDFETAP9HOLD,
    I<1>:$RXDFETAP9OVRDEN,
    I<1>:$RXDFEUTHOLD,
    I<1>:$RXDFEUTOVRDEN,
    I<1>:$RXDFEVPHOLD,
    I<1>:$RXDFEVPOVRDEN,
    I<1>:$RXDFEXYDEN,
    I<1>:$RXDLYBYPASS,
    I<1>:$RXDLYEN,
    I<1>:$RXDLYOVRDEN,
    I<1>:$RXDLYSRESET,
    I<2>:$RXELECIDLEMODE,
    I<1>:$RXEQTRAINING,
    I<1>:$RXGEARBOXSLIP,
    I<1>:$RXLATCLK,
    I<1>:$RXLPMEN,
    I<1>:$RXLPMGCHOLD,
    I<1>:$RXLPMGCOVRDEN,
    I<1>:$RXLPMHFHOLD,
    I<1>:$RXLPMHFOVRDEN,
    I<1>:$RXLPMLFHOLD,
    I<1>:$RXLPMLFKLOVRDEN,
    I<1>:$RXLPMOSHOLD,
    I<1>:$RXLPMOSOVRDEN,
    I<1>:$RXMCOMMAALIGNEN,
    I<2>:$RXMONITORSEL,
    I<1>:$RXOOBRESET,
    I<1>:$RXOSCALRESET,
    I<1>:$RXOSHOLD,
    I<1>:$RXOSOVRDEN,
    I<3>:$RXOUTCLKSEL,
    I<1>:$RXPCOMMAALIGNEN,
    I<1>:$RXPCSRESET,
    I<2>:$RXPD,
    I<1>:$RXPHALIGN,
    I<1>:$RXPHALIGNEN,
    I<1>:$RXPHDLYPD,
    I<1>:$RXPHDLYRESET,
    I<2>:$RXPLLCLKSEL,
    I<1>:$RXPMARESET,
    I<1>:$RXPOLARITY,
    I<1>:$RXPRBSCNTRESET,
    I<4>:$RXPRBSSEL,
    I<1>:$RXPROGDIVRESET,
    I<3>:$RXRATE,
    I<1>:$RXRATEMODE,
    I<1>:$RXSLIDE,
    I<1>:$RXSLIPOUTCLK,
    I<1>:$RXSLIPPMA,
    I<1>:$RXSYNCALLIN,
    I<1>:$RXSYNCIN,
    I<1>:$RXSYNCMODE,
    I<2>:$RXSYSCLKSEL,
    I<1>:$RXTERMINATION,
    I<1>:$RXUSERRDY,
    I<1>:$RXUSRCLK,
    I<1>:$RXUSRCLK2,
    I<1>:$SIGVALIDCLK,
    I<20>:$TSTIN,
    I<8>:$TX8B10BBYPASS,
    I<1>:$TX8B10BEN,
    I<1>:$TXCOMINIT,
    I<1>:$TXCOMSAS,
    I<1>:$TXCOMWAKE,
    I<16>:$TXCTRL0,
    I<16>:$TXCTRL1,
    I<8>:$TXCTRL2,
    I<128>:$TXDATA,
    I<8>:$TXDATAEXTENDRSVD,
    I<1>:$TXDCCFORCESTART,
    I<1>:$TXDCCRESET,
    I<2>:$TXDEEMPH,
    I<1>:$TXDETECTRX,
    I<5>:$TXDIFFCTRL,
    I<1>:$TXDLYBYPASS,
    I<1>:$TXDLYEN,
    I<1>:$TXDLYHOLD,
    I<1>:$TXDLYOVRDEN,
    I<1>:$TXDLYSRESET,
    I<1>:$TXDLYUPDOWN,
    I<1>:$TXELECIDLE,
    I<6>:$TXHEADER,
    I<1>:$TXINHIBIT,
    I<1>:$TXLATCLK,
    I<1>:$TXLFPSTRESET,
    I<1>:$TXLFPSU2LPEXIT,
    I<1>:$TXLFPSU3WAKE,
    I<7>:$TXMAINCURSOR,
    I<3>:$TXMARGIN,
    I<1>:$TXMUXDCDEXHOLD,
    I<1>:$TXMUXDCDORWREN,
    I<1>:$TXONESZEROS,
    I<3>:$TXOUTCLKSEL,
    I<1>:$TXPCSRESET,
    I<2>:$TXPD,
    I<1>:$TXPDELECIDLEMODE,
    I<1>:$TXPHALIGN,
    I<1>:$TXPHALIGNEN,
    I<1>:$TXPHDLYPD,
    I<1>:$TXPHDLYRESET,
    I<1>:$TXPHDLYTSTCLK,
    I<1>:$TXPHINIT,
    I<1>:$TXPHOVRDEN,
    I<1>:$TXPIPPMEN,
    I<1>:$TXPIPPMOVRDEN,
    I<1>:$TXPIPPMPD,
    I<1>:$TXPIPPMSEL,
    I<5>:$TXPIPPMSTEPSIZE,
    I<1>:$TXPISOPD,
    I<2>:$TXPLLCLKSEL,
    I<1>:$TXPMARESET,
    I<1>:$TXPOLARITY,
    I<5>:$TXPOSTCURSOR,
    I<1>:$TXPRBSFORCEERR,
    I<4>:$TXPRBSSEL,
    I<5>:$TXPRECURSOR,
    I<1>:$TXPROGDIVRESET,
    I<3>:$TXRATE,
    I<1>:$TXRATEMODE,
    I<7>:$TXSEQUENCE,
    I<1>:$TXSWING,
    I<1>:$TXSYNCALLIN,
    I<1>:$TXSYNCIN,
    I<1>:$TXSYNCMODE,
    I<2>:$TXSYSCLKSEL,
    I<1>:$TXUSERRDY,
    I<1>:$TXUSRCLK,
    I<1>:$TXUSRCLK2,

    // GTYE4_CHANNEL parameters follows
    APIntAttr<I<1>>:$ACJTAG_DEBUG_MODE,
    APIntAttr<I<1>>:$ACJTAG_MODE,
    APIntAttr<I<1>>:$ACJTAG_RESET,
    APIntAttr<I<16>>:$ADAPT_CFG0,
    APIntAttr<I<16>>:$ADAPT_CFG1,
    APIntAttr<I<16>>:$ADAPT_CFG2,
    StrAttr:$ALIGN_COMMA_DOUBLE,
    APIntAttr<I<10>>:$ALIGN_COMMA_ENABLE,
    SI64Attr:$ALIGN_COMMA_WORD,
    StrAttr:$ALIGN_MCOMMA_DET,
    APIntAttr<I<10>>:$ALIGN_MCOMMA_VALUE,
    StrAttr:$ALIGN_PCOMMA_DET,
    APIntAttr<I<10>>:$ALIGN_PCOMMA_VALUE,
    APIntAttr<I<1>>:$A_RXOSCALRESET,
    APIntAttr<I<1>>:$A_RXPROGDIVRESET,
    APIntAttr<I<1>>:$A_RXTERMINATION,
    APIntAttr<I<5>>:$A_TXDIFFCTRL,
    APIntAttr<I<1>>:$A_TXPROGDIVRESET,
    StrAttr:$CBCC_DATA_SOURCE_SEL,
    APIntAttr<I<1>>:$CDR_SWAP_MODE_EN,
    APIntAttr<I<1>>:$CFOK_PWRSVE_EN,
    StrAttr:$CHAN_BOND_KEEP_ALIGN,
    SI64Attr:$CHAN_BOND_MAX_SKEW,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_1,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_2,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_3,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_1_4,
    APIntAttr<I<4>>:$CHAN_BOND_SEQ_1_ENABLE,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_1,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_2,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_3,
    APIntAttr<I<10>>:$CHAN_BOND_SEQ_2_4,
    APIntAttr<I<4>>:$CHAN_BOND_SEQ_2_ENABLE,
    StrAttr:$CHAN_BOND_SEQ_2_USE,
    SI64Attr:$CHAN_BOND_SEQ_LEN,
    APIntAttr<I<16>>:$CH_HSPMUX,
    APIntAttr<I<16>>:$CKCAL1_CFG_0,
    APIntAttr<I<16>>:$CKCAL1_CFG_1,
    APIntAttr<I<16>>:$CKCAL1_CFG_2,
    APIntAttr<I<16>>:$CKCAL1_CFG_3,
    APIntAttr<I<16>>:$CKCAL2_CFG_0,
    APIntAttr<I<16>>:$CKCAL2_CFG_1,
    APIntAttr<I<16>>:$CKCAL2_CFG_2,
    APIntAttr<I<16>>:$CKCAL2_CFG_3,
    APIntAttr<I<16>>:$CKCAL2_CFG_4,
    StrAttr:$CLK_CORRECT_USE,
    StrAttr:$CLK_COR_KEEP_IDLE,
    SI64Attr:$CLK_COR_MAX_LAT,
    SI64Attr:$CLK_COR_MIN_LAT,
    StrAttr:$CLK_COR_PRECEDENCE,
    SI64Attr:$CLK_COR_REPEAT_WAIT,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_1,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_2,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_3,
    APIntAttr<I<10>>:$CLK_COR_SEQ_1_4,
    APIntAttr<I<4>>:$CLK_COR_SEQ_1_ENABLE,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_1,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_2,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_3,
    APIntAttr<I<10>>:$CLK_COR_SEQ_2_4,
    APIntAttr<I<4>>:$CLK_COR_SEQ_2_ENABLE,
    StrAttr:$CLK_COR_SEQ_2_USE,
    SI64Attr:$CLK_COR_SEQ_LEN,
    APIntAttr<I<16>>:$CPLL_CFG0,
    APIntAttr<I<16>>:$CPLL_CFG1,
    APIntAttr<I<16>>:$CPLL_CFG2,
    APIntAttr<I<16>>:$CPLL_CFG3,
    SI64Attr:$CPLL_FBDIV,
    SI64Attr:$CPLL_FBDIV_45,
    APIntAttr<I<16>>:$CPLL_INIT_CFG0,
    APIntAttr<I<16>>:$CPLL_LOCK_CFG,
    SI64Attr:$CPLL_REFCLK_DIV,
    APIntAttr<I<3>>:$CTLE3_OCAP_EXT_CTRL,
    APIntAttr<I<1>>:$CTLE3_OCAP_EXT_EN,
    APIntAttr<I<2>>:$DDI_CTRL,
    SI64Attr:$DDI_REALIGN_WAIT,
    StrAttr:$DEC_MCOMMA_DETECT,
    StrAttr:$DEC_PCOMMA_DETECT,
    StrAttr:$DEC_VALID_COMMA_ONLY,
    APIntAttr<I<1>>:$DELAY_ELEC,
    APIntAttr<I<10>>:$DMONITOR_CFG0,
    APIntAttr<I<8>>:$DMONITOR_CFG1,
    APIntAttr<I<1>>:$ES_CLK_PHASE_SEL,
    APIntAttr<I<6>>:$ES_CONTROL,
    StrAttr:$ES_ERRDET_EN,
    StrAttr:$ES_EYE_SCAN_EN,
    APIntAttr<I<12>>:$ES_HORZ_OFFSET,
    APIntAttr<I<5>>:$ES_PRESCALE,
    APIntAttr<I<16>>:$ES_QUALIFIER0,
    APIntAttr<I<16>>:$ES_QUALIFIER1,
    APIntAttr<I<16>>:$ES_QUALIFIER2,
    APIntAttr<I<16>>:$ES_QUALIFIER3,
    APIntAttr<I<16>>:$ES_QUALIFIER4,
    APIntAttr<I<16>>:$ES_QUALIFIER5,
    APIntAttr<I<16>>:$ES_QUALIFIER6,
    APIntAttr<I<16>>:$ES_QUALIFIER7,
    APIntAttr<I<16>>:$ES_QUALIFIER8,
    APIntAttr<I<16>>:$ES_QUALIFIER9,
    APIntAttr<I<16>>:$ES_QUAL_MASK0,
    APIntAttr<I<16>>:$ES_QUAL_MASK1,
    APIntAttr<I<16>>:$ES_QUAL_MASK2,
    APIntAttr<I<16>>:$ES_QUAL_MASK3,
    APIntAttr<I<16>>:$ES_QUAL_MASK4,
    APIntAttr<I<16>>:$ES_QUAL_MASK5,
    APIntAttr<I<16>>:$ES_QUAL_MASK6,
    APIntAttr<I<16>>:$ES_QUAL_MASK7,
    APIntAttr<I<16>>:$ES_QUAL_MASK8,
    APIntAttr<I<16>>:$ES_QUAL_MASK9,
    APIntAttr<I<16>>:$ES_SDATA_MASK0,
    APIntAttr<I<16>>:$ES_SDATA_MASK1,
    APIntAttr<I<16>>:$ES_SDATA_MASK2,
    APIntAttr<I<16>>:$ES_SDATA_MASK3,
    APIntAttr<I<16>>:$ES_SDATA_MASK4,
    APIntAttr<I<16>>:$ES_SDATA_MASK5,
    APIntAttr<I<16>>:$ES_SDATA_MASK6,
    APIntAttr<I<16>>:$ES_SDATA_MASK7,
    APIntAttr<I<16>>:$ES_SDATA_MASK8,
    APIntAttr<I<16>>:$ES_SDATA_MASK9,
    SI64Attr:$EYESCAN_VP_RANGE,
    APIntAttr<I<1>>:$EYE_SCAN_SWAP_EN,
    APIntAttr<I<4>>:$FTS_DESKEW_SEQ_ENABLE,
    APIntAttr<I<4>>:$FTS_LANE_DESKEW_CFG,
    StrAttr:$FTS_LANE_DESKEW_EN,
    APIntAttr<I<5>>:$GEARBOX_MODE,
    APIntAttr<I<1>>:$ISCAN_CK_PH_SEL2,
    APIntAttr<I<1>>:$LOCAL_MASTER,
    SI64Attr:$LPBK_BIAS_CTRL,
    APIntAttr<I<1>>:$LPBK_EN_RCAL_B,
    APIntAttr<I<4>>:$LPBK_EXT_RCAL,
    SI64Attr:$LPBK_IND_CTRL0,
    SI64Attr:$LPBK_IND_CTRL1,
    SI64Attr:$LPBK_IND_CTRL2,
    SI64Attr:$LPBK_RG_CTRL,
    APIntAttr<I<2>>:$OOBDIVCTL,
    APIntAttr<I<1>>:$OOB_PWRUP,
    StrAttr:$PCI3_AUTO_REALIGN,
    APIntAttr<I<1>>:$PCI3_PIPE_RX_ELECIDLE,
    APIntAttr<I<2>>:$PCI3_RX_ASYNC_EBUF_BYPASS,
    APIntAttr<I<1>>:$PCI3_RX_ELECIDLE_EI2_ENABLE,
    APIntAttr<I<6>>:$PCI3_RX_ELECIDLE_H2L_COUNT,
    APIntAttr<I<3>>:$PCI3_RX_ELECIDLE_H2L_DISABLE,
    APIntAttr<I<6>>:$PCI3_RX_ELECIDLE_HI_COUNT,
    APIntAttr<I<1>>:$PCI3_RX_ELECIDLE_LP4_DISABLE,
    APIntAttr<I<1>>:$PCI3_RX_FIFO_DISABLE,
    APIntAttr<I<5>>:$PCIE3_CLK_COR_EMPTY_THRSH,
    APIntAttr<I<6>>:$PCIE3_CLK_COR_FULL_THRSH,
    APIntAttr<I<5>>:$PCIE3_CLK_COR_MAX_LAT,
    APIntAttr<I<5>>:$PCIE3_CLK_COR_MIN_LAT,
    APIntAttr<I<6>>:$PCIE3_CLK_COR_THRSH_TIMER,
    StrAttr:$PCIE_64B_DYN_CLKSW_DIS,
    APIntAttr<I<16>>:$PCIE_BUFG_DIV_CTRL,
    StrAttr:$PCIE_GEN4_64BIT_INT_EN,
    APIntAttr<I<2>>:$PCIE_PLL_SEL_MODE_GEN12,
    APIntAttr<I<2>>:$PCIE_PLL_SEL_MODE_GEN3,
    APIntAttr<I<2>>:$PCIE_PLL_SEL_MODE_GEN4,
    APIntAttr<I<16>>:$PCIE_RXPCS_CFG_GEN3,
    APIntAttr<I<16>>:$PCIE_RXPMA_CFG,
    APIntAttr<I<16>>:$PCIE_TXPCS_CFG_GEN3,
    APIntAttr<I<16>>:$PCIE_TXPMA_CFG,
    StrAttr:$PCS_PCIE_EN,
    APIntAttr<I<16>>:$PCS_RSVD0,
    APIntAttr<I<12>>:$PD_TRANS_TIME_FROM_P2,
    APIntAttr<I<8>>:$PD_TRANS_TIME_NONE_P2,
    APIntAttr<I<8>>:$PD_TRANS_TIME_TO_P2,
    SI64Attr:$PREIQ_FREQ_BST,
    APIntAttr<I<1>>:$RATE_SW_USE_DRP,
    APIntAttr<I<1>>:$RCLK_SIPO_DLY_ENB,
    APIntAttr<I<1>>:$RCLK_SIPO_INV_EN,
    APIntAttr<I<3>>:$RTX_BUF_CML_CTRL,
    APIntAttr<I<2>>:$RTX_BUF_TERM_CTRL,
    APIntAttr<I<5>>:$RXBUFRESET_TIME,
    StrAttr:$RXBUF_ADDR_MODE,
    APIntAttr<I<4>>:$RXBUF_EIDLE_HI_CNT,
    APIntAttr<I<4>>:$RXBUF_EIDLE_LO_CNT,
    StrAttr:$RXBUF_EN,
    StrAttr:$RXBUF_RESET_ON_CB_CHANGE,
    StrAttr:$RXBUF_RESET_ON_COMMAALIGN,
    StrAttr:$RXBUF_RESET_ON_EIDLE,
    StrAttr:$RXBUF_RESET_ON_RATE_CHANGE,
    SI64Attr:$RXBUF_THRESH_OVFLW,
    StrAttr:$RXBUF_THRESH_OVRD,
    SI64Attr:$RXBUF_THRESH_UNDFLW,
    APIntAttr<I<5>>:$RXCDRFREQRESET_TIME,
    APIntAttr<I<5>>:$RXCDRPHRESET_TIME,
    APIntAttr<I<16>>:$RXCDR_CFG0,
    APIntAttr<I<16>>:$RXCDR_CFG0_GEN3,
    APIntAttr<I<16>>:$RXCDR_CFG1,
    APIntAttr<I<16>>:$RXCDR_CFG1_GEN3,
    APIntAttr<I<16>>:$RXCDR_CFG2,
    APIntAttr<I<10>>:$RXCDR_CFG2_GEN2,
    APIntAttr<I<16>>:$RXCDR_CFG2_GEN3,
    APIntAttr<I<16>>:$RXCDR_CFG2_GEN4,
    APIntAttr<I<16>>:$RXCDR_CFG3,
    APIntAttr<I<6>>:$RXCDR_CFG3_GEN2,
    APIntAttr<I<16>>:$RXCDR_CFG3_GEN3,
    APIntAttr<I<16>>:$RXCDR_CFG3_GEN4,
    APIntAttr<I<16>>:$RXCDR_CFG4,
    APIntAttr<I<16>>:$RXCDR_CFG4_GEN3,
    APIntAttr<I<16>>:$RXCDR_CFG5,
    APIntAttr<I<16>>:$RXCDR_CFG5_GEN3,
    APIntAttr<I<1>>:$RXCDR_FR_RESET_ON_EIDLE,
    APIntAttr<I<1>>:$RXCDR_HOLD_DURING_EIDLE,
    APIntAttr<I<16>>:$RXCDR_LOCK_CFG0,
    APIntAttr<I<16>>:$RXCDR_LOCK_CFG1,
    APIntAttr<I<16>>:$RXCDR_LOCK_CFG2,
    APIntAttr<I<16>>:$RXCDR_LOCK_CFG3,
    APIntAttr<I<16>>:$RXCDR_LOCK_CFG4,
    APIntAttr<I<1>>:$RXCDR_PH_RESET_ON_EIDLE,
    APIntAttr<I<16>>:$RXCFOK_CFG0,
    APIntAttr<I<16>>:$RXCFOK_CFG1,
    APIntAttr<I<16>>:$RXCFOK_CFG2,
    APIntAttr<I<16>>:$RXCKCAL1_IQ_LOOP_RST_CFG,
    APIntAttr<I<16>>:$RXCKCAL1_I_LOOP_RST_CFG,
    APIntAttr<I<16>>:$RXCKCAL1_Q_LOOP_RST_CFG,
    APIntAttr<I<16>>:$RXCKCAL2_DX_LOOP_RST_CFG,
    APIntAttr<I<16>>:$RXCKCAL2_D_LOOP_RST_CFG,
    APIntAttr<I<16>>:$RXCKCAL2_S_LOOP_RST_CFG,
    APIntAttr<I<16>>:$RXCKCAL2_X_LOOP_RST_CFG,
    APIntAttr<I<7>>:$RXDFELPMRESET_TIME,
    APIntAttr<I<16>>:$RXDFELPM_KL_CFG0,
    APIntAttr<I<16>>:$RXDFELPM_KL_CFG1,
    APIntAttr<I<16>>:$RXDFELPM_KL_CFG2,
    APIntAttr<I<16>>:$RXDFE_CFG0,
    APIntAttr<I<16>>:$RXDFE_CFG1,
    APIntAttr<I<16>>:$RXDFE_GC_CFG0,
    APIntAttr<I<16>>:$RXDFE_GC_CFG1,
    APIntAttr<I<16>>:$RXDFE_GC_CFG2,
    APIntAttr<I<16>>:$RXDFE_H2_CFG0,
    APIntAttr<I<16>>:$RXDFE_H2_CFG1,
    APIntAttr<I<16>>:$RXDFE_H3_CFG0,
    APIntAttr<I<16>>:$RXDFE_H3_CFG1,
    APIntAttr<I<16>>:$RXDFE_H4_CFG0,
    APIntAttr<I<16>>:$RXDFE_H4_CFG1,
    APIntAttr<I<16>>:$RXDFE_H5_CFG0,
    APIntAttr<I<16>>:$RXDFE_H5_CFG1,
    APIntAttr<I<16>>:$RXDFE_H6_CFG0,
    APIntAttr<I<16>>:$RXDFE_H6_CFG1,
    APIntAttr<I<16>>:$RXDFE_H7_CFG0,
    APIntAttr<I<16>>:$RXDFE_H7_CFG1,
    APIntAttr<I<16>>:$RXDFE_H8_CFG0,
    APIntAttr<I<16>>:$RXDFE_H8_CFG1,
    APIntAttr<I<16>>:$RXDFE_H9_CFG0,
    APIntAttr<I<16>>:$RXDFE_H9_CFG1,
    APIntAttr<I<16>>:$RXDFE_HA_CFG0,
    APIntAttr<I<16>>:$RXDFE_HA_CFG1,
    APIntAttr<I<16>>:$RXDFE_HB_CFG0,
    APIntAttr<I<16>>:$RXDFE_HB_CFG1,
    APIntAttr<I<16>>:$RXDFE_HC_CFG0,
    APIntAttr<I<16>>:$RXDFE_HC_CFG1,
    APIntAttr<I<16>>:$RXDFE_HD_CFG0,
    APIntAttr<I<16>>:$RXDFE_HD_CFG1,
    APIntAttr<I<16>>:$RXDFE_HE_CFG0,
    APIntAttr<I<16>>:$RXDFE_HE_CFG1,
    APIntAttr<I<16>>:$RXDFE_HF_CFG0,
    APIntAttr<I<16>>:$RXDFE_HF_CFG1,
    APIntAttr<I<16>>:$RXDFE_KH_CFG0,
    APIntAttr<I<16>>:$RXDFE_KH_CFG1,
    APIntAttr<I<16>>:$RXDFE_KH_CFG2,
    APIntAttr<I<16>>:$RXDFE_KH_CFG3,
    APIntAttr<I<16>>:$RXDFE_OS_CFG0,
    APIntAttr<I<16>>:$RXDFE_OS_CFG1,
    APIntAttr<I<16>>:$RXDFE_UT_CFG0,
    APIntAttr<I<16>>:$RXDFE_UT_CFG1,
    APIntAttr<I<16>>:$RXDFE_UT_CFG2,
    APIntAttr<I<16>>:$RXDFE_VP_CFG0,
    APIntAttr<I<16>>:$RXDFE_VP_CFG1,
    APIntAttr<I<16>>:$RXDLY_CFG,
    APIntAttr<I<16>>:$RXDLY_LCFG,
    StrAttr:$RXELECIDLE_CFG,
    SI64Attr:$RXGBOX_FIFO_INIT_RD_ADDR,
    StrAttr:$RXGEARBOX_EN,
    APIntAttr<I<5>>:$RXISCANRESET_TIME,
    APIntAttr<I<16>>:$RXLPM_CFG,
    APIntAttr<I<16>>:$RXLPM_GC_CFG,
    APIntAttr<I<16>>:$RXLPM_KH_CFG0,
    APIntAttr<I<16>>:$RXLPM_KH_CFG1,
    APIntAttr<I<16>>:$RXLPM_OS_CFG0,
    APIntAttr<I<16>>:$RXLPM_OS_CFG1,
    APIntAttr<I<9>>:$RXOOB_CFG,
    StrAttr:$RXOOB_CLK_CFG,
    APIntAttr<I<5>>:$RXOSCALRESET_TIME,
    SI64Attr:$RXOUT_DIV,
    APIntAttr<I<5>>:$RXPCSRESET_TIME,
    APIntAttr<I<16>>:$RXPHBEACON_CFG,
    APIntAttr<I<16>>:$RXPHDLY_CFG,
    APIntAttr<I<16>>:$RXPHSAMP_CFG,
    APIntAttr<I<16>>:$RXPHSLIP_CFG,
    APIntAttr<I<5>>:$RXPH_MONITOR_SEL,
    APIntAttr<I<16>>:$RXPI_CFG0,
    APIntAttr<I<16>>:$RXPI_CFG1,
    StrAttr:$RXPMACLK_SEL,
    APIntAttr<I<5>>:$RXPMARESET_TIME,
    APIntAttr<I<1>>:$RXPRBS_ERR_LOOPBACK,
    SI64Attr:$RXPRBS_LINKACQ_CNT,
    APIntAttr<I<1>>:$RXREFCLKDIV2_SEL,
    SI64Attr:$RXSLIDE_AUTO_WAIT,
    StrAttr:$RXSLIDE_MODE,
    APIntAttr<I<1>>:$RXSYNC_MULTILANE,
    APIntAttr<I<1>>:$RXSYNC_OVRD,
    APIntAttr<I<1>>:$RXSYNC_SKIP_DA,
    APIntAttr<I<1>>:$RX_AFE_CM_EN,
    APIntAttr<I<16>>:$RX_BIAS_CFG0,
    APIntAttr<I<6>>:$RX_BUFFER_CFG,
    APIntAttr<I<1>>:$RX_CAPFF_SARC_ENB,
    SI64Attr:$RX_CLK25_DIV,
    APIntAttr<I<1>>:$RX_CLKMUX_EN,
    APIntAttr<I<5>>:$RX_CLK_SLIP_OVRD,
    APIntAttr<I<4>>:$RX_CM_BUF_CFG,
    APIntAttr<I<1>>:$RX_CM_BUF_PD,
    SI64Attr:$RX_CM_SEL,
    SI64Attr:$RX_CM_TRIM,
    APIntAttr<I<1>>:$RX_CTLE_PWR_SAVING,
    APIntAttr<I<4>>:$RX_CTLE_RES_CTRL,
    SI64Attr:$RX_DATA_WIDTH,
    APIntAttr<I<6>>:$RX_DDI_SEL,
    StrAttr:$RX_DEFER_RESET_BUF_EN,
    APIntAttr<I<3>>:$RX_DEGEN_CTRL,
    SI64Attr:$RX_DFELPM_CFG0,
    APIntAttr<I<1>>:$RX_DFELPM_CFG1,
    APIntAttr<I<1>>:$RX_DFELPM_KLKH_AGC_STUP_EN,
    SI64Attr:$RX_DFE_AGC_CFG1,
    SI64Attr:$RX_DFE_KL_LPM_KH_CFG0,
    SI64Attr:$RX_DFE_KL_LPM_KH_CFG1,
    APIntAttr<I<2>>:$RX_DFE_KL_LPM_KL_CFG0,
    SI64Attr:$RX_DFE_KL_LPM_KL_CFG1,
    APIntAttr<I<1>>:$RX_DFE_LPM_HOLD_DURING_EIDLE,
    StrAttr:$RX_DISPERR_SEQ_MATCH,
    APIntAttr<I<5>>:$RX_DIVRESET_TIME,
    APIntAttr<I<1>>:$RX_EN_CTLE_RCAL_B,
    SI64Attr:$RX_EN_SUM_RCAL_B,
    APIntAttr<I<7>>:$RX_EYESCAN_VS_CODE,
    APIntAttr<I<1>>:$RX_EYESCAN_VS_NEG_DIR,
    APIntAttr<I<2>>:$RX_EYESCAN_VS_RANGE,
    APIntAttr<I<1>>:$RX_EYESCAN_VS_UT_SIGN,
    APIntAttr<I<1>>:$RX_FABINT_USRCLK_FLOP,
    APIntAttr<I<1>>:$RX_I2V_FILTER_EN,
    SI64Attr:$RX_INT_DATAWIDTH,
    APIntAttr<I<1>>:$RX_PMA_POWER_SAVE,
    APIntAttr<I<16>>:$RX_PMA_RSV0,
    StrAttr:$RX_PROGDIV_CFG,
    APIntAttr<I<16>>:$RX_PROGDIV_RATE,
    APIntAttr<I<4>>:$RX_RESLOAD_CTRL,
    APIntAttr<I<1>>:$RX_RESLOAD_OVRD,
    APIntAttr<I<3>>:$RX_SAMPLE_PERIOD,
    SI64Attr:$RX_SIG_VALID_DLY,
    SI64Attr:$RX_SUM_DEGEN_AVTT_OVERITE,
    APIntAttr<I<1>>:$RX_SUM_DFETAPREP_EN,
    APIntAttr<I<4>>:$RX_SUM_IREF_TUNE,
    SI64Attr:$RX_SUM_PWR_SAVING,
    APIntAttr<I<4>>:$RX_SUM_RES_CTRL,
    APIntAttr<I<4>>:$RX_SUM_VCMTUNE,
    APIntAttr<I<1>>:$RX_SUM_VCM_BIAS_TUNE_EN,
    APIntAttr<I<1>>:$RX_SUM_VCM_OVWR,
    APIntAttr<I<3>>:$RX_SUM_VREF_TUNE,
    APIntAttr<I<2>>:$RX_TUNE_AFE_OS,
    APIntAttr<I<3>>:$RX_VREG_CTRL,
    APIntAttr<I<1>>:$RX_VREG_PDB,
    APIntAttr<I<2>>:$RX_WIDEMODE_CDR,
    APIntAttr<I<2>>:$RX_WIDEMODE_CDR_GEN3,
    APIntAttr<I<2>>:$RX_WIDEMODE_CDR_GEN4,
    StrAttr:$RX_XCLK_SEL,
    APIntAttr<I<1>>:$RX_XMODE_SEL,
    APIntAttr<I<1>>:$SAMPLE_CLK_PHASE,
    APIntAttr<I<1>>:$SAS_12G_MODE,
    APIntAttr<I<4>>:$SATA_BURST_SEQ_LEN,
    APIntAttr<I<3>>:$SATA_BURST_VAL,
    StrAttr:$SATA_CPLL_CFG,
    APIntAttr<I<3>>:$SATA_EIDLE_VAL,
    StrAttr:$SHOW_REALIGN_COMMA,
    StrAttr:$SIM_DEVICE,
    StrAttr:$SIM_MODE,
    StrAttr:$SIM_RECEIVER_DETECT_PASS,
    StrAttr:$SIM_RESET_SPEEDUP,
    StrAttr:$SIM_TX_EIDLE_DRIVE_LEVEL,
    APIntAttr<I<1>>:$SRSTMODE,
    APIntAttr<I<2>>:$TAPDLY_SET_TX,
    APIntAttr<I<15>>:$TERM_RCAL_CFG,
    APIntAttr<I<3>>:$TERM_RCAL_OVRD,
    APIntAttr<I<8>>:$TRANS_TIME_RATE,
    APIntAttr<I<8>>:$TST_RSV0,
    APIntAttr<I<8>>:$TST_RSV1,
    StrAttr:$TXBUF_EN,
    StrAttr:$TXBUF_RESET_ON_RATE_CHANGE,
    APIntAttr<I<16>>:$TXDLY_CFG,
    APIntAttr<I<16>>:$TXDLY_LCFG,
    SI64Attr:$TXDRV_FREQBAND,
    APIntAttr<I<16>>:$TXFE_CFG0,
    APIntAttr<I<16>>:$TXFE_CFG1,
    APIntAttr<I<16>>:$TXFE_CFG2,
    APIntAttr<I<16>>:$TXFE_CFG3,
    StrAttr:$TXFIFO_ADDR_CFG,
    SI64Attr:$TXGBOX_FIFO_INIT_RD_ADDR,
    StrAttr:$TXGEARBOX_EN,
    SI64Attr:$TXOUT_DIV,
    APIntAttr<I<5>>:$TXPCSRESET_TIME,
    APIntAttr<I<16>>:$TXPHDLY_CFG0,
    APIntAttr<I<16>>:$TXPHDLY_CFG1,
    APIntAttr<I<16>>:$TXPH_CFG,
    APIntAttr<I<16>>:$TXPH_CFG2,
    APIntAttr<I<5>>:$TXPH_MONITOR_SEL,
    APIntAttr<I<16>>:$TXPI_CFG0,
    APIntAttr<I<16>>:$TXPI_CFG1,
    APIntAttr<I<1>>:$TXPI_GRAY_SEL,
    APIntAttr<I<1>>:$TXPI_INVSTROBE_SEL,
    APIntAttr<I<1>>:$TXPI_PPM,
    APIntAttr<I<8>>:$TXPI_PPM_CFG,
    APIntAttr<I<3>>:$TXPI_SYNFREQ_PPM,
    APIntAttr<I<5>>:$TXPMARESET_TIME,
    APIntAttr<I<1>>:$TXREFCLKDIV2_SEL,
    SI64Attr:$TXSWBST_BST,
    SI64Attr:$TXSWBST_EN,
    SI64Attr:$TXSWBST_MAG,
    APIntAttr<I<1>>:$TXSYNC_MULTILANE,
    APIntAttr<I<1>>:$TXSYNC_OVRD,
    APIntAttr<I<1>>:$TXSYNC_SKIP_DA,
    SI64Attr:$TX_CLK25_DIV,
    APIntAttr<I<1>>:$TX_CLKMUX_EN,
    SI64Attr:$TX_DATA_WIDTH,
    APIntAttr<I<16>>:$TX_DCC_LOOP_RST_CFG,
    APIntAttr<I<6>>:$TX_DEEMPH0,
    APIntAttr<I<6>>:$TX_DEEMPH1,
    APIntAttr<I<6>>:$TX_DEEMPH2,
    APIntAttr<I<6>>:$TX_DEEMPH3,
    APIntAttr<I<5>>:$TX_DIVRESET_TIME,
    StrAttr:$TX_DRIVE_MODE,
    APIntAttr<I<3>>:$TX_EIDLE_ASSERT_DELAY,
    APIntAttr<I<3>>:$TX_EIDLE_DEASSERT_DELAY,
    APIntAttr<I<1>>:$TX_FABINT_USRCLK_FLOP,
    APIntAttr<I<1>>:$TX_FIFO_BYP_EN,
    APIntAttr<I<1>>:$TX_IDLE_DATA_ZERO,
    SI64Attr:$TX_INT_DATAWIDTH,
    StrAttr:$TX_LOOPBACK_DRIVE_HIZ,
    APIntAttr<I<1>>:$TX_MAINCURSOR_SEL,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_0,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_1,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_2,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_3,
    APIntAttr<I<7>>:$TX_MARGIN_FULL_4,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_0,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_1,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_2,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_3,
    APIntAttr<I<7>>:$TX_MARGIN_LOW_4,
    APIntAttr<I<16>>:$TX_PHICAL_CFG0,
    APIntAttr<I<16>>:$TX_PHICAL_CFG1,
    SI64Attr:$TX_PI_BIASSET,
    APIntAttr<I<1>>:$TX_PMADATA_OPT,
    APIntAttr<I<1>>:$TX_PMA_POWER_SAVE,
    APIntAttr<I<16>>:$TX_PMA_RSV0,
    APIntAttr<I<16>>:$TX_PMA_RSV1,
    StrAttr:$TX_PROGCLK_SEL,
    StrAttr:$TX_PROGDIV_CFG,
    APIntAttr<I<16>>:$TX_PROGDIV_RATE,
    APIntAttr<I<14>>:$TX_RXDETECT_CFG,
    SI64Attr:$TX_RXDETECT_REF,
    APIntAttr<I<3>>:$TX_SAMPLE_PERIOD,
    APIntAttr<I<2>>:$TX_SW_MEAS,
    APIntAttr<I<3>>:$TX_VREG_CTRL,
    APIntAttr<I<1>>:$TX_VREG_PDB,
    APIntAttr<I<2>>:$TX_VREG_VREFSEL,
    StrAttr:$TX_XCLK_SEL,
    APIntAttr<I<1>>:$USB_BOTH_BURST_IDLE,
    APIntAttr<I<7>>:$USB_BURSTMAX_U3WAKE,
    APIntAttr<I<7>>:$USB_BURSTMIN_U3WAKE,
    APIntAttr<I<1>>:$USB_CLK_COR_EQ_EN,
    APIntAttr<I<1>>:$USB_EXT_CNTL,
    APIntAttr<I<10>>:$USB_IDLEMAX_POLLING,
    APIntAttr<I<10>>:$USB_IDLEMIN_POLLING,
    APIntAttr<I<9>>:$USB_LFPSPING_BURST,
    APIntAttr<I<9>>:$USB_LFPSPOLLING_BURST,
    APIntAttr<I<9>>:$USB_LFPSPOLLING_IDLE_MS,
    APIntAttr<I<9>>:$USB_LFPSU1EXIT_BURST,
    APIntAttr<I<9>>:$USB_LFPSU2LPEXIT_BURST_MS,
    APIntAttr<I<9>>:$USB_LFPSU3WAKE_BURST_MS,
    APIntAttr<I<4>>:$USB_LFPS_TPERIOD,
    APIntAttr<I<1>>:$USB_LFPS_TPERIOD_ACCURATE,
    APIntAttr<I<1>>:$USB_MODE,
    APIntAttr<I<1>>:$USB_PCIE_ERR_REP_DIS,
    SI64Attr:$USB_PING_SATA_MAX_INIT,
    SI64Attr:$USB_PING_SATA_MIN_INIT,
    SI64Attr:$USB_POLL_SATA_MAX_BURST,
    SI64Attr:$USB_POLL_SATA_MIN_BURST,
    APIntAttr<I<1>>:$USB_RAW_ELEC,
    APIntAttr<I<1>>:$USB_RXIDLE_P0_CTRL,
    APIntAttr<I<1>>:$USB_TXIDLE_TUNE_ENABLE,
    SI64Attr:$USB_U1_SATA_MAX_WAKE,
    SI64Attr:$USB_U1_SATA_MIN_WAKE,
    SI64Attr:$USB_U2_SAS_MAX_COM,
    SI64Attr:$USB_U2_SAS_MIN_COM,
    APIntAttr<I<1>>:$USE_PCS_CLK_PHASE_SEL,
    APIntAttr<I<1>>:$Y_ALL_MODE
  );

  let results = (outs
    I<1>:$BUFGTCE,
    I<3>:$BUFGTCEMASK,
    I<9>:$BUFGTDIV,
    I<1>:$BUFGTRESET,
    I<3>:$BUFGTRSTMASK,
    I<1>:$CPLLFBCLKLOST,
    I<1>:$CPLLLOCK,
    I<1>:$CPLLREFCLKLOST,
    I<16>:$DMONITOROUT,
    I<1>:$DMONITOROUTCLK,
    I<16>:$DRPDO,
    I<1>:$DRPRDY,
    I<1>:$EYESCANDATAERROR,
    I<1>:$GTPOWERGOOD,
    I<1>:$GTREFCLKMONITOR,
    I<1>:$GTYTXN,
    I<1>:$GTYTXP,
    I<1>:$PCIERATEGEN3,
    I<1>:$PCIERATEIDLE,
    I<2>:$PCIERATEQPLLPD,
    I<2>:$PCIERATEQPLLRESET,
    I<1>:$PCIESYNCTXSYNCDONE,
    I<1>:$PCIEUSERGEN3RDY,
    I<1>:$PCIEUSERPHYSTATUSRST,
    I<1>:$PCIEUSERRATESTART,
    I<16>:$PCSRSVDOUT,
    I<1>:$PHYSTATUS,
    I<16>:$PINRSRVDAS,
    I<1>:$POWERPRESENT,
    I<1>:$RESETEXCEPTION,
    I<3>:$RXBUFSTATUS,
    I<1>:$RXBYTEISALIGNED,
    I<1>:$RXBYTEREALIGN,
    I<1>:$RXCDRLOCK,
    I<1>:$RXCDRPHDONE,
    I<1>:$RXCHANBONDSEQ,
    I<1>:$RXCHANISALIGNED,
    I<1>:$RXCHANREALIGN,
    I<5>:$RXCHBONDO,
    I<1>:$RXCKCALDONE,
    I<2>:$RXCLKCORCNT,
    I<1>:$RXCOMINITDET,
    I<1>:$RXCOMMADET,
    I<1>:$RXCOMSASDET,
    I<1>:$RXCOMWAKEDET,
    I<16>:$RXCTRL0,
    I<16>:$RXCTRL1,
    I<8>:$RXCTRL2,
    I<8>:$RXCTRL3,
    I<128>:$RXDATA,
    I<8>:$RXDATAEXTENDRSVD,
    I<2>:$RXDATAVALID,
    I<1>:$RXDLYSRESETDONE,
    I<1>:$RXELECIDLE,
    I<6>:$RXHEADER,
    I<2>:$RXHEADERVALID,
    I<1>:$RXLFPSTRESETDET,
    I<1>:$RXLFPSU2LPEXITDET,
    I<1>:$RXLFPSU3WAKEDET,
    I<8>:$RXMONITOROUT,
    I<1>:$RXOSINTDONE,
    I<1>:$RXOSINTSTARTED,
    I<1>:$RXOSINTSTROBEDONE,
    I<1>:$RXOSINTSTROBESTARTED,
    I<1>:$RXOUTCLK,
    I<1>:$RXOUTCLKFABRIC,
    I<1>:$RXOUTCLKPCS,
    I<1>:$RXPHALIGNDONE,
    I<1>:$RXPHALIGNERR,
    I<1>:$RXPMARESETDONE,
    I<1>:$RXPRBSERR,
    I<1>:$RXPRBSLOCKED,
    I<1>:$RXPRGDIVRESETDONE,
    I<1>:$RXRATEDONE,
    I<1>:$RXRECCLKOUT,
    I<1>:$RXRESETDONE,
    I<1>:$RXSLIDERDY,
    I<1>:$RXSLIPDONE,
    I<1>:$RXSLIPOUTCLKRDY,
    I<1>:$RXSLIPPMARDY,
    I<2>:$RXSTARTOFSEQ,
    I<3>:$RXSTATUS,
    I<1>:$RXSYNCDONE,
    I<1>:$RXSYNCOUT,
    I<1>:$RXVALID,
    I<2>:$TXBUFSTATUS,
    I<1>:$TXCOMFINISH,
    I<1>:$TXDCCDONE,
    I<1>:$TXDLYSRESETDONE,
    I<1>:$TXOUTCLK,
    I<1>:$TXOUTCLKFABRIC,
    I<1>:$TXOUTCLKPCS,
    I<1>:$TXPHALIGNDONE,
    I<1>:$TXPHINITDONE,
    I<1>:$TXPMARESETDONE,
    I<1>:$TXPRGDIVRESETDONE,
    I<1>:$TXRATEDONE,
    I<1>:$TXRESETDONE,
    I<1>:$TXSYNCDONE,
    I<1>:$TXSYNCOUT
  );
}

def GTYE4uCOMMON : XilinxPrimitiveOp<"GTYE4_COMMON", []> {
  let summary = "GTYE4_COMMON Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$BGBYPASSB,
    I<1>:$BGMONITORENB,
    I<1>:$BGPDB,
    I<5>:$BGRCALOVRD,
    I<1>:$BGRCALOVRDENB,
    I<16>:$DRPADDR,
    I<1>:$DRPCLK,
    I<16>:$DRPDI,
    I<1>:$DRPEN,
    I<1>:$DRPWE,
    I<1>:$GTGREFCLK0,
    I<1>:$GTGREFCLK1,
    I<1>:$GTNORTHREFCLK00,
    I<1>:$GTNORTHREFCLK01,
    I<1>:$GTNORTHREFCLK10,
    I<1>:$GTNORTHREFCLK11,
    I<1>:$GTREFCLK00,
    I<1>:$GTREFCLK01,
    I<1>:$GTREFCLK10,
    I<1>:$GTREFCLK11,
    I<1>:$GTSOUTHREFCLK00,
    I<1>:$GTSOUTHREFCLK01,
    I<1>:$GTSOUTHREFCLK10,
    I<1>:$GTSOUTHREFCLK11,
    I<3>:$PCIERATEQPLL0,
    I<3>:$PCIERATEQPLL1,
    I<8>:$PMARSVD0,
    I<8>:$PMARSVD1,
    I<1>:$QPLL0CLKRSVD0,
    I<1>:$QPLL0CLKRSVD1,
    I<8>:$QPLL0FBDIV,
    I<1>:$QPLL0LOCKDETCLK,
    I<1>:$QPLL0LOCKEN,
    I<1>:$QPLL0PD,
    I<3>:$QPLL0REFCLKSEL,
    I<1>:$QPLL0RESET,
    I<1>:$QPLL1CLKRSVD0,
    I<1>:$QPLL1CLKRSVD1,
    I<8>:$QPLL1FBDIV,
    I<1>:$QPLL1LOCKDETCLK,
    I<1>:$QPLL1LOCKEN,
    I<1>:$QPLL1PD,
    I<3>:$QPLL1REFCLKSEL,
    I<1>:$QPLL1RESET,
    I<8>:$QPLLRSVD1,
    I<5>:$QPLLRSVD2,
    I<5>:$QPLLRSVD3,
    I<8>:$QPLLRSVD4,
    I<1>:$RCALENB,
    I<25>:$SDM0DATA,
    I<1>:$SDM0RESET,
    I<1>:$SDM0TOGGLE,
    I<2>:$SDM0WIDTH,
    I<25>:$SDM1DATA,
    I<1>:$SDM1RESET,
    I<1>:$SDM1TOGGLE,
    I<2>:$SDM1WIDTH,
    I<1>:$UBCFGSTREAMEN,
    I<16>:$UBDO,
    I<1>:$UBDRDY,
    I<1>:$UBENABLE,
    I<2>:$UBGPI,
    I<2>:$UBINTR,
    I<1>:$UBIOLMBRST,
    I<1>:$UBMBRST,
    I<1>:$UBMDMCAPTURE,
    I<1>:$UBMDMDBGRST,
    I<1>:$UBMDMDBGUPDATE,
    I<4>:$UBMDMREGEN,
    I<1>:$UBMDMSHIFT,
    I<1>:$UBMDMSYSRST,
    I<1>:$UBMDMTCK,
    I<1>:$UBMDMTDI,

    // GTYE4_COMMON parameters follows
    APIntAttr<I<1>>:$AEN_QPLL0_FBDIV,
    APIntAttr<I<1>>:$AEN_QPLL1_FBDIV,
    APIntAttr<I<1>>:$AEN_SDM0TOGGLE,
    APIntAttr<I<1>>:$AEN_SDM1TOGGLE,
    APIntAttr<I<1>>:$A_SDM0TOGGLE,
    APIntAttr<I<9>>:$A_SDM1DATA_HIGH,
    APIntAttr<I<16>>:$A_SDM1DATA_LOW,
    APIntAttr<I<1>>:$A_SDM1TOGGLE,
    APIntAttr<I<16>>:$BIAS_CFG0,
    APIntAttr<I<16>>:$BIAS_CFG1,
    APIntAttr<I<16>>:$BIAS_CFG2,
    APIntAttr<I<16>>:$BIAS_CFG3,
    APIntAttr<I<16>>:$BIAS_CFG4,
    APIntAttr<I<16>>:$BIAS_CFG_RSVD,
    APIntAttr<I<16>>:$COMMON_CFG0,
    APIntAttr<I<16>>:$COMMON_CFG1,
    APIntAttr<I<16>>:$POR_CFG,
    APIntAttr<I<16>>:$PPF0_CFG,
    APIntAttr<I<16>>:$PPF1_CFG,
    StrAttr:$QPLL0CLKOUT_RATE,
    APIntAttr<I<16>>:$QPLL0_CFG0,
    APIntAttr<I<16>>:$QPLL0_CFG1,
    APIntAttr<I<16>>:$QPLL0_CFG1_G3,
    APIntAttr<I<16>>:$QPLL0_CFG2,
    APIntAttr<I<16>>:$QPLL0_CFG2_G3,
    APIntAttr<I<16>>:$QPLL0_CFG3,
    APIntAttr<I<16>>:$QPLL0_CFG4,
    APIntAttr<I<10>>:$QPLL0_CP,
    APIntAttr<I<10>>:$QPLL0_CP_G3,
    SI64Attr:$QPLL0_FBDIV,
    SI64Attr:$QPLL0_FBDIV_G3,
    APIntAttr<I<16>>:$QPLL0_INIT_CFG0,
    APIntAttr<I<8>>:$QPLL0_INIT_CFG1,
    APIntAttr<I<16>>:$QPLL0_LOCK_CFG,
    APIntAttr<I<16>>:$QPLL0_LOCK_CFG_G3,
    APIntAttr<I<10>>:$QPLL0_LPF,
    APIntAttr<I<10>>:$QPLL0_LPF_G3,
    APIntAttr<I<1>>:$QPLL0_PCI_EN,
    APIntAttr<I<1>>:$QPLL0_RATE_SW_USE_DRP,
    SI64Attr:$QPLL0_REFCLK_DIV,
    APIntAttr<I<16>>:$QPLL0_SDM_CFG0,
    APIntAttr<I<16>>:$QPLL0_SDM_CFG1,
    APIntAttr<I<16>>:$QPLL0_SDM_CFG2,
    StrAttr:$QPLL1CLKOUT_RATE,
    APIntAttr<I<16>>:$QPLL1_CFG0,
    APIntAttr<I<16>>:$QPLL1_CFG1,
    APIntAttr<I<16>>:$QPLL1_CFG1_G3,
    APIntAttr<I<16>>:$QPLL1_CFG2,
    APIntAttr<I<16>>:$QPLL1_CFG2_G3,
    APIntAttr<I<16>>:$QPLL1_CFG3,
    APIntAttr<I<16>>:$QPLL1_CFG4,
    APIntAttr<I<10>>:$QPLL1_CP,
    APIntAttr<I<10>>:$QPLL1_CP_G3,
    SI64Attr:$QPLL1_FBDIV,
    SI64Attr:$QPLL1_FBDIV_G3,
    APIntAttr<I<16>>:$QPLL1_INIT_CFG0,
    APIntAttr<I<8>>:$QPLL1_INIT_CFG1,
    APIntAttr<I<16>>:$QPLL1_LOCK_CFG,
    APIntAttr<I<16>>:$QPLL1_LOCK_CFG_G3,
    APIntAttr<I<10>>:$QPLL1_LPF,
    APIntAttr<I<10>>:$QPLL1_LPF_G3,
    APIntAttr<I<1>>:$QPLL1_PCI_EN,
    APIntAttr<I<1>>:$QPLL1_RATE_SW_USE_DRP,
    SI64Attr:$QPLL1_REFCLK_DIV,
    APIntAttr<I<16>>:$QPLL1_SDM_CFG0,
    APIntAttr<I<16>>:$QPLL1_SDM_CFG1,
    APIntAttr<I<16>>:$QPLL1_SDM_CFG2,
    APIntAttr<I<16>>:$RSVD_ATTR0,
    APIntAttr<I<16>>:$RSVD_ATTR1,
    APIntAttr<I<16>>:$RSVD_ATTR2,
    APIntAttr<I<16>>:$RSVD_ATTR3,
    APIntAttr<I<2>>:$RXRECCLKOUT0_SEL,
    APIntAttr<I<2>>:$RXRECCLKOUT1_SEL,
    APIntAttr<I<1>>:$SARC_ENB,
    APIntAttr<I<1>>:$SARC_SEL,
    APIntAttr<I<16>>:$SDM0INITSEED0_0,
    APIntAttr<I<9>>:$SDM0INITSEED0_1,
    APIntAttr<I<16>>:$SDM1INITSEED0_0,
    APIntAttr<I<9>>:$SDM1INITSEED0_1,
    StrAttr:$SIM_DEVICE,
    StrAttr:$SIM_MODE,
    StrAttr:$SIM_RESET_SPEEDUP,
    APIntAttr<I<16>>:$UB_CFG0,
    APIntAttr<I<16>>:$UB_CFG1,
    APIntAttr<I<16>>:$UB_CFG2,
    APIntAttr<I<16>>:$UB_CFG3,
    APIntAttr<I<16>>:$UB_CFG4,
    APIntAttr<I<16>>:$UB_CFG5,
    APIntAttr<I<16>>:$UB_CFG6
  );

  let results = (outs
    I<16>:$DRPDO,
    I<1>:$DRPRDY,
    I<8>:$PMARSVDOUT0,
    I<8>:$PMARSVDOUT1,
    I<1>:$QPLL0FBCLKLOST,
    I<1>:$QPLL0LOCK,
    I<1>:$QPLL0OUTCLK,
    I<1>:$QPLL0OUTREFCLK,
    I<1>:$QPLL0REFCLKLOST,
    I<1>:$QPLL1FBCLKLOST,
    I<1>:$QPLL1LOCK,
    I<1>:$QPLL1OUTCLK,
    I<1>:$QPLL1OUTREFCLK,
    I<1>:$QPLL1REFCLKLOST,
    I<8>:$QPLLDMONITOR0,
    I<8>:$QPLLDMONITOR1,
    I<1>:$REFCLKOUTMONITOR0,
    I<1>:$REFCLKOUTMONITOR1,
    I<2>:$RXRECCLK0SEL,
    I<2>:$RXRECCLK1SEL,
    I<4>:$SDM0FINALOUT,
    I<15>:$SDM0TESTDATA,
    I<4>:$SDM1FINALOUT,
    I<15>:$SDM1TESTDATA,
    I<16>:$UBDADDR,
    I<1>:$UBDEN,
    I<16>:$UBDI,
    I<1>:$UBDWE,
    I<1>:$UBMDMTDO,
    I<1>:$UBRSVDOUT,
    I<1>:$UBTXUART
  );
}

def HARDuSYNC : XilinxPrimitiveOp<"HARD_SYNC", []> {
  let summary = "HARD_SYNC Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLK,
    I<1>:$DIN,

    // HARD_SYNC parameters follows
    APIntAttr<I<1>>:$INIT,
    APIntAttr<I<1>>:$IS_CLK_INVERTED,
    SI64Attr:$LATENCY
  );

  let results = (outs
    I<1>:$DOUT
  );
}

def HBMuONEuSTACKuINTF : XilinxPrimitiveOp<"HBM_ONE_STACK_INTF", []> {
  let summary = "HBM_ONE_STACK_INTF Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<22>:$APB_0_PADDR,
    I<1>:$APB_0_PCLK,
    I<1>:$APB_0_PENABLE,
    I<1>:$APB_0_PRESET_N,
    I<1>:$APB_0_PSEL,
    I<32>:$APB_0_PWDATA,
    I<1>:$APB_0_PWRITE,
    I<1>:$AXI_00_ACLK,
    I<37>:$AXI_00_ARADDR,
    I<2>:$AXI_00_ARBURST,
    I<1>:$AXI_00_ARESET_N,
    I<6>:$AXI_00_ARID,
    I<4>:$AXI_00_ARLEN,
    I<3>:$AXI_00_ARSIZE,
    I<1>:$AXI_00_ARVALID,
    I<37>:$AXI_00_AWADDR,
    I<2>:$AXI_00_AWBURST,
    I<6>:$AXI_00_AWID,
    I<4>:$AXI_00_AWLEN,
    I<3>:$AXI_00_AWSIZE,
    I<1>:$AXI_00_AWVALID,
    I<1>:$AXI_00_BREADY,
    I<1>:$AXI_00_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_00_RREADY,
    I<256>:$AXI_00_WDATA,
    I<32>:$AXI_00_WDATA_PARITY,
    I<1>:$AXI_00_WLAST,
    I<32>:$AXI_00_WSTRB,
    I<1>:$AXI_00_WVALID,
    I<1>:$AXI_01_ACLK,
    I<37>:$AXI_01_ARADDR,
    I<2>:$AXI_01_ARBURST,
    I<1>:$AXI_01_ARESET_N,
    I<6>:$AXI_01_ARID,
    I<4>:$AXI_01_ARLEN,
    I<3>:$AXI_01_ARSIZE,
    I<1>:$AXI_01_ARVALID,
    I<37>:$AXI_01_AWADDR,
    I<2>:$AXI_01_AWBURST,
    I<6>:$AXI_01_AWID,
    I<4>:$AXI_01_AWLEN,
    I<3>:$AXI_01_AWSIZE,
    I<1>:$AXI_01_AWVALID,
    I<1>:$AXI_01_BREADY,
    I<1>:$AXI_01_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_01_RREADY,
    I<256>:$AXI_01_WDATA,
    I<32>:$AXI_01_WDATA_PARITY,
    I<1>:$AXI_01_WLAST,
    I<32>:$AXI_01_WSTRB,
    I<1>:$AXI_01_WVALID,
    I<1>:$AXI_02_ACLK,
    I<37>:$AXI_02_ARADDR,
    I<2>:$AXI_02_ARBURST,
    I<1>:$AXI_02_ARESET_N,
    I<6>:$AXI_02_ARID,
    I<4>:$AXI_02_ARLEN,
    I<3>:$AXI_02_ARSIZE,
    I<1>:$AXI_02_ARVALID,
    I<37>:$AXI_02_AWADDR,
    I<2>:$AXI_02_AWBURST,
    I<6>:$AXI_02_AWID,
    I<4>:$AXI_02_AWLEN,
    I<3>:$AXI_02_AWSIZE,
    I<1>:$AXI_02_AWVALID,
    I<1>:$AXI_02_BREADY,
    I<1>:$AXI_02_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_02_RREADY,
    I<256>:$AXI_02_WDATA,
    I<32>:$AXI_02_WDATA_PARITY,
    I<1>:$AXI_02_WLAST,
    I<32>:$AXI_02_WSTRB,
    I<1>:$AXI_02_WVALID,
    I<1>:$AXI_03_ACLK,
    I<37>:$AXI_03_ARADDR,
    I<2>:$AXI_03_ARBURST,
    I<1>:$AXI_03_ARESET_N,
    I<6>:$AXI_03_ARID,
    I<4>:$AXI_03_ARLEN,
    I<3>:$AXI_03_ARSIZE,
    I<1>:$AXI_03_ARVALID,
    I<37>:$AXI_03_AWADDR,
    I<2>:$AXI_03_AWBURST,
    I<6>:$AXI_03_AWID,
    I<4>:$AXI_03_AWLEN,
    I<3>:$AXI_03_AWSIZE,
    I<1>:$AXI_03_AWVALID,
    I<1>:$AXI_03_BREADY,
    I<1>:$AXI_03_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_03_RREADY,
    I<256>:$AXI_03_WDATA,
    I<32>:$AXI_03_WDATA_PARITY,
    I<1>:$AXI_03_WLAST,
    I<32>:$AXI_03_WSTRB,
    I<1>:$AXI_03_WVALID,
    I<1>:$AXI_04_ACLK,
    I<37>:$AXI_04_ARADDR,
    I<2>:$AXI_04_ARBURST,
    I<1>:$AXI_04_ARESET_N,
    I<6>:$AXI_04_ARID,
    I<4>:$AXI_04_ARLEN,
    I<3>:$AXI_04_ARSIZE,
    I<1>:$AXI_04_ARVALID,
    I<37>:$AXI_04_AWADDR,
    I<2>:$AXI_04_AWBURST,
    I<6>:$AXI_04_AWID,
    I<4>:$AXI_04_AWLEN,
    I<3>:$AXI_04_AWSIZE,
    I<1>:$AXI_04_AWVALID,
    I<1>:$AXI_04_BREADY,
    I<1>:$AXI_04_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_04_RREADY,
    I<256>:$AXI_04_WDATA,
    I<32>:$AXI_04_WDATA_PARITY,
    I<1>:$AXI_04_WLAST,
    I<32>:$AXI_04_WSTRB,
    I<1>:$AXI_04_WVALID,
    I<1>:$AXI_05_ACLK,
    I<37>:$AXI_05_ARADDR,
    I<2>:$AXI_05_ARBURST,
    I<1>:$AXI_05_ARESET_N,
    I<6>:$AXI_05_ARID,
    I<4>:$AXI_05_ARLEN,
    I<3>:$AXI_05_ARSIZE,
    I<1>:$AXI_05_ARVALID,
    I<37>:$AXI_05_AWADDR,
    I<2>:$AXI_05_AWBURST,
    I<6>:$AXI_05_AWID,
    I<4>:$AXI_05_AWLEN,
    I<3>:$AXI_05_AWSIZE,
    I<1>:$AXI_05_AWVALID,
    I<1>:$AXI_05_BREADY,
    I<1>:$AXI_05_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_05_RREADY,
    I<256>:$AXI_05_WDATA,
    I<32>:$AXI_05_WDATA_PARITY,
    I<1>:$AXI_05_WLAST,
    I<32>:$AXI_05_WSTRB,
    I<1>:$AXI_05_WVALID,
    I<1>:$AXI_06_ACLK,
    I<37>:$AXI_06_ARADDR,
    I<2>:$AXI_06_ARBURST,
    I<1>:$AXI_06_ARESET_N,
    I<6>:$AXI_06_ARID,
    I<4>:$AXI_06_ARLEN,
    I<3>:$AXI_06_ARSIZE,
    I<1>:$AXI_06_ARVALID,
    I<37>:$AXI_06_AWADDR,
    I<2>:$AXI_06_AWBURST,
    I<6>:$AXI_06_AWID,
    I<4>:$AXI_06_AWLEN,
    I<3>:$AXI_06_AWSIZE,
    I<1>:$AXI_06_AWVALID,
    I<1>:$AXI_06_BREADY,
    I<1>:$AXI_06_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_06_RREADY,
    I<256>:$AXI_06_WDATA,
    I<32>:$AXI_06_WDATA_PARITY,
    I<1>:$AXI_06_WLAST,
    I<32>:$AXI_06_WSTRB,
    I<1>:$AXI_06_WVALID,
    I<1>:$AXI_07_ACLK,
    I<37>:$AXI_07_ARADDR,
    I<2>:$AXI_07_ARBURST,
    I<1>:$AXI_07_ARESET_N,
    I<6>:$AXI_07_ARID,
    I<4>:$AXI_07_ARLEN,
    I<3>:$AXI_07_ARSIZE,
    I<1>:$AXI_07_ARVALID,
    I<37>:$AXI_07_AWADDR,
    I<2>:$AXI_07_AWBURST,
    I<6>:$AXI_07_AWID,
    I<4>:$AXI_07_AWLEN,
    I<3>:$AXI_07_AWSIZE,
    I<1>:$AXI_07_AWVALID,
    I<1>:$AXI_07_BREADY,
    I<1>:$AXI_07_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_07_RREADY,
    I<256>:$AXI_07_WDATA,
    I<32>:$AXI_07_WDATA_PARITY,
    I<1>:$AXI_07_WLAST,
    I<32>:$AXI_07_WSTRB,
    I<1>:$AXI_07_WVALID,
    I<1>:$AXI_08_ACLK,
    I<37>:$AXI_08_ARADDR,
    I<2>:$AXI_08_ARBURST,
    I<1>:$AXI_08_ARESET_N,
    I<6>:$AXI_08_ARID,
    I<4>:$AXI_08_ARLEN,
    I<3>:$AXI_08_ARSIZE,
    I<1>:$AXI_08_ARVALID,
    I<37>:$AXI_08_AWADDR,
    I<2>:$AXI_08_AWBURST,
    I<6>:$AXI_08_AWID,
    I<4>:$AXI_08_AWLEN,
    I<3>:$AXI_08_AWSIZE,
    I<1>:$AXI_08_AWVALID,
    I<1>:$AXI_08_BREADY,
    I<1>:$AXI_08_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_08_RREADY,
    I<256>:$AXI_08_WDATA,
    I<32>:$AXI_08_WDATA_PARITY,
    I<1>:$AXI_08_WLAST,
    I<32>:$AXI_08_WSTRB,
    I<1>:$AXI_08_WVALID,
    I<1>:$AXI_09_ACLK,
    I<37>:$AXI_09_ARADDR,
    I<2>:$AXI_09_ARBURST,
    I<1>:$AXI_09_ARESET_N,
    I<6>:$AXI_09_ARID,
    I<4>:$AXI_09_ARLEN,
    I<3>:$AXI_09_ARSIZE,
    I<1>:$AXI_09_ARVALID,
    I<37>:$AXI_09_AWADDR,
    I<2>:$AXI_09_AWBURST,
    I<6>:$AXI_09_AWID,
    I<4>:$AXI_09_AWLEN,
    I<3>:$AXI_09_AWSIZE,
    I<1>:$AXI_09_AWVALID,
    I<1>:$AXI_09_BREADY,
    I<1>:$AXI_09_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_09_RREADY,
    I<256>:$AXI_09_WDATA,
    I<32>:$AXI_09_WDATA_PARITY,
    I<1>:$AXI_09_WLAST,
    I<32>:$AXI_09_WSTRB,
    I<1>:$AXI_09_WVALID,
    I<1>:$AXI_10_ACLK,
    I<37>:$AXI_10_ARADDR,
    I<2>:$AXI_10_ARBURST,
    I<1>:$AXI_10_ARESET_N,
    I<6>:$AXI_10_ARID,
    I<4>:$AXI_10_ARLEN,
    I<3>:$AXI_10_ARSIZE,
    I<1>:$AXI_10_ARVALID,
    I<37>:$AXI_10_AWADDR,
    I<2>:$AXI_10_AWBURST,
    I<6>:$AXI_10_AWID,
    I<4>:$AXI_10_AWLEN,
    I<3>:$AXI_10_AWSIZE,
    I<1>:$AXI_10_AWVALID,
    I<1>:$AXI_10_BREADY,
    I<1>:$AXI_10_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_10_RREADY,
    I<256>:$AXI_10_WDATA,
    I<32>:$AXI_10_WDATA_PARITY,
    I<1>:$AXI_10_WLAST,
    I<32>:$AXI_10_WSTRB,
    I<1>:$AXI_10_WVALID,
    I<1>:$AXI_11_ACLK,
    I<37>:$AXI_11_ARADDR,
    I<2>:$AXI_11_ARBURST,
    I<1>:$AXI_11_ARESET_N,
    I<6>:$AXI_11_ARID,
    I<4>:$AXI_11_ARLEN,
    I<3>:$AXI_11_ARSIZE,
    I<1>:$AXI_11_ARVALID,
    I<37>:$AXI_11_AWADDR,
    I<2>:$AXI_11_AWBURST,
    I<6>:$AXI_11_AWID,
    I<4>:$AXI_11_AWLEN,
    I<3>:$AXI_11_AWSIZE,
    I<1>:$AXI_11_AWVALID,
    I<1>:$AXI_11_BREADY,
    I<1>:$AXI_11_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_11_RREADY,
    I<256>:$AXI_11_WDATA,
    I<32>:$AXI_11_WDATA_PARITY,
    I<1>:$AXI_11_WLAST,
    I<32>:$AXI_11_WSTRB,
    I<1>:$AXI_11_WVALID,
    I<1>:$AXI_12_ACLK,
    I<37>:$AXI_12_ARADDR,
    I<2>:$AXI_12_ARBURST,
    I<1>:$AXI_12_ARESET_N,
    I<6>:$AXI_12_ARID,
    I<4>:$AXI_12_ARLEN,
    I<3>:$AXI_12_ARSIZE,
    I<1>:$AXI_12_ARVALID,
    I<37>:$AXI_12_AWADDR,
    I<2>:$AXI_12_AWBURST,
    I<6>:$AXI_12_AWID,
    I<4>:$AXI_12_AWLEN,
    I<3>:$AXI_12_AWSIZE,
    I<1>:$AXI_12_AWVALID,
    I<1>:$AXI_12_BREADY,
    I<1>:$AXI_12_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_12_RREADY,
    I<256>:$AXI_12_WDATA,
    I<32>:$AXI_12_WDATA_PARITY,
    I<1>:$AXI_12_WLAST,
    I<32>:$AXI_12_WSTRB,
    I<1>:$AXI_12_WVALID,
    I<1>:$AXI_13_ACLK,
    I<37>:$AXI_13_ARADDR,
    I<2>:$AXI_13_ARBURST,
    I<1>:$AXI_13_ARESET_N,
    I<6>:$AXI_13_ARID,
    I<4>:$AXI_13_ARLEN,
    I<3>:$AXI_13_ARSIZE,
    I<1>:$AXI_13_ARVALID,
    I<37>:$AXI_13_AWADDR,
    I<2>:$AXI_13_AWBURST,
    I<6>:$AXI_13_AWID,
    I<4>:$AXI_13_AWLEN,
    I<3>:$AXI_13_AWSIZE,
    I<1>:$AXI_13_AWVALID,
    I<1>:$AXI_13_BREADY,
    I<1>:$AXI_13_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_13_RREADY,
    I<256>:$AXI_13_WDATA,
    I<32>:$AXI_13_WDATA_PARITY,
    I<1>:$AXI_13_WLAST,
    I<32>:$AXI_13_WSTRB,
    I<1>:$AXI_13_WVALID,
    I<1>:$AXI_14_ACLK,
    I<37>:$AXI_14_ARADDR,
    I<2>:$AXI_14_ARBURST,
    I<1>:$AXI_14_ARESET_N,
    I<6>:$AXI_14_ARID,
    I<4>:$AXI_14_ARLEN,
    I<3>:$AXI_14_ARSIZE,
    I<1>:$AXI_14_ARVALID,
    I<37>:$AXI_14_AWADDR,
    I<2>:$AXI_14_AWBURST,
    I<6>:$AXI_14_AWID,
    I<4>:$AXI_14_AWLEN,
    I<3>:$AXI_14_AWSIZE,
    I<1>:$AXI_14_AWVALID,
    I<1>:$AXI_14_BREADY,
    I<1>:$AXI_14_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_14_RREADY,
    I<256>:$AXI_14_WDATA,
    I<32>:$AXI_14_WDATA_PARITY,
    I<1>:$AXI_14_WLAST,
    I<32>:$AXI_14_WSTRB,
    I<1>:$AXI_14_WVALID,
    I<1>:$AXI_15_ACLK,
    I<37>:$AXI_15_ARADDR,
    I<2>:$AXI_15_ARBURST,
    I<1>:$AXI_15_ARESET_N,
    I<6>:$AXI_15_ARID,
    I<4>:$AXI_15_ARLEN,
    I<3>:$AXI_15_ARSIZE,
    I<1>:$AXI_15_ARVALID,
    I<37>:$AXI_15_AWADDR,
    I<2>:$AXI_15_AWBURST,
    I<6>:$AXI_15_AWID,
    I<4>:$AXI_15_AWLEN,
    I<3>:$AXI_15_AWSIZE,
    I<1>:$AXI_15_AWVALID,
    I<1>:$AXI_15_BREADY,
    I<1>:$AXI_15_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_15_RREADY,
    I<256>:$AXI_15_WDATA,
    I<32>:$AXI_15_WDATA_PARITY,
    I<1>:$AXI_15_WLAST,
    I<32>:$AXI_15_WSTRB,
    I<1>:$AXI_15_WVALID,
    I<1>:$BSCAN_DRCK,
    I<1>:$BSCAN_TCK,
    I<1>:$HBM_REF_CLK,
    I<1>:$MBIST_EN_00,
    I<1>:$MBIST_EN_01,
    I<1>:$MBIST_EN_02,
    I<1>:$MBIST_EN_03,
    I<1>:$MBIST_EN_04,
    I<1>:$MBIST_EN_05,
    I<1>:$MBIST_EN_06,
    I<1>:$MBIST_EN_07,

    // HBM_ONE_STACK_INTF parameters follows
    StrAttr:$CLK_SEL_00,
    StrAttr:$CLK_SEL_01,
    StrAttr:$CLK_SEL_02,
    StrAttr:$CLK_SEL_03,
    StrAttr:$CLK_SEL_04,
    StrAttr:$CLK_SEL_05,
    StrAttr:$CLK_SEL_06,
    StrAttr:$CLK_SEL_07,
    StrAttr:$CLK_SEL_08,
    StrAttr:$CLK_SEL_09,
    StrAttr:$CLK_SEL_10,
    StrAttr:$CLK_SEL_11,
    StrAttr:$CLK_SEL_12,
    StrAttr:$CLK_SEL_13,
    StrAttr:$CLK_SEL_14,
    StrAttr:$CLK_SEL_15,
    SI64Attr:$DATARATE_00,
    SI64Attr:$DATARATE_01,
    SI64Attr:$DATARATE_02,
    SI64Attr:$DATARATE_03,
    SI64Attr:$DATARATE_04,
    SI64Attr:$DATARATE_05,
    SI64Attr:$DATARATE_06,
    SI64Attr:$DATARATE_07,
    StrAttr:$DA_LOCKOUT,
    APIntAttr<I<1>>:$IS_APB_0_PCLK_INVERTED,
    APIntAttr<I<1>>:$IS_APB_0_PRESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_00_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_00_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_01_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_01_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_02_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_02_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_03_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_03_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_04_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_04_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_05_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_05_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_06_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_06_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_07_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_07_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_08_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_08_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_09_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_09_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_10_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_10_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_11_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_11_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_12_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_12_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_13_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_13_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_14_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_14_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_15_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_15_ARESET_N_INVERTED,
    StrAttr:$MC_ENABLE_0,
    StrAttr:$MC_ENABLE_1,
    StrAttr:$MC_ENABLE_2,
    StrAttr:$MC_ENABLE_3,
    StrAttr:$MC_ENABLE_4,
    StrAttr:$MC_ENABLE_5,
    StrAttr:$MC_ENABLE_6,
    StrAttr:$MC_ENABLE_7,
    StrAttr:$MC_ENABLE_APB,
    SI64Attr:$PAGEHIT_PERCENT_00,
    StrAttr:$PHY_ENABLE_00,
    StrAttr:$PHY_ENABLE_01,
    StrAttr:$PHY_ENABLE_02,
    StrAttr:$PHY_ENABLE_03,
    StrAttr:$PHY_ENABLE_04,
    StrAttr:$PHY_ENABLE_05,
    StrAttr:$PHY_ENABLE_06,
    StrAttr:$PHY_ENABLE_07,
    StrAttr:$PHY_ENABLE_08,
    StrAttr:$PHY_ENABLE_09,
    StrAttr:$PHY_ENABLE_10,
    StrAttr:$PHY_ENABLE_11,
    StrAttr:$PHY_ENABLE_12,
    StrAttr:$PHY_ENABLE_13,
    StrAttr:$PHY_ENABLE_14,
    StrAttr:$PHY_ENABLE_15,
    StrAttr:$PHY_ENABLE_APB,
    StrAttr:$PHY_PCLK_INVERT_01,
    SI64Attr:$READ_PERCENT_00,
    SI64Attr:$READ_PERCENT_01,
    SI64Attr:$READ_PERCENT_02,
    SI64Attr:$READ_PERCENT_03,
    SI64Attr:$READ_PERCENT_04,
    SI64Attr:$READ_PERCENT_05,
    SI64Attr:$READ_PERCENT_06,
    SI64Attr:$READ_PERCENT_07,
    SI64Attr:$READ_PERCENT_08,
    SI64Attr:$READ_PERCENT_09,
    SI64Attr:$READ_PERCENT_10,
    SI64Attr:$READ_PERCENT_11,
    SI64Attr:$READ_PERCENT_12,
    SI64Attr:$READ_PERCENT_13,
    SI64Attr:$READ_PERCENT_14,
    SI64Attr:$READ_PERCENT_15,
    StrAttr:$SIM_DEVICE,
    SI64Attr:$STACK_LOCATION,
    StrAttr:$SWITCH_ENABLE,
    SI64Attr:$WRITE_PERCENT_00,
    SI64Attr:$WRITE_PERCENT_01,
    SI64Attr:$WRITE_PERCENT_02,
    SI64Attr:$WRITE_PERCENT_03,
    SI64Attr:$WRITE_PERCENT_04,
    SI64Attr:$WRITE_PERCENT_05,
    SI64Attr:$WRITE_PERCENT_06,
    SI64Attr:$WRITE_PERCENT_07,
    SI64Attr:$WRITE_PERCENT_08,
    SI64Attr:$WRITE_PERCENT_09,
    SI64Attr:$WRITE_PERCENT_10,
    SI64Attr:$WRITE_PERCENT_11,
    SI64Attr:$WRITE_PERCENT_12,
    SI64Attr:$WRITE_PERCENT_13,
    SI64Attr:$WRITE_PERCENT_14,
    SI64Attr:$WRITE_PERCENT_15
  );

  let results = (outs
    I<32>:$APB_0_PRDATA,
    I<1>:$APB_0_PREADY,
    I<1>:$APB_0_PSLVERR,
    I<1>:$AXI_00_ARREADY,
    I<1>:$AXI_00_AWREADY,
    I<6>:$AXI_00_BID,
    I<2>:$AXI_00_BRESP,
    I<1>:$AXI_00_BVALID,
    I<2>:$AXI_00_DFI_AW_AERR_N,
    I<1>:$AXI_00_DFI_CLK_BUF,
    I<8>:$AXI_00_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_00_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_00_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_00_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_00_DFI_INIT_COMPLETE,
    I<1>:$AXI_00_DFI_PHYUPD_REQ,
    I<1>:$AXI_00_DFI_PHY_LP_STATE,
    I<1>:$AXI_00_DFI_RST_N_BUF,
    I<6>:$AXI_00_MC_STATUS,
    I<8>:$AXI_00_PHY_STATUS,
    I<256>:$AXI_00_RDATA,
    I<32>:$AXI_00_RDATA_PARITY,
    I<6>:$AXI_00_RID,
    I<1>:$AXI_00_RLAST,
    I<2>:$AXI_00_RRESP,
    I<1>:$AXI_00_RVALID,
    I<1>:$AXI_00_WREADY,
    I<1>:$AXI_01_ARREADY,
    I<1>:$AXI_01_AWREADY,
    I<6>:$AXI_01_BID,
    I<2>:$AXI_01_BRESP,
    I<1>:$AXI_01_BVALID,
    I<2>:$AXI_01_DFI_AW_AERR_N,
    I<1>:$AXI_01_DFI_CLK_BUF,
    I<8>:$AXI_01_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_01_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_01_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_01_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_01_DFI_INIT_COMPLETE,
    I<1>:$AXI_01_DFI_PHYUPD_REQ,
    I<1>:$AXI_01_DFI_PHY_LP_STATE,
    I<1>:$AXI_01_DFI_RST_N_BUF,
    I<256>:$AXI_01_RDATA,
    I<32>:$AXI_01_RDATA_PARITY,
    I<6>:$AXI_01_RID,
    I<1>:$AXI_01_RLAST,
    I<2>:$AXI_01_RRESP,
    I<1>:$AXI_01_RVALID,
    I<1>:$AXI_01_WREADY,
    I<1>:$AXI_02_ARREADY,
    I<1>:$AXI_02_AWREADY,
    I<6>:$AXI_02_BID,
    I<2>:$AXI_02_BRESP,
    I<1>:$AXI_02_BVALID,
    I<2>:$AXI_02_DFI_AW_AERR_N,
    I<1>:$AXI_02_DFI_CLK_BUF,
    I<8>:$AXI_02_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_02_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_02_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_02_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_02_DFI_INIT_COMPLETE,
    I<1>:$AXI_02_DFI_PHYUPD_REQ,
    I<1>:$AXI_02_DFI_PHY_LP_STATE,
    I<1>:$AXI_02_DFI_RST_N_BUF,
    I<6>:$AXI_02_MC_STATUS,
    I<8>:$AXI_02_PHY_STATUS,
    I<256>:$AXI_02_RDATA,
    I<32>:$AXI_02_RDATA_PARITY,
    I<6>:$AXI_02_RID,
    I<1>:$AXI_02_RLAST,
    I<2>:$AXI_02_RRESP,
    I<1>:$AXI_02_RVALID,
    I<1>:$AXI_02_WREADY,
    I<1>:$AXI_03_ARREADY,
    I<1>:$AXI_03_AWREADY,
    I<6>:$AXI_03_BID,
    I<2>:$AXI_03_BRESP,
    I<1>:$AXI_03_BVALID,
    I<2>:$AXI_03_DFI_AW_AERR_N,
    I<1>:$AXI_03_DFI_CLK_BUF,
    I<8>:$AXI_03_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_03_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_03_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_03_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_03_DFI_INIT_COMPLETE,
    I<1>:$AXI_03_DFI_PHYUPD_REQ,
    I<1>:$AXI_03_DFI_PHY_LP_STATE,
    I<1>:$AXI_03_DFI_RST_N_BUF,
    I<256>:$AXI_03_RDATA,
    I<32>:$AXI_03_RDATA_PARITY,
    I<6>:$AXI_03_RID,
    I<1>:$AXI_03_RLAST,
    I<2>:$AXI_03_RRESP,
    I<1>:$AXI_03_RVALID,
    I<1>:$AXI_03_WREADY,
    I<1>:$AXI_04_ARREADY,
    I<1>:$AXI_04_AWREADY,
    I<6>:$AXI_04_BID,
    I<2>:$AXI_04_BRESP,
    I<1>:$AXI_04_BVALID,
    I<2>:$AXI_04_DFI_AW_AERR_N,
    I<1>:$AXI_04_DFI_CLK_BUF,
    I<8>:$AXI_04_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_04_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_04_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_04_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_04_DFI_INIT_COMPLETE,
    I<1>:$AXI_04_DFI_PHYUPD_REQ,
    I<1>:$AXI_04_DFI_PHY_LP_STATE,
    I<1>:$AXI_04_DFI_RST_N_BUF,
    I<6>:$AXI_04_MC_STATUS,
    I<8>:$AXI_04_PHY_STATUS,
    I<256>:$AXI_04_RDATA,
    I<32>:$AXI_04_RDATA_PARITY,
    I<6>:$AXI_04_RID,
    I<1>:$AXI_04_RLAST,
    I<2>:$AXI_04_RRESP,
    I<1>:$AXI_04_RVALID,
    I<1>:$AXI_04_WREADY,
    I<1>:$AXI_05_ARREADY,
    I<1>:$AXI_05_AWREADY,
    I<6>:$AXI_05_BID,
    I<2>:$AXI_05_BRESP,
    I<1>:$AXI_05_BVALID,
    I<2>:$AXI_05_DFI_AW_AERR_N,
    I<1>:$AXI_05_DFI_CLK_BUF,
    I<8>:$AXI_05_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_05_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_05_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_05_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_05_DFI_INIT_COMPLETE,
    I<1>:$AXI_05_DFI_PHYUPD_REQ,
    I<1>:$AXI_05_DFI_PHY_LP_STATE,
    I<1>:$AXI_05_DFI_RST_N_BUF,
    I<256>:$AXI_05_RDATA,
    I<32>:$AXI_05_RDATA_PARITY,
    I<6>:$AXI_05_RID,
    I<1>:$AXI_05_RLAST,
    I<2>:$AXI_05_RRESP,
    I<1>:$AXI_05_RVALID,
    I<1>:$AXI_05_WREADY,
    I<1>:$AXI_06_ARREADY,
    I<1>:$AXI_06_AWREADY,
    I<6>:$AXI_06_BID,
    I<2>:$AXI_06_BRESP,
    I<1>:$AXI_06_BVALID,
    I<2>:$AXI_06_DFI_AW_AERR_N,
    I<1>:$AXI_06_DFI_CLK_BUF,
    I<8>:$AXI_06_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_06_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_06_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_06_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_06_DFI_INIT_COMPLETE,
    I<1>:$AXI_06_DFI_PHYUPD_REQ,
    I<1>:$AXI_06_DFI_PHY_LP_STATE,
    I<1>:$AXI_06_DFI_RST_N_BUF,
    I<6>:$AXI_06_MC_STATUS,
    I<8>:$AXI_06_PHY_STATUS,
    I<256>:$AXI_06_RDATA,
    I<32>:$AXI_06_RDATA_PARITY,
    I<6>:$AXI_06_RID,
    I<1>:$AXI_06_RLAST,
    I<2>:$AXI_06_RRESP,
    I<1>:$AXI_06_RVALID,
    I<1>:$AXI_06_WREADY,
    I<1>:$AXI_07_ARREADY,
    I<1>:$AXI_07_AWREADY,
    I<6>:$AXI_07_BID,
    I<2>:$AXI_07_BRESP,
    I<1>:$AXI_07_BVALID,
    I<2>:$AXI_07_DFI_AW_AERR_N,
    I<1>:$AXI_07_DFI_CLK_BUF,
    I<8>:$AXI_07_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_07_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_07_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_07_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_07_DFI_INIT_COMPLETE,
    I<1>:$AXI_07_DFI_PHYUPD_REQ,
    I<1>:$AXI_07_DFI_PHY_LP_STATE,
    I<1>:$AXI_07_DFI_RST_N_BUF,
    I<256>:$AXI_07_RDATA,
    I<32>:$AXI_07_RDATA_PARITY,
    I<6>:$AXI_07_RID,
    I<1>:$AXI_07_RLAST,
    I<2>:$AXI_07_RRESP,
    I<1>:$AXI_07_RVALID,
    I<1>:$AXI_07_WREADY,
    I<1>:$AXI_08_ARREADY,
    I<1>:$AXI_08_AWREADY,
    I<6>:$AXI_08_BID,
    I<2>:$AXI_08_BRESP,
    I<1>:$AXI_08_BVALID,
    I<2>:$AXI_08_DFI_AW_AERR_N,
    I<1>:$AXI_08_DFI_CLK_BUF,
    I<8>:$AXI_08_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_08_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_08_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_08_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_08_DFI_INIT_COMPLETE,
    I<1>:$AXI_08_DFI_PHYUPD_REQ,
    I<1>:$AXI_08_DFI_PHY_LP_STATE,
    I<1>:$AXI_08_DFI_RST_N_BUF,
    I<6>:$AXI_08_MC_STATUS,
    I<8>:$AXI_08_PHY_STATUS,
    I<256>:$AXI_08_RDATA,
    I<32>:$AXI_08_RDATA_PARITY,
    I<6>:$AXI_08_RID,
    I<1>:$AXI_08_RLAST,
    I<2>:$AXI_08_RRESP,
    I<1>:$AXI_08_RVALID,
    I<1>:$AXI_08_WREADY,
    I<1>:$AXI_09_ARREADY,
    I<1>:$AXI_09_AWREADY,
    I<6>:$AXI_09_BID,
    I<2>:$AXI_09_BRESP,
    I<1>:$AXI_09_BVALID,
    I<2>:$AXI_09_DFI_AW_AERR_N,
    I<1>:$AXI_09_DFI_CLK_BUF,
    I<8>:$AXI_09_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_09_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_09_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_09_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_09_DFI_INIT_COMPLETE,
    I<1>:$AXI_09_DFI_PHYUPD_REQ,
    I<1>:$AXI_09_DFI_PHY_LP_STATE,
    I<1>:$AXI_09_DFI_RST_N_BUF,
    I<256>:$AXI_09_RDATA,
    I<32>:$AXI_09_RDATA_PARITY,
    I<6>:$AXI_09_RID,
    I<1>:$AXI_09_RLAST,
    I<2>:$AXI_09_RRESP,
    I<1>:$AXI_09_RVALID,
    I<1>:$AXI_09_WREADY,
    I<1>:$AXI_10_ARREADY,
    I<1>:$AXI_10_AWREADY,
    I<6>:$AXI_10_BID,
    I<2>:$AXI_10_BRESP,
    I<1>:$AXI_10_BVALID,
    I<2>:$AXI_10_DFI_AW_AERR_N,
    I<1>:$AXI_10_DFI_CLK_BUF,
    I<8>:$AXI_10_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_10_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_10_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_10_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_10_DFI_INIT_COMPLETE,
    I<1>:$AXI_10_DFI_PHYUPD_REQ,
    I<1>:$AXI_10_DFI_PHY_LP_STATE,
    I<1>:$AXI_10_DFI_RST_N_BUF,
    I<6>:$AXI_10_MC_STATUS,
    I<8>:$AXI_10_PHY_STATUS,
    I<256>:$AXI_10_RDATA,
    I<32>:$AXI_10_RDATA_PARITY,
    I<6>:$AXI_10_RID,
    I<1>:$AXI_10_RLAST,
    I<2>:$AXI_10_RRESP,
    I<1>:$AXI_10_RVALID,
    I<1>:$AXI_10_WREADY,
    I<1>:$AXI_11_ARREADY,
    I<1>:$AXI_11_AWREADY,
    I<6>:$AXI_11_BID,
    I<2>:$AXI_11_BRESP,
    I<1>:$AXI_11_BVALID,
    I<2>:$AXI_11_DFI_AW_AERR_N,
    I<1>:$AXI_11_DFI_CLK_BUF,
    I<8>:$AXI_11_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_11_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_11_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_11_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_11_DFI_INIT_COMPLETE,
    I<1>:$AXI_11_DFI_PHYUPD_REQ,
    I<1>:$AXI_11_DFI_PHY_LP_STATE,
    I<1>:$AXI_11_DFI_RST_N_BUF,
    I<256>:$AXI_11_RDATA,
    I<32>:$AXI_11_RDATA_PARITY,
    I<6>:$AXI_11_RID,
    I<1>:$AXI_11_RLAST,
    I<2>:$AXI_11_RRESP,
    I<1>:$AXI_11_RVALID,
    I<1>:$AXI_11_WREADY,
    I<1>:$AXI_12_ARREADY,
    I<1>:$AXI_12_AWREADY,
    I<6>:$AXI_12_BID,
    I<2>:$AXI_12_BRESP,
    I<1>:$AXI_12_BVALID,
    I<2>:$AXI_12_DFI_AW_AERR_N,
    I<1>:$AXI_12_DFI_CLK_BUF,
    I<8>:$AXI_12_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_12_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_12_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_12_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_12_DFI_INIT_COMPLETE,
    I<1>:$AXI_12_DFI_PHYUPD_REQ,
    I<1>:$AXI_12_DFI_PHY_LP_STATE,
    I<1>:$AXI_12_DFI_RST_N_BUF,
    I<6>:$AXI_12_MC_STATUS,
    I<8>:$AXI_12_PHY_STATUS,
    I<256>:$AXI_12_RDATA,
    I<32>:$AXI_12_RDATA_PARITY,
    I<6>:$AXI_12_RID,
    I<1>:$AXI_12_RLAST,
    I<2>:$AXI_12_RRESP,
    I<1>:$AXI_12_RVALID,
    I<1>:$AXI_12_WREADY,
    I<1>:$AXI_13_ARREADY,
    I<1>:$AXI_13_AWREADY,
    I<6>:$AXI_13_BID,
    I<2>:$AXI_13_BRESP,
    I<1>:$AXI_13_BVALID,
    I<2>:$AXI_13_DFI_AW_AERR_N,
    I<1>:$AXI_13_DFI_CLK_BUF,
    I<8>:$AXI_13_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_13_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_13_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_13_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_13_DFI_INIT_COMPLETE,
    I<1>:$AXI_13_DFI_PHYUPD_REQ,
    I<1>:$AXI_13_DFI_PHY_LP_STATE,
    I<1>:$AXI_13_DFI_RST_N_BUF,
    I<256>:$AXI_13_RDATA,
    I<32>:$AXI_13_RDATA_PARITY,
    I<6>:$AXI_13_RID,
    I<1>:$AXI_13_RLAST,
    I<2>:$AXI_13_RRESP,
    I<1>:$AXI_13_RVALID,
    I<1>:$AXI_13_WREADY,
    I<1>:$AXI_14_ARREADY,
    I<1>:$AXI_14_AWREADY,
    I<6>:$AXI_14_BID,
    I<2>:$AXI_14_BRESP,
    I<1>:$AXI_14_BVALID,
    I<2>:$AXI_14_DFI_AW_AERR_N,
    I<1>:$AXI_14_DFI_CLK_BUF,
    I<8>:$AXI_14_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_14_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_14_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_14_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_14_DFI_INIT_COMPLETE,
    I<1>:$AXI_14_DFI_PHYUPD_REQ,
    I<1>:$AXI_14_DFI_PHY_LP_STATE,
    I<1>:$AXI_14_DFI_RST_N_BUF,
    I<6>:$AXI_14_MC_STATUS,
    I<8>:$AXI_14_PHY_STATUS,
    I<256>:$AXI_14_RDATA,
    I<32>:$AXI_14_RDATA_PARITY,
    I<6>:$AXI_14_RID,
    I<1>:$AXI_14_RLAST,
    I<2>:$AXI_14_RRESP,
    I<1>:$AXI_14_RVALID,
    I<1>:$AXI_14_WREADY,
    I<1>:$AXI_15_ARREADY,
    I<1>:$AXI_15_AWREADY,
    I<6>:$AXI_15_BID,
    I<2>:$AXI_15_BRESP,
    I<1>:$AXI_15_BVALID,
    I<2>:$AXI_15_DFI_AW_AERR_N,
    I<1>:$AXI_15_DFI_CLK_BUF,
    I<8>:$AXI_15_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_15_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_15_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_15_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_15_DFI_INIT_COMPLETE,
    I<1>:$AXI_15_DFI_PHYUPD_REQ,
    I<1>:$AXI_15_DFI_PHY_LP_STATE,
    I<1>:$AXI_15_DFI_RST_N_BUF,
    I<256>:$AXI_15_RDATA,
    I<32>:$AXI_15_RDATA_PARITY,
    I<6>:$AXI_15_RID,
    I<1>:$AXI_15_RLAST,
    I<2>:$AXI_15_RRESP,
    I<1>:$AXI_15_RVALID,
    I<1>:$AXI_15_WREADY,
    I<1>:$DRAM_0_STAT_CATTRIP,
    I<3>:$DRAM_0_STAT_TEMP
  );
}

def HBMuREFuCLK : XilinxPrimitiveOp<"HBM_REF_CLK", []> {
  let summary = "HBM_REF_CLK Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$REF_CLK

    // HBM_REF_CLK does not contain any parameters
  );

  let results = (outs
  );
}

def HBMuSNGLBLIuINTFuAPB : XilinxPrimitiveOp<"HBM_SNGLBLI_INTF_APB", []> {
  let summary = "HBM_SNGLBLI_INTF_APB Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<22>:$PADDR,
    I<1>:$PCLK,
    I<1>:$PENABLE,
    I<1>:$PRESET_N,
    I<1>:$PSEL,
    I<32>:$PWDATA,
    I<1>:$PWRITE,

    // HBM_SNGLBLI_INTF_APB parameters follows
    StrAttr:$CLK_SEL,
    APIntAttr<I<1>>:$IS_PCLK_INVERTED,
    APIntAttr<I<1>>:$IS_PRESET_N_INVERTED,
    StrAttr:$MC_ENABLE,
    StrAttr:$PHY_ENABLE,
    StrAttr:$PHY_PCLK_INVERT,
    StrAttr:$SWITCH_ENABLE
  );

  let results = (outs
    I<1>:$CATTRIP_PIPE,
    I<32>:$PRDATA_PIPE,
    I<1>:$PREADY_PIPE,
    I<1>:$PSLVERR_PIPE,
    I<3>:$TEMP_PIPE
  );
}

def HBMuSNGLBLIuINTFuAXI : XilinxPrimitiveOp<"HBM_SNGLBLI_INTF_AXI", []> {
  let summary = "HBM_SNGLBLI_INTF_AXI Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$ACLK,
    I<37>:$ARADDR,
    I<2>:$ARBURST,
    I<1>:$ARESET_N,
    I<6>:$ARID,
    I<4>:$ARLEN,
    I<3>:$ARSIZE,
    I<1>:$ARVALID,
    I<37>:$AWADDR,
    I<2>:$AWBURST,
    I<6>:$AWID,
    I<4>:$AWLEN,
    I<3>:$AWSIZE,
    I<1>:$AWVALID,
    I<1>:$BREADY,
    I<1>:$BSCAN_CK,
    I<1>:$DFI_LP_PWR_X_REQ,
    I<1>:$MBIST_EN,
    I<1>:$RREADY,
    I<256>:$WDATA,
    I<32>:$WDATA_PARITY,
    I<1>:$WLAST,
    I<32>:$WSTRB,
    I<1>:$WVALID,

    // HBM_SNGLBLI_INTF_AXI parameters follows
    StrAttr:$CLK_SEL,
    SI64Attr:$DATARATE,
    APIntAttr<I<1>>:$IS_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_ARESET_N_INVERTED,
    StrAttr:$MC_ENABLE,
    SI64Attr:$PAGEHIT_PERCENT,
    StrAttr:$PHY_ENABLE,
    SI64Attr:$READ_PERCENT,
    StrAttr:$SWITCH_ENABLE,
    SI64Attr:$WRITE_PERCENT
  );

  let results = (outs
    I<1>:$ARREADY_PIPE,
    I<1>:$AWREADY_PIPE,
    I<6>:$BID_PIPE,
    I<2>:$BRESP_PIPE,
    I<1>:$BVALID_PIPE,
    I<2>:$DFI_AW_AERR_N_PIPE,
    I<1>:$DFI_CLK_BUF,
    I<1>:$DFI_CTRLUPD_ACK_PIPE,
    I<8>:$DFI_DBI_BYTE_DISABLE_PIPE,
    I<21>:$DFI_DW_RDDATA_DBI_PIPE,
    I<8>:$DFI_DW_RDDATA_DERR_PIPE,
    I<2>:$DFI_DW_RDDATA_PAR_VALID_PIPE,
    I<2>:$DFI_DW_RDDATA_VALID_PIPE,
    I<1>:$DFI_INIT_COMPLETE_PIPE,
    I<1>:$DFI_PHYUPD_REQ_PIPE,
    I<1>:$DFI_PHYUPD_TYPE_PIPE,
    I<1>:$DFI_PHY_LP_STATE_PIPE,
    I<1>:$DFI_RST_N_BUF,
    I<6>:$MC_STATUS,
    I<8>:$PHY_STATUS,
    I<32>:$RDATA_PARITY_PIPE,
    I<256>:$RDATA_PIPE,
    I<6>:$RID_PIPE,
    I<1>:$RLAST_PIPE,
    I<2>:$RRESP_PIPE,
    I<1>:$RVALID_PIPE,
    I<6>:$STATUS,
    I<1>:$WREADY_PIPE
  );
}

def HBMuTWOuSTACKuINTF : XilinxPrimitiveOp<"HBM_TWO_STACK_INTF", []> {
  let summary = "HBM_TWO_STACK_INTF Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<22>:$APB_0_PADDR,
    I<1>:$APB_0_PCLK,
    I<1>:$APB_0_PENABLE,
    I<1>:$APB_0_PRESET_N,
    I<1>:$APB_0_PSEL,
    I<32>:$APB_0_PWDATA,
    I<1>:$APB_0_PWRITE,
    I<22>:$APB_1_PADDR,
    I<1>:$APB_1_PCLK,
    I<1>:$APB_1_PENABLE,
    I<1>:$APB_1_PRESET_N,
    I<1>:$APB_1_PSEL,
    I<32>:$APB_1_PWDATA,
    I<1>:$APB_1_PWRITE,
    I<1>:$AXI_00_ACLK,
    I<37>:$AXI_00_ARADDR,
    I<2>:$AXI_00_ARBURST,
    I<1>:$AXI_00_ARESET_N,
    I<6>:$AXI_00_ARID,
    I<4>:$AXI_00_ARLEN,
    I<3>:$AXI_00_ARSIZE,
    I<1>:$AXI_00_ARVALID,
    I<37>:$AXI_00_AWADDR,
    I<2>:$AXI_00_AWBURST,
    I<6>:$AXI_00_AWID,
    I<4>:$AXI_00_AWLEN,
    I<3>:$AXI_00_AWSIZE,
    I<1>:$AXI_00_AWVALID,
    I<1>:$AXI_00_BREADY,
    I<1>:$AXI_00_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_00_RREADY,
    I<256>:$AXI_00_WDATA,
    I<32>:$AXI_00_WDATA_PARITY,
    I<1>:$AXI_00_WLAST,
    I<32>:$AXI_00_WSTRB,
    I<1>:$AXI_00_WVALID,
    I<1>:$AXI_01_ACLK,
    I<37>:$AXI_01_ARADDR,
    I<2>:$AXI_01_ARBURST,
    I<1>:$AXI_01_ARESET_N,
    I<6>:$AXI_01_ARID,
    I<4>:$AXI_01_ARLEN,
    I<3>:$AXI_01_ARSIZE,
    I<1>:$AXI_01_ARVALID,
    I<37>:$AXI_01_AWADDR,
    I<2>:$AXI_01_AWBURST,
    I<6>:$AXI_01_AWID,
    I<4>:$AXI_01_AWLEN,
    I<3>:$AXI_01_AWSIZE,
    I<1>:$AXI_01_AWVALID,
    I<1>:$AXI_01_BREADY,
    I<1>:$AXI_01_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_01_RREADY,
    I<256>:$AXI_01_WDATA,
    I<32>:$AXI_01_WDATA_PARITY,
    I<1>:$AXI_01_WLAST,
    I<32>:$AXI_01_WSTRB,
    I<1>:$AXI_01_WVALID,
    I<1>:$AXI_02_ACLK,
    I<37>:$AXI_02_ARADDR,
    I<2>:$AXI_02_ARBURST,
    I<1>:$AXI_02_ARESET_N,
    I<6>:$AXI_02_ARID,
    I<4>:$AXI_02_ARLEN,
    I<3>:$AXI_02_ARSIZE,
    I<1>:$AXI_02_ARVALID,
    I<37>:$AXI_02_AWADDR,
    I<2>:$AXI_02_AWBURST,
    I<6>:$AXI_02_AWID,
    I<4>:$AXI_02_AWLEN,
    I<3>:$AXI_02_AWSIZE,
    I<1>:$AXI_02_AWVALID,
    I<1>:$AXI_02_BREADY,
    I<1>:$AXI_02_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_02_RREADY,
    I<256>:$AXI_02_WDATA,
    I<32>:$AXI_02_WDATA_PARITY,
    I<1>:$AXI_02_WLAST,
    I<32>:$AXI_02_WSTRB,
    I<1>:$AXI_02_WVALID,
    I<1>:$AXI_03_ACLK,
    I<37>:$AXI_03_ARADDR,
    I<2>:$AXI_03_ARBURST,
    I<1>:$AXI_03_ARESET_N,
    I<6>:$AXI_03_ARID,
    I<4>:$AXI_03_ARLEN,
    I<3>:$AXI_03_ARSIZE,
    I<1>:$AXI_03_ARVALID,
    I<37>:$AXI_03_AWADDR,
    I<2>:$AXI_03_AWBURST,
    I<6>:$AXI_03_AWID,
    I<4>:$AXI_03_AWLEN,
    I<3>:$AXI_03_AWSIZE,
    I<1>:$AXI_03_AWVALID,
    I<1>:$AXI_03_BREADY,
    I<1>:$AXI_03_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_03_RREADY,
    I<256>:$AXI_03_WDATA,
    I<32>:$AXI_03_WDATA_PARITY,
    I<1>:$AXI_03_WLAST,
    I<32>:$AXI_03_WSTRB,
    I<1>:$AXI_03_WVALID,
    I<1>:$AXI_04_ACLK,
    I<37>:$AXI_04_ARADDR,
    I<2>:$AXI_04_ARBURST,
    I<1>:$AXI_04_ARESET_N,
    I<6>:$AXI_04_ARID,
    I<4>:$AXI_04_ARLEN,
    I<3>:$AXI_04_ARSIZE,
    I<1>:$AXI_04_ARVALID,
    I<37>:$AXI_04_AWADDR,
    I<2>:$AXI_04_AWBURST,
    I<6>:$AXI_04_AWID,
    I<4>:$AXI_04_AWLEN,
    I<3>:$AXI_04_AWSIZE,
    I<1>:$AXI_04_AWVALID,
    I<1>:$AXI_04_BREADY,
    I<1>:$AXI_04_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_04_RREADY,
    I<256>:$AXI_04_WDATA,
    I<32>:$AXI_04_WDATA_PARITY,
    I<1>:$AXI_04_WLAST,
    I<32>:$AXI_04_WSTRB,
    I<1>:$AXI_04_WVALID,
    I<1>:$AXI_05_ACLK,
    I<37>:$AXI_05_ARADDR,
    I<2>:$AXI_05_ARBURST,
    I<1>:$AXI_05_ARESET_N,
    I<6>:$AXI_05_ARID,
    I<4>:$AXI_05_ARLEN,
    I<3>:$AXI_05_ARSIZE,
    I<1>:$AXI_05_ARVALID,
    I<37>:$AXI_05_AWADDR,
    I<2>:$AXI_05_AWBURST,
    I<6>:$AXI_05_AWID,
    I<4>:$AXI_05_AWLEN,
    I<3>:$AXI_05_AWSIZE,
    I<1>:$AXI_05_AWVALID,
    I<1>:$AXI_05_BREADY,
    I<1>:$AXI_05_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_05_RREADY,
    I<256>:$AXI_05_WDATA,
    I<32>:$AXI_05_WDATA_PARITY,
    I<1>:$AXI_05_WLAST,
    I<32>:$AXI_05_WSTRB,
    I<1>:$AXI_05_WVALID,
    I<1>:$AXI_06_ACLK,
    I<37>:$AXI_06_ARADDR,
    I<2>:$AXI_06_ARBURST,
    I<1>:$AXI_06_ARESET_N,
    I<6>:$AXI_06_ARID,
    I<4>:$AXI_06_ARLEN,
    I<3>:$AXI_06_ARSIZE,
    I<1>:$AXI_06_ARVALID,
    I<37>:$AXI_06_AWADDR,
    I<2>:$AXI_06_AWBURST,
    I<6>:$AXI_06_AWID,
    I<4>:$AXI_06_AWLEN,
    I<3>:$AXI_06_AWSIZE,
    I<1>:$AXI_06_AWVALID,
    I<1>:$AXI_06_BREADY,
    I<1>:$AXI_06_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_06_RREADY,
    I<256>:$AXI_06_WDATA,
    I<32>:$AXI_06_WDATA_PARITY,
    I<1>:$AXI_06_WLAST,
    I<32>:$AXI_06_WSTRB,
    I<1>:$AXI_06_WVALID,
    I<1>:$AXI_07_ACLK,
    I<37>:$AXI_07_ARADDR,
    I<2>:$AXI_07_ARBURST,
    I<1>:$AXI_07_ARESET_N,
    I<6>:$AXI_07_ARID,
    I<4>:$AXI_07_ARLEN,
    I<3>:$AXI_07_ARSIZE,
    I<1>:$AXI_07_ARVALID,
    I<37>:$AXI_07_AWADDR,
    I<2>:$AXI_07_AWBURST,
    I<6>:$AXI_07_AWID,
    I<4>:$AXI_07_AWLEN,
    I<3>:$AXI_07_AWSIZE,
    I<1>:$AXI_07_AWVALID,
    I<1>:$AXI_07_BREADY,
    I<1>:$AXI_07_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_07_RREADY,
    I<256>:$AXI_07_WDATA,
    I<32>:$AXI_07_WDATA_PARITY,
    I<1>:$AXI_07_WLAST,
    I<32>:$AXI_07_WSTRB,
    I<1>:$AXI_07_WVALID,
    I<1>:$AXI_08_ACLK,
    I<37>:$AXI_08_ARADDR,
    I<2>:$AXI_08_ARBURST,
    I<1>:$AXI_08_ARESET_N,
    I<6>:$AXI_08_ARID,
    I<4>:$AXI_08_ARLEN,
    I<3>:$AXI_08_ARSIZE,
    I<1>:$AXI_08_ARVALID,
    I<37>:$AXI_08_AWADDR,
    I<2>:$AXI_08_AWBURST,
    I<6>:$AXI_08_AWID,
    I<4>:$AXI_08_AWLEN,
    I<3>:$AXI_08_AWSIZE,
    I<1>:$AXI_08_AWVALID,
    I<1>:$AXI_08_BREADY,
    I<1>:$AXI_08_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_08_RREADY,
    I<256>:$AXI_08_WDATA,
    I<32>:$AXI_08_WDATA_PARITY,
    I<1>:$AXI_08_WLAST,
    I<32>:$AXI_08_WSTRB,
    I<1>:$AXI_08_WVALID,
    I<1>:$AXI_09_ACLK,
    I<37>:$AXI_09_ARADDR,
    I<2>:$AXI_09_ARBURST,
    I<1>:$AXI_09_ARESET_N,
    I<6>:$AXI_09_ARID,
    I<4>:$AXI_09_ARLEN,
    I<3>:$AXI_09_ARSIZE,
    I<1>:$AXI_09_ARVALID,
    I<37>:$AXI_09_AWADDR,
    I<2>:$AXI_09_AWBURST,
    I<6>:$AXI_09_AWID,
    I<4>:$AXI_09_AWLEN,
    I<3>:$AXI_09_AWSIZE,
    I<1>:$AXI_09_AWVALID,
    I<1>:$AXI_09_BREADY,
    I<1>:$AXI_09_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_09_RREADY,
    I<256>:$AXI_09_WDATA,
    I<32>:$AXI_09_WDATA_PARITY,
    I<1>:$AXI_09_WLAST,
    I<32>:$AXI_09_WSTRB,
    I<1>:$AXI_09_WVALID,
    I<1>:$AXI_10_ACLK,
    I<37>:$AXI_10_ARADDR,
    I<2>:$AXI_10_ARBURST,
    I<1>:$AXI_10_ARESET_N,
    I<6>:$AXI_10_ARID,
    I<4>:$AXI_10_ARLEN,
    I<3>:$AXI_10_ARSIZE,
    I<1>:$AXI_10_ARVALID,
    I<37>:$AXI_10_AWADDR,
    I<2>:$AXI_10_AWBURST,
    I<6>:$AXI_10_AWID,
    I<4>:$AXI_10_AWLEN,
    I<3>:$AXI_10_AWSIZE,
    I<1>:$AXI_10_AWVALID,
    I<1>:$AXI_10_BREADY,
    I<1>:$AXI_10_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_10_RREADY,
    I<256>:$AXI_10_WDATA,
    I<32>:$AXI_10_WDATA_PARITY,
    I<1>:$AXI_10_WLAST,
    I<32>:$AXI_10_WSTRB,
    I<1>:$AXI_10_WVALID,
    I<1>:$AXI_11_ACLK,
    I<37>:$AXI_11_ARADDR,
    I<2>:$AXI_11_ARBURST,
    I<1>:$AXI_11_ARESET_N,
    I<6>:$AXI_11_ARID,
    I<4>:$AXI_11_ARLEN,
    I<3>:$AXI_11_ARSIZE,
    I<1>:$AXI_11_ARVALID,
    I<37>:$AXI_11_AWADDR,
    I<2>:$AXI_11_AWBURST,
    I<6>:$AXI_11_AWID,
    I<4>:$AXI_11_AWLEN,
    I<3>:$AXI_11_AWSIZE,
    I<1>:$AXI_11_AWVALID,
    I<1>:$AXI_11_BREADY,
    I<1>:$AXI_11_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_11_RREADY,
    I<256>:$AXI_11_WDATA,
    I<32>:$AXI_11_WDATA_PARITY,
    I<1>:$AXI_11_WLAST,
    I<32>:$AXI_11_WSTRB,
    I<1>:$AXI_11_WVALID,
    I<1>:$AXI_12_ACLK,
    I<37>:$AXI_12_ARADDR,
    I<2>:$AXI_12_ARBURST,
    I<1>:$AXI_12_ARESET_N,
    I<6>:$AXI_12_ARID,
    I<4>:$AXI_12_ARLEN,
    I<3>:$AXI_12_ARSIZE,
    I<1>:$AXI_12_ARVALID,
    I<37>:$AXI_12_AWADDR,
    I<2>:$AXI_12_AWBURST,
    I<6>:$AXI_12_AWID,
    I<4>:$AXI_12_AWLEN,
    I<3>:$AXI_12_AWSIZE,
    I<1>:$AXI_12_AWVALID,
    I<1>:$AXI_12_BREADY,
    I<1>:$AXI_12_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_12_RREADY,
    I<256>:$AXI_12_WDATA,
    I<32>:$AXI_12_WDATA_PARITY,
    I<1>:$AXI_12_WLAST,
    I<32>:$AXI_12_WSTRB,
    I<1>:$AXI_12_WVALID,
    I<1>:$AXI_13_ACLK,
    I<37>:$AXI_13_ARADDR,
    I<2>:$AXI_13_ARBURST,
    I<1>:$AXI_13_ARESET_N,
    I<6>:$AXI_13_ARID,
    I<4>:$AXI_13_ARLEN,
    I<3>:$AXI_13_ARSIZE,
    I<1>:$AXI_13_ARVALID,
    I<37>:$AXI_13_AWADDR,
    I<2>:$AXI_13_AWBURST,
    I<6>:$AXI_13_AWID,
    I<4>:$AXI_13_AWLEN,
    I<3>:$AXI_13_AWSIZE,
    I<1>:$AXI_13_AWVALID,
    I<1>:$AXI_13_BREADY,
    I<1>:$AXI_13_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_13_RREADY,
    I<256>:$AXI_13_WDATA,
    I<32>:$AXI_13_WDATA_PARITY,
    I<1>:$AXI_13_WLAST,
    I<32>:$AXI_13_WSTRB,
    I<1>:$AXI_13_WVALID,
    I<1>:$AXI_14_ACLK,
    I<37>:$AXI_14_ARADDR,
    I<2>:$AXI_14_ARBURST,
    I<1>:$AXI_14_ARESET_N,
    I<6>:$AXI_14_ARID,
    I<4>:$AXI_14_ARLEN,
    I<3>:$AXI_14_ARSIZE,
    I<1>:$AXI_14_ARVALID,
    I<37>:$AXI_14_AWADDR,
    I<2>:$AXI_14_AWBURST,
    I<6>:$AXI_14_AWID,
    I<4>:$AXI_14_AWLEN,
    I<3>:$AXI_14_AWSIZE,
    I<1>:$AXI_14_AWVALID,
    I<1>:$AXI_14_BREADY,
    I<1>:$AXI_14_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_14_RREADY,
    I<256>:$AXI_14_WDATA,
    I<32>:$AXI_14_WDATA_PARITY,
    I<1>:$AXI_14_WLAST,
    I<32>:$AXI_14_WSTRB,
    I<1>:$AXI_14_WVALID,
    I<1>:$AXI_15_ACLK,
    I<37>:$AXI_15_ARADDR,
    I<2>:$AXI_15_ARBURST,
    I<1>:$AXI_15_ARESET_N,
    I<6>:$AXI_15_ARID,
    I<4>:$AXI_15_ARLEN,
    I<3>:$AXI_15_ARSIZE,
    I<1>:$AXI_15_ARVALID,
    I<37>:$AXI_15_AWADDR,
    I<2>:$AXI_15_AWBURST,
    I<6>:$AXI_15_AWID,
    I<4>:$AXI_15_AWLEN,
    I<3>:$AXI_15_AWSIZE,
    I<1>:$AXI_15_AWVALID,
    I<1>:$AXI_15_BREADY,
    I<1>:$AXI_15_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_15_RREADY,
    I<256>:$AXI_15_WDATA,
    I<32>:$AXI_15_WDATA_PARITY,
    I<1>:$AXI_15_WLAST,
    I<32>:$AXI_15_WSTRB,
    I<1>:$AXI_15_WVALID,
    I<1>:$AXI_16_ACLK,
    I<37>:$AXI_16_ARADDR,
    I<2>:$AXI_16_ARBURST,
    I<1>:$AXI_16_ARESET_N,
    I<6>:$AXI_16_ARID,
    I<4>:$AXI_16_ARLEN,
    I<3>:$AXI_16_ARSIZE,
    I<1>:$AXI_16_ARVALID,
    I<37>:$AXI_16_AWADDR,
    I<2>:$AXI_16_AWBURST,
    I<6>:$AXI_16_AWID,
    I<4>:$AXI_16_AWLEN,
    I<3>:$AXI_16_AWSIZE,
    I<1>:$AXI_16_AWVALID,
    I<1>:$AXI_16_BREADY,
    I<1>:$AXI_16_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_16_RREADY,
    I<256>:$AXI_16_WDATA,
    I<32>:$AXI_16_WDATA_PARITY,
    I<1>:$AXI_16_WLAST,
    I<32>:$AXI_16_WSTRB,
    I<1>:$AXI_16_WVALID,
    I<1>:$AXI_17_ACLK,
    I<37>:$AXI_17_ARADDR,
    I<2>:$AXI_17_ARBURST,
    I<1>:$AXI_17_ARESET_N,
    I<6>:$AXI_17_ARID,
    I<4>:$AXI_17_ARLEN,
    I<3>:$AXI_17_ARSIZE,
    I<1>:$AXI_17_ARVALID,
    I<37>:$AXI_17_AWADDR,
    I<2>:$AXI_17_AWBURST,
    I<6>:$AXI_17_AWID,
    I<4>:$AXI_17_AWLEN,
    I<3>:$AXI_17_AWSIZE,
    I<1>:$AXI_17_AWVALID,
    I<1>:$AXI_17_BREADY,
    I<1>:$AXI_17_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_17_RREADY,
    I<256>:$AXI_17_WDATA,
    I<32>:$AXI_17_WDATA_PARITY,
    I<1>:$AXI_17_WLAST,
    I<32>:$AXI_17_WSTRB,
    I<1>:$AXI_17_WVALID,
    I<1>:$AXI_18_ACLK,
    I<37>:$AXI_18_ARADDR,
    I<2>:$AXI_18_ARBURST,
    I<1>:$AXI_18_ARESET_N,
    I<6>:$AXI_18_ARID,
    I<4>:$AXI_18_ARLEN,
    I<3>:$AXI_18_ARSIZE,
    I<1>:$AXI_18_ARVALID,
    I<37>:$AXI_18_AWADDR,
    I<2>:$AXI_18_AWBURST,
    I<6>:$AXI_18_AWID,
    I<4>:$AXI_18_AWLEN,
    I<3>:$AXI_18_AWSIZE,
    I<1>:$AXI_18_AWVALID,
    I<1>:$AXI_18_BREADY,
    I<1>:$AXI_18_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_18_RREADY,
    I<256>:$AXI_18_WDATA,
    I<32>:$AXI_18_WDATA_PARITY,
    I<1>:$AXI_18_WLAST,
    I<32>:$AXI_18_WSTRB,
    I<1>:$AXI_18_WVALID,
    I<1>:$AXI_19_ACLK,
    I<37>:$AXI_19_ARADDR,
    I<2>:$AXI_19_ARBURST,
    I<1>:$AXI_19_ARESET_N,
    I<6>:$AXI_19_ARID,
    I<4>:$AXI_19_ARLEN,
    I<3>:$AXI_19_ARSIZE,
    I<1>:$AXI_19_ARVALID,
    I<37>:$AXI_19_AWADDR,
    I<2>:$AXI_19_AWBURST,
    I<6>:$AXI_19_AWID,
    I<4>:$AXI_19_AWLEN,
    I<3>:$AXI_19_AWSIZE,
    I<1>:$AXI_19_AWVALID,
    I<1>:$AXI_19_BREADY,
    I<1>:$AXI_19_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_19_RREADY,
    I<256>:$AXI_19_WDATA,
    I<32>:$AXI_19_WDATA_PARITY,
    I<1>:$AXI_19_WLAST,
    I<32>:$AXI_19_WSTRB,
    I<1>:$AXI_19_WVALID,
    I<1>:$AXI_20_ACLK,
    I<37>:$AXI_20_ARADDR,
    I<2>:$AXI_20_ARBURST,
    I<1>:$AXI_20_ARESET_N,
    I<6>:$AXI_20_ARID,
    I<4>:$AXI_20_ARLEN,
    I<3>:$AXI_20_ARSIZE,
    I<1>:$AXI_20_ARVALID,
    I<37>:$AXI_20_AWADDR,
    I<2>:$AXI_20_AWBURST,
    I<6>:$AXI_20_AWID,
    I<4>:$AXI_20_AWLEN,
    I<3>:$AXI_20_AWSIZE,
    I<1>:$AXI_20_AWVALID,
    I<1>:$AXI_20_BREADY,
    I<1>:$AXI_20_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_20_RREADY,
    I<256>:$AXI_20_WDATA,
    I<32>:$AXI_20_WDATA_PARITY,
    I<1>:$AXI_20_WLAST,
    I<32>:$AXI_20_WSTRB,
    I<1>:$AXI_20_WVALID,
    I<1>:$AXI_21_ACLK,
    I<37>:$AXI_21_ARADDR,
    I<2>:$AXI_21_ARBURST,
    I<1>:$AXI_21_ARESET_N,
    I<6>:$AXI_21_ARID,
    I<4>:$AXI_21_ARLEN,
    I<3>:$AXI_21_ARSIZE,
    I<1>:$AXI_21_ARVALID,
    I<37>:$AXI_21_AWADDR,
    I<2>:$AXI_21_AWBURST,
    I<6>:$AXI_21_AWID,
    I<4>:$AXI_21_AWLEN,
    I<3>:$AXI_21_AWSIZE,
    I<1>:$AXI_21_AWVALID,
    I<1>:$AXI_21_BREADY,
    I<1>:$AXI_21_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_21_RREADY,
    I<256>:$AXI_21_WDATA,
    I<32>:$AXI_21_WDATA_PARITY,
    I<1>:$AXI_21_WLAST,
    I<32>:$AXI_21_WSTRB,
    I<1>:$AXI_21_WVALID,
    I<1>:$AXI_22_ACLK,
    I<37>:$AXI_22_ARADDR,
    I<2>:$AXI_22_ARBURST,
    I<1>:$AXI_22_ARESET_N,
    I<6>:$AXI_22_ARID,
    I<4>:$AXI_22_ARLEN,
    I<3>:$AXI_22_ARSIZE,
    I<1>:$AXI_22_ARVALID,
    I<37>:$AXI_22_AWADDR,
    I<2>:$AXI_22_AWBURST,
    I<6>:$AXI_22_AWID,
    I<4>:$AXI_22_AWLEN,
    I<3>:$AXI_22_AWSIZE,
    I<1>:$AXI_22_AWVALID,
    I<1>:$AXI_22_BREADY,
    I<1>:$AXI_22_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_22_RREADY,
    I<256>:$AXI_22_WDATA,
    I<32>:$AXI_22_WDATA_PARITY,
    I<1>:$AXI_22_WLAST,
    I<32>:$AXI_22_WSTRB,
    I<1>:$AXI_22_WVALID,
    I<1>:$AXI_23_ACLK,
    I<37>:$AXI_23_ARADDR,
    I<2>:$AXI_23_ARBURST,
    I<1>:$AXI_23_ARESET_N,
    I<6>:$AXI_23_ARID,
    I<4>:$AXI_23_ARLEN,
    I<3>:$AXI_23_ARSIZE,
    I<1>:$AXI_23_ARVALID,
    I<37>:$AXI_23_AWADDR,
    I<2>:$AXI_23_AWBURST,
    I<6>:$AXI_23_AWID,
    I<4>:$AXI_23_AWLEN,
    I<3>:$AXI_23_AWSIZE,
    I<1>:$AXI_23_AWVALID,
    I<1>:$AXI_23_BREADY,
    I<1>:$AXI_23_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_23_RREADY,
    I<256>:$AXI_23_WDATA,
    I<32>:$AXI_23_WDATA_PARITY,
    I<1>:$AXI_23_WLAST,
    I<32>:$AXI_23_WSTRB,
    I<1>:$AXI_23_WVALID,
    I<1>:$AXI_24_ACLK,
    I<37>:$AXI_24_ARADDR,
    I<2>:$AXI_24_ARBURST,
    I<1>:$AXI_24_ARESET_N,
    I<6>:$AXI_24_ARID,
    I<4>:$AXI_24_ARLEN,
    I<3>:$AXI_24_ARSIZE,
    I<1>:$AXI_24_ARVALID,
    I<37>:$AXI_24_AWADDR,
    I<2>:$AXI_24_AWBURST,
    I<6>:$AXI_24_AWID,
    I<4>:$AXI_24_AWLEN,
    I<3>:$AXI_24_AWSIZE,
    I<1>:$AXI_24_AWVALID,
    I<1>:$AXI_24_BREADY,
    I<1>:$AXI_24_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_24_RREADY,
    I<256>:$AXI_24_WDATA,
    I<32>:$AXI_24_WDATA_PARITY,
    I<1>:$AXI_24_WLAST,
    I<32>:$AXI_24_WSTRB,
    I<1>:$AXI_24_WVALID,
    I<1>:$AXI_25_ACLK,
    I<37>:$AXI_25_ARADDR,
    I<2>:$AXI_25_ARBURST,
    I<1>:$AXI_25_ARESET_N,
    I<6>:$AXI_25_ARID,
    I<4>:$AXI_25_ARLEN,
    I<3>:$AXI_25_ARSIZE,
    I<1>:$AXI_25_ARVALID,
    I<37>:$AXI_25_AWADDR,
    I<2>:$AXI_25_AWBURST,
    I<6>:$AXI_25_AWID,
    I<4>:$AXI_25_AWLEN,
    I<3>:$AXI_25_AWSIZE,
    I<1>:$AXI_25_AWVALID,
    I<1>:$AXI_25_BREADY,
    I<1>:$AXI_25_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_25_RREADY,
    I<256>:$AXI_25_WDATA,
    I<32>:$AXI_25_WDATA_PARITY,
    I<1>:$AXI_25_WLAST,
    I<32>:$AXI_25_WSTRB,
    I<1>:$AXI_25_WVALID,
    I<1>:$AXI_26_ACLK,
    I<37>:$AXI_26_ARADDR,
    I<2>:$AXI_26_ARBURST,
    I<1>:$AXI_26_ARESET_N,
    I<6>:$AXI_26_ARID,
    I<4>:$AXI_26_ARLEN,
    I<3>:$AXI_26_ARSIZE,
    I<1>:$AXI_26_ARVALID,
    I<37>:$AXI_26_AWADDR,
    I<2>:$AXI_26_AWBURST,
    I<6>:$AXI_26_AWID,
    I<4>:$AXI_26_AWLEN,
    I<3>:$AXI_26_AWSIZE,
    I<1>:$AXI_26_AWVALID,
    I<1>:$AXI_26_BREADY,
    I<1>:$AXI_26_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_26_RREADY,
    I<256>:$AXI_26_WDATA,
    I<32>:$AXI_26_WDATA_PARITY,
    I<1>:$AXI_26_WLAST,
    I<32>:$AXI_26_WSTRB,
    I<1>:$AXI_26_WVALID,
    I<1>:$AXI_27_ACLK,
    I<37>:$AXI_27_ARADDR,
    I<2>:$AXI_27_ARBURST,
    I<1>:$AXI_27_ARESET_N,
    I<6>:$AXI_27_ARID,
    I<4>:$AXI_27_ARLEN,
    I<3>:$AXI_27_ARSIZE,
    I<1>:$AXI_27_ARVALID,
    I<37>:$AXI_27_AWADDR,
    I<2>:$AXI_27_AWBURST,
    I<6>:$AXI_27_AWID,
    I<4>:$AXI_27_AWLEN,
    I<3>:$AXI_27_AWSIZE,
    I<1>:$AXI_27_AWVALID,
    I<1>:$AXI_27_BREADY,
    I<1>:$AXI_27_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_27_RREADY,
    I<256>:$AXI_27_WDATA,
    I<32>:$AXI_27_WDATA_PARITY,
    I<1>:$AXI_27_WLAST,
    I<32>:$AXI_27_WSTRB,
    I<1>:$AXI_27_WVALID,
    I<1>:$AXI_28_ACLK,
    I<37>:$AXI_28_ARADDR,
    I<2>:$AXI_28_ARBURST,
    I<1>:$AXI_28_ARESET_N,
    I<6>:$AXI_28_ARID,
    I<4>:$AXI_28_ARLEN,
    I<3>:$AXI_28_ARSIZE,
    I<1>:$AXI_28_ARVALID,
    I<37>:$AXI_28_AWADDR,
    I<2>:$AXI_28_AWBURST,
    I<6>:$AXI_28_AWID,
    I<4>:$AXI_28_AWLEN,
    I<3>:$AXI_28_AWSIZE,
    I<1>:$AXI_28_AWVALID,
    I<1>:$AXI_28_BREADY,
    I<1>:$AXI_28_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_28_RREADY,
    I<256>:$AXI_28_WDATA,
    I<32>:$AXI_28_WDATA_PARITY,
    I<1>:$AXI_28_WLAST,
    I<32>:$AXI_28_WSTRB,
    I<1>:$AXI_28_WVALID,
    I<1>:$AXI_29_ACLK,
    I<37>:$AXI_29_ARADDR,
    I<2>:$AXI_29_ARBURST,
    I<1>:$AXI_29_ARESET_N,
    I<6>:$AXI_29_ARID,
    I<4>:$AXI_29_ARLEN,
    I<3>:$AXI_29_ARSIZE,
    I<1>:$AXI_29_ARVALID,
    I<37>:$AXI_29_AWADDR,
    I<2>:$AXI_29_AWBURST,
    I<6>:$AXI_29_AWID,
    I<4>:$AXI_29_AWLEN,
    I<3>:$AXI_29_AWSIZE,
    I<1>:$AXI_29_AWVALID,
    I<1>:$AXI_29_BREADY,
    I<1>:$AXI_29_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_29_RREADY,
    I<256>:$AXI_29_WDATA,
    I<32>:$AXI_29_WDATA_PARITY,
    I<1>:$AXI_29_WLAST,
    I<32>:$AXI_29_WSTRB,
    I<1>:$AXI_29_WVALID,
    I<1>:$AXI_30_ACLK,
    I<37>:$AXI_30_ARADDR,
    I<2>:$AXI_30_ARBURST,
    I<1>:$AXI_30_ARESET_N,
    I<6>:$AXI_30_ARID,
    I<4>:$AXI_30_ARLEN,
    I<3>:$AXI_30_ARSIZE,
    I<1>:$AXI_30_ARVALID,
    I<37>:$AXI_30_AWADDR,
    I<2>:$AXI_30_AWBURST,
    I<6>:$AXI_30_AWID,
    I<4>:$AXI_30_AWLEN,
    I<3>:$AXI_30_AWSIZE,
    I<1>:$AXI_30_AWVALID,
    I<1>:$AXI_30_BREADY,
    I<1>:$AXI_30_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_30_RREADY,
    I<256>:$AXI_30_WDATA,
    I<32>:$AXI_30_WDATA_PARITY,
    I<1>:$AXI_30_WLAST,
    I<32>:$AXI_30_WSTRB,
    I<1>:$AXI_30_WVALID,
    I<1>:$AXI_31_ACLK,
    I<37>:$AXI_31_ARADDR,
    I<2>:$AXI_31_ARBURST,
    I<1>:$AXI_31_ARESET_N,
    I<6>:$AXI_31_ARID,
    I<4>:$AXI_31_ARLEN,
    I<3>:$AXI_31_ARSIZE,
    I<1>:$AXI_31_ARVALID,
    I<37>:$AXI_31_AWADDR,
    I<2>:$AXI_31_AWBURST,
    I<6>:$AXI_31_AWID,
    I<4>:$AXI_31_AWLEN,
    I<3>:$AXI_31_AWSIZE,
    I<1>:$AXI_31_AWVALID,
    I<1>:$AXI_31_BREADY,
    I<1>:$AXI_31_DFI_LP_PWR_X_REQ,
    I<1>:$AXI_31_RREADY,
    I<256>:$AXI_31_WDATA,
    I<32>:$AXI_31_WDATA_PARITY,
    I<1>:$AXI_31_WLAST,
    I<32>:$AXI_31_WSTRB,
    I<1>:$AXI_31_WVALID,
    I<1>:$BSCAN_DRCK_0,
    I<1>:$BSCAN_DRCK_1,
    I<1>:$BSCAN_TCK_0,
    I<1>:$BSCAN_TCK_1,
    I<1>:$HBM_REF_CLK_0,
    I<1>:$HBM_REF_CLK_1,
    I<1>:$MBIST_EN_00,
    I<1>:$MBIST_EN_01,
    I<1>:$MBIST_EN_02,
    I<1>:$MBIST_EN_03,
    I<1>:$MBIST_EN_04,
    I<1>:$MBIST_EN_05,
    I<1>:$MBIST_EN_06,
    I<1>:$MBIST_EN_07,
    I<1>:$MBIST_EN_08,
    I<1>:$MBIST_EN_09,
    I<1>:$MBIST_EN_10,
    I<1>:$MBIST_EN_11,
    I<1>:$MBIST_EN_12,
    I<1>:$MBIST_EN_13,
    I<1>:$MBIST_EN_14,
    I<1>:$MBIST_EN_15,

    // HBM_TWO_STACK_INTF parameters follows
    StrAttr:$CLK_SEL_00,
    StrAttr:$CLK_SEL_01,
    StrAttr:$CLK_SEL_02,
    StrAttr:$CLK_SEL_03,
    StrAttr:$CLK_SEL_04,
    StrAttr:$CLK_SEL_05,
    StrAttr:$CLK_SEL_06,
    StrAttr:$CLK_SEL_07,
    StrAttr:$CLK_SEL_08,
    StrAttr:$CLK_SEL_09,
    StrAttr:$CLK_SEL_10,
    StrAttr:$CLK_SEL_11,
    StrAttr:$CLK_SEL_12,
    StrAttr:$CLK_SEL_13,
    StrAttr:$CLK_SEL_14,
    StrAttr:$CLK_SEL_15,
    StrAttr:$CLK_SEL_16,
    StrAttr:$CLK_SEL_17,
    StrAttr:$CLK_SEL_18,
    StrAttr:$CLK_SEL_19,
    StrAttr:$CLK_SEL_20,
    StrAttr:$CLK_SEL_21,
    StrAttr:$CLK_SEL_22,
    StrAttr:$CLK_SEL_23,
    StrAttr:$CLK_SEL_24,
    StrAttr:$CLK_SEL_25,
    StrAttr:$CLK_SEL_26,
    StrAttr:$CLK_SEL_27,
    StrAttr:$CLK_SEL_28,
    StrAttr:$CLK_SEL_29,
    StrAttr:$CLK_SEL_30,
    StrAttr:$CLK_SEL_31,
    SI64Attr:$DATARATE_00,
    SI64Attr:$DATARATE_01,
    SI64Attr:$DATARATE_02,
    SI64Attr:$DATARATE_03,
    SI64Attr:$DATARATE_04,
    SI64Attr:$DATARATE_05,
    SI64Attr:$DATARATE_06,
    SI64Attr:$DATARATE_07,
    SI64Attr:$DATARATE_08,
    SI64Attr:$DATARATE_09,
    SI64Attr:$DATARATE_10,
    SI64Attr:$DATARATE_11,
    SI64Attr:$DATARATE_12,
    SI64Attr:$DATARATE_13,
    SI64Attr:$DATARATE_14,
    SI64Attr:$DATARATE_15,
    StrAttr:$DA_LOCKOUT_0,
    StrAttr:$DA_LOCKOUT_1,
    APIntAttr<I<1>>:$IS_APB_0_PCLK_INVERTED,
    APIntAttr<I<1>>:$IS_APB_0_PRESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_APB_1_PCLK_INVERTED,
    APIntAttr<I<1>>:$IS_APB_1_PRESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_00_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_00_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_01_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_01_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_02_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_02_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_03_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_03_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_04_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_04_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_05_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_05_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_06_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_06_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_07_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_07_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_08_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_08_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_09_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_09_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_10_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_10_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_11_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_11_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_12_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_12_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_13_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_13_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_14_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_14_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_15_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_15_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_16_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_16_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_17_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_17_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_18_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_18_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_19_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_19_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_20_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_20_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_21_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_21_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_22_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_22_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_23_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_23_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_24_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_24_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_25_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_25_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_26_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_26_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_27_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_27_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_28_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_28_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_29_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_29_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_30_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_30_ARESET_N_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_31_ACLK_INVERTED,
    APIntAttr<I<1>>:$IS_AXI_31_ARESET_N_INVERTED,
    StrAttr:$MC_ENABLE_00,
    StrAttr:$MC_ENABLE_01,
    StrAttr:$MC_ENABLE_02,
    StrAttr:$MC_ENABLE_03,
    StrAttr:$MC_ENABLE_04,
    StrAttr:$MC_ENABLE_05,
    StrAttr:$MC_ENABLE_06,
    StrAttr:$MC_ENABLE_07,
    StrAttr:$MC_ENABLE_08,
    StrAttr:$MC_ENABLE_09,
    StrAttr:$MC_ENABLE_10,
    StrAttr:$MC_ENABLE_11,
    StrAttr:$MC_ENABLE_12,
    StrAttr:$MC_ENABLE_13,
    StrAttr:$MC_ENABLE_14,
    StrAttr:$MC_ENABLE_15,
    StrAttr:$MC_ENABLE_APB_00,
    StrAttr:$MC_ENABLE_APB_01,
    SI64Attr:$PAGEHIT_PERCENT_00,
    SI64Attr:$PAGEHIT_PERCENT_01,
    StrAttr:$PHY_ENABLE_00,
    StrAttr:$PHY_ENABLE_01,
    StrAttr:$PHY_ENABLE_02,
    StrAttr:$PHY_ENABLE_03,
    StrAttr:$PHY_ENABLE_04,
    StrAttr:$PHY_ENABLE_05,
    StrAttr:$PHY_ENABLE_06,
    StrAttr:$PHY_ENABLE_07,
    StrAttr:$PHY_ENABLE_08,
    StrAttr:$PHY_ENABLE_09,
    StrAttr:$PHY_ENABLE_10,
    StrAttr:$PHY_ENABLE_11,
    StrAttr:$PHY_ENABLE_12,
    StrAttr:$PHY_ENABLE_13,
    StrAttr:$PHY_ENABLE_14,
    StrAttr:$PHY_ENABLE_15,
    StrAttr:$PHY_ENABLE_16,
    StrAttr:$PHY_ENABLE_17,
    StrAttr:$PHY_ENABLE_18,
    StrAttr:$PHY_ENABLE_19,
    StrAttr:$PHY_ENABLE_20,
    StrAttr:$PHY_ENABLE_21,
    StrAttr:$PHY_ENABLE_22,
    StrAttr:$PHY_ENABLE_23,
    StrAttr:$PHY_ENABLE_24,
    StrAttr:$PHY_ENABLE_25,
    StrAttr:$PHY_ENABLE_26,
    StrAttr:$PHY_ENABLE_27,
    StrAttr:$PHY_ENABLE_28,
    StrAttr:$PHY_ENABLE_29,
    StrAttr:$PHY_ENABLE_30,
    StrAttr:$PHY_ENABLE_31,
    StrAttr:$PHY_ENABLE_APB_00,
    StrAttr:$PHY_ENABLE_APB_01,
    StrAttr:$PHY_PCLK_INVERT_01,
    StrAttr:$PHY_PCLK_INVERT_02,
    SI64Attr:$READ_PERCENT_00,
    SI64Attr:$READ_PERCENT_01,
    SI64Attr:$READ_PERCENT_02,
    SI64Attr:$READ_PERCENT_03,
    SI64Attr:$READ_PERCENT_04,
    SI64Attr:$READ_PERCENT_05,
    SI64Attr:$READ_PERCENT_06,
    SI64Attr:$READ_PERCENT_07,
    SI64Attr:$READ_PERCENT_08,
    SI64Attr:$READ_PERCENT_09,
    SI64Attr:$READ_PERCENT_10,
    SI64Attr:$READ_PERCENT_11,
    SI64Attr:$READ_PERCENT_12,
    SI64Attr:$READ_PERCENT_13,
    SI64Attr:$READ_PERCENT_14,
    SI64Attr:$READ_PERCENT_15,
    SI64Attr:$READ_PERCENT_16,
    SI64Attr:$READ_PERCENT_17,
    SI64Attr:$READ_PERCENT_18,
    SI64Attr:$READ_PERCENT_19,
    SI64Attr:$READ_PERCENT_20,
    SI64Attr:$READ_PERCENT_21,
    SI64Attr:$READ_PERCENT_22,
    SI64Attr:$READ_PERCENT_23,
    SI64Attr:$READ_PERCENT_24,
    SI64Attr:$READ_PERCENT_25,
    SI64Attr:$READ_PERCENT_26,
    SI64Attr:$READ_PERCENT_27,
    SI64Attr:$READ_PERCENT_28,
    SI64Attr:$READ_PERCENT_29,
    SI64Attr:$READ_PERCENT_30,
    SI64Attr:$READ_PERCENT_31,
    StrAttr:$SIM_DEVICE,
    StrAttr:$SWITCH_ENABLE_00,
    StrAttr:$SWITCH_ENABLE_01,
    SI64Attr:$WRITE_PERCENT_00,
    SI64Attr:$WRITE_PERCENT_01,
    SI64Attr:$WRITE_PERCENT_02,
    SI64Attr:$WRITE_PERCENT_03,
    SI64Attr:$WRITE_PERCENT_04,
    SI64Attr:$WRITE_PERCENT_05,
    SI64Attr:$WRITE_PERCENT_06,
    SI64Attr:$WRITE_PERCENT_07,
    SI64Attr:$WRITE_PERCENT_08,
    SI64Attr:$WRITE_PERCENT_09,
    SI64Attr:$WRITE_PERCENT_10,
    SI64Attr:$WRITE_PERCENT_11,
    SI64Attr:$WRITE_PERCENT_12,
    SI64Attr:$WRITE_PERCENT_13,
    SI64Attr:$WRITE_PERCENT_14,
    SI64Attr:$WRITE_PERCENT_15,
    SI64Attr:$WRITE_PERCENT_16,
    SI64Attr:$WRITE_PERCENT_17,
    SI64Attr:$WRITE_PERCENT_18,
    SI64Attr:$WRITE_PERCENT_19,
    SI64Attr:$WRITE_PERCENT_20,
    SI64Attr:$WRITE_PERCENT_21,
    SI64Attr:$WRITE_PERCENT_22,
    SI64Attr:$WRITE_PERCENT_23,
    SI64Attr:$WRITE_PERCENT_24,
    SI64Attr:$WRITE_PERCENT_25,
    SI64Attr:$WRITE_PERCENT_26,
    SI64Attr:$WRITE_PERCENT_27,
    SI64Attr:$WRITE_PERCENT_28,
    SI64Attr:$WRITE_PERCENT_29,
    SI64Attr:$WRITE_PERCENT_30,
    SI64Attr:$WRITE_PERCENT_31
  );

  let results = (outs
    I<32>:$APB_0_PRDATA,
    I<1>:$APB_0_PREADY,
    I<1>:$APB_0_PSLVERR,
    I<32>:$APB_1_PRDATA,
    I<1>:$APB_1_PREADY,
    I<1>:$APB_1_PSLVERR,
    I<1>:$AXI_00_ARREADY,
    I<1>:$AXI_00_AWREADY,
    I<6>:$AXI_00_BID,
    I<2>:$AXI_00_BRESP,
    I<1>:$AXI_00_BVALID,
    I<2>:$AXI_00_DFI_AW_AERR_N,
    I<1>:$AXI_00_DFI_CLK_BUF,
    I<8>:$AXI_00_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_00_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_00_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_00_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_00_DFI_INIT_COMPLETE,
    I<1>:$AXI_00_DFI_PHYUPD_REQ,
    I<1>:$AXI_00_DFI_PHY_LP_STATE,
    I<1>:$AXI_00_DFI_RST_N_BUF,
    I<6>:$AXI_00_MC_STATUS,
    I<8>:$AXI_00_PHY_STATUS,
    I<256>:$AXI_00_RDATA,
    I<32>:$AXI_00_RDATA_PARITY,
    I<6>:$AXI_00_RID,
    I<1>:$AXI_00_RLAST,
    I<2>:$AXI_00_RRESP,
    I<1>:$AXI_00_RVALID,
    I<1>:$AXI_00_WREADY,
    I<1>:$AXI_01_ARREADY,
    I<1>:$AXI_01_AWREADY,
    I<6>:$AXI_01_BID,
    I<2>:$AXI_01_BRESP,
    I<1>:$AXI_01_BVALID,
    I<2>:$AXI_01_DFI_AW_AERR_N,
    I<1>:$AXI_01_DFI_CLK_BUF,
    I<8>:$AXI_01_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_01_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_01_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_01_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_01_DFI_INIT_COMPLETE,
    I<1>:$AXI_01_DFI_PHYUPD_REQ,
    I<1>:$AXI_01_DFI_PHY_LP_STATE,
    I<1>:$AXI_01_DFI_RST_N_BUF,
    I<256>:$AXI_01_RDATA,
    I<32>:$AXI_01_RDATA_PARITY,
    I<6>:$AXI_01_RID,
    I<1>:$AXI_01_RLAST,
    I<2>:$AXI_01_RRESP,
    I<1>:$AXI_01_RVALID,
    I<1>:$AXI_01_WREADY,
    I<1>:$AXI_02_ARREADY,
    I<1>:$AXI_02_AWREADY,
    I<6>:$AXI_02_BID,
    I<2>:$AXI_02_BRESP,
    I<1>:$AXI_02_BVALID,
    I<2>:$AXI_02_DFI_AW_AERR_N,
    I<1>:$AXI_02_DFI_CLK_BUF,
    I<8>:$AXI_02_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_02_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_02_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_02_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_02_DFI_INIT_COMPLETE,
    I<1>:$AXI_02_DFI_PHYUPD_REQ,
    I<1>:$AXI_02_DFI_PHY_LP_STATE,
    I<1>:$AXI_02_DFI_RST_N_BUF,
    I<6>:$AXI_02_MC_STATUS,
    I<8>:$AXI_02_PHY_STATUS,
    I<256>:$AXI_02_RDATA,
    I<32>:$AXI_02_RDATA_PARITY,
    I<6>:$AXI_02_RID,
    I<1>:$AXI_02_RLAST,
    I<2>:$AXI_02_RRESP,
    I<1>:$AXI_02_RVALID,
    I<1>:$AXI_02_WREADY,
    I<1>:$AXI_03_ARREADY,
    I<1>:$AXI_03_AWREADY,
    I<6>:$AXI_03_BID,
    I<2>:$AXI_03_BRESP,
    I<1>:$AXI_03_BVALID,
    I<2>:$AXI_03_DFI_AW_AERR_N,
    I<1>:$AXI_03_DFI_CLK_BUF,
    I<8>:$AXI_03_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_03_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_03_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_03_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_03_DFI_INIT_COMPLETE,
    I<1>:$AXI_03_DFI_PHYUPD_REQ,
    I<1>:$AXI_03_DFI_PHY_LP_STATE,
    I<1>:$AXI_03_DFI_RST_N_BUF,
    I<256>:$AXI_03_RDATA,
    I<32>:$AXI_03_RDATA_PARITY,
    I<6>:$AXI_03_RID,
    I<1>:$AXI_03_RLAST,
    I<2>:$AXI_03_RRESP,
    I<1>:$AXI_03_RVALID,
    I<1>:$AXI_03_WREADY,
    I<1>:$AXI_04_ARREADY,
    I<1>:$AXI_04_AWREADY,
    I<6>:$AXI_04_BID,
    I<2>:$AXI_04_BRESP,
    I<1>:$AXI_04_BVALID,
    I<2>:$AXI_04_DFI_AW_AERR_N,
    I<1>:$AXI_04_DFI_CLK_BUF,
    I<8>:$AXI_04_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_04_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_04_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_04_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_04_DFI_INIT_COMPLETE,
    I<1>:$AXI_04_DFI_PHYUPD_REQ,
    I<1>:$AXI_04_DFI_PHY_LP_STATE,
    I<1>:$AXI_04_DFI_RST_N_BUF,
    I<6>:$AXI_04_MC_STATUS,
    I<8>:$AXI_04_PHY_STATUS,
    I<256>:$AXI_04_RDATA,
    I<32>:$AXI_04_RDATA_PARITY,
    I<6>:$AXI_04_RID,
    I<1>:$AXI_04_RLAST,
    I<2>:$AXI_04_RRESP,
    I<1>:$AXI_04_RVALID,
    I<1>:$AXI_04_WREADY,
    I<1>:$AXI_05_ARREADY,
    I<1>:$AXI_05_AWREADY,
    I<6>:$AXI_05_BID,
    I<2>:$AXI_05_BRESP,
    I<1>:$AXI_05_BVALID,
    I<2>:$AXI_05_DFI_AW_AERR_N,
    I<1>:$AXI_05_DFI_CLK_BUF,
    I<8>:$AXI_05_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_05_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_05_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_05_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_05_DFI_INIT_COMPLETE,
    I<1>:$AXI_05_DFI_PHYUPD_REQ,
    I<1>:$AXI_05_DFI_PHY_LP_STATE,
    I<1>:$AXI_05_DFI_RST_N_BUF,
    I<256>:$AXI_05_RDATA,
    I<32>:$AXI_05_RDATA_PARITY,
    I<6>:$AXI_05_RID,
    I<1>:$AXI_05_RLAST,
    I<2>:$AXI_05_RRESP,
    I<1>:$AXI_05_RVALID,
    I<1>:$AXI_05_WREADY,
    I<1>:$AXI_06_ARREADY,
    I<1>:$AXI_06_AWREADY,
    I<6>:$AXI_06_BID,
    I<2>:$AXI_06_BRESP,
    I<1>:$AXI_06_BVALID,
    I<2>:$AXI_06_DFI_AW_AERR_N,
    I<1>:$AXI_06_DFI_CLK_BUF,
    I<8>:$AXI_06_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_06_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_06_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_06_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_06_DFI_INIT_COMPLETE,
    I<1>:$AXI_06_DFI_PHYUPD_REQ,
    I<1>:$AXI_06_DFI_PHY_LP_STATE,
    I<1>:$AXI_06_DFI_RST_N_BUF,
    I<6>:$AXI_06_MC_STATUS,
    I<8>:$AXI_06_PHY_STATUS,
    I<256>:$AXI_06_RDATA,
    I<32>:$AXI_06_RDATA_PARITY,
    I<6>:$AXI_06_RID,
    I<1>:$AXI_06_RLAST,
    I<2>:$AXI_06_RRESP,
    I<1>:$AXI_06_RVALID,
    I<1>:$AXI_06_WREADY,
    I<1>:$AXI_07_ARREADY,
    I<1>:$AXI_07_AWREADY,
    I<6>:$AXI_07_BID,
    I<2>:$AXI_07_BRESP,
    I<1>:$AXI_07_BVALID,
    I<2>:$AXI_07_DFI_AW_AERR_N,
    I<1>:$AXI_07_DFI_CLK_BUF,
    I<8>:$AXI_07_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_07_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_07_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_07_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_07_DFI_INIT_COMPLETE,
    I<1>:$AXI_07_DFI_PHYUPD_REQ,
    I<1>:$AXI_07_DFI_PHY_LP_STATE,
    I<1>:$AXI_07_DFI_RST_N_BUF,
    I<256>:$AXI_07_RDATA,
    I<32>:$AXI_07_RDATA_PARITY,
    I<6>:$AXI_07_RID,
    I<1>:$AXI_07_RLAST,
    I<2>:$AXI_07_RRESP,
    I<1>:$AXI_07_RVALID,
    I<1>:$AXI_07_WREADY,
    I<1>:$AXI_08_ARREADY,
    I<1>:$AXI_08_AWREADY,
    I<6>:$AXI_08_BID,
    I<2>:$AXI_08_BRESP,
    I<1>:$AXI_08_BVALID,
    I<2>:$AXI_08_DFI_AW_AERR_N,
    I<1>:$AXI_08_DFI_CLK_BUF,
    I<8>:$AXI_08_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_08_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_08_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_08_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_08_DFI_INIT_COMPLETE,
    I<1>:$AXI_08_DFI_PHYUPD_REQ,
    I<1>:$AXI_08_DFI_PHY_LP_STATE,
    I<1>:$AXI_08_DFI_RST_N_BUF,
    I<6>:$AXI_08_MC_STATUS,
    I<8>:$AXI_08_PHY_STATUS,
    I<256>:$AXI_08_RDATA,
    I<32>:$AXI_08_RDATA_PARITY,
    I<6>:$AXI_08_RID,
    I<1>:$AXI_08_RLAST,
    I<2>:$AXI_08_RRESP,
    I<1>:$AXI_08_RVALID,
    I<1>:$AXI_08_WREADY,
    I<1>:$AXI_09_ARREADY,
    I<1>:$AXI_09_AWREADY,
    I<6>:$AXI_09_BID,
    I<2>:$AXI_09_BRESP,
    I<1>:$AXI_09_BVALID,
    I<2>:$AXI_09_DFI_AW_AERR_N,
    I<1>:$AXI_09_DFI_CLK_BUF,
    I<8>:$AXI_09_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_09_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_09_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_09_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_09_DFI_INIT_COMPLETE,
    I<1>:$AXI_09_DFI_PHYUPD_REQ,
    I<1>:$AXI_09_DFI_PHY_LP_STATE,
    I<1>:$AXI_09_DFI_RST_N_BUF,
    I<256>:$AXI_09_RDATA,
    I<32>:$AXI_09_RDATA_PARITY,
    I<6>:$AXI_09_RID,
    I<1>:$AXI_09_RLAST,
    I<2>:$AXI_09_RRESP,
    I<1>:$AXI_09_RVALID,
    I<1>:$AXI_09_WREADY,
    I<1>:$AXI_10_ARREADY,
    I<1>:$AXI_10_AWREADY,
    I<6>:$AXI_10_BID,
    I<2>:$AXI_10_BRESP,
    I<1>:$AXI_10_BVALID,
    I<2>:$AXI_10_DFI_AW_AERR_N,
    I<1>:$AXI_10_DFI_CLK_BUF,
    I<8>:$AXI_10_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_10_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_10_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_10_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_10_DFI_INIT_COMPLETE,
    I<1>:$AXI_10_DFI_PHYUPD_REQ,
    I<1>:$AXI_10_DFI_PHY_LP_STATE,
    I<1>:$AXI_10_DFI_RST_N_BUF,
    I<6>:$AXI_10_MC_STATUS,
    I<8>:$AXI_10_PHY_STATUS,
    I<256>:$AXI_10_RDATA,
    I<32>:$AXI_10_RDATA_PARITY,
    I<6>:$AXI_10_RID,
    I<1>:$AXI_10_RLAST,
    I<2>:$AXI_10_RRESP,
    I<1>:$AXI_10_RVALID,
    I<1>:$AXI_10_WREADY,
    I<1>:$AXI_11_ARREADY,
    I<1>:$AXI_11_AWREADY,
    I<6>:$AXI_11_BID,
    I<2>:$AXI_11_BRESP,
    I<1>:$AXI_11_BVALID,
    I<2>:$AXI_11_DFI_AW_AERR_N,
    I<1>:$AXI_11_DFI_CLK_BUF,
    I<8>:$AXI_11_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_11_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_11_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_11_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_11_DFI_INIT_COMPLETE,
    I<1>:$AXI_11_DFI_PHYUPD_REQ,
    I<1>:$AXI_11_DFI_PHY_LP_STATE,
    I<1>:$AXI_11_DFI_RST_N_BUF,
    I<256>:$AXI_11_RDATA,
    I<32>:$AXI_11_RDATA_PARITY,
    I<6>:$AXI_11_RID,
    I<1>:$AXI_11_RLAST,
    I<2>:$AXI_11_RRESP,
    I<1>:$AXI_11_RVALID,
    I<1>:$AXI_11_WREADY,
    I<1>:$AXI_12_ARREADY,
    I<1>:$AXI_12_AWREADY,
    I<6>:$AXI_12_BID,
    I<2>:$AXI_12_BRESP,
    I<1>:$AXI_12_BVALID,
    I<2>:$AXI_12_DFI_AW_AERR_N,
    I<1>:$AXI_12_DFI_CLK_BUF,
    I<8>:$AXI_12_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_12_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_12_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_12_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_12_DFI_INIT_COMPLETE,
    I<1>:$AXI_12_DFI_PHYUPD_REQ,
    I<1>:$AXI_12_DFI_PHY_LP_STATE,
    I<1>:$AXI_12_DFI_RST_N_BUF,
    I<6>:$AXI_12_MC_STATUS,
    I<8>:$AXI_12_PHY_STATUS,
    I<256>:$AXI_12_RDATA,
    I<32>:$AXI_12_RDATA_PARITY,
    I<6>:$AXI_12_RID,
    I<1>:$AXI_12_RLAST,
    I<2>:$AXI_12_RRESP,
    I<1>:$AXI_12_RVALID,
    I<1>:$AXI_12_WREADY,
    I<1>:$AXI_13_ARREADY,
    I<1>:$AXI_13_AWREADY,
    I<6>:$AXI_13_BID,
    I<2>:$AXI_13_BRESP,
    I<1>:$AXI_13_BVALID,
    I<2>:$AXI_13_DFI_AW_AERR_N,
    I<1>:$AXI_13_DFI_CLK_BUF,
    I<8>:$AXI_13_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_13_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_13_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_13_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_13_DFI_INIT_COMPLETE,
    I<1>:$AXI_13_DFI_PHYUPD_REQ,
    I<1>:$AXI_13_DFI_PHY_LP_STATE,
    I<1>:$AXI_13_DFI_RST_N_BUF,
    I<256>:$AXI_13_RDATA,
    I<32>:$AXI_13_RDATA_PARITY,
    I<6>:$AXI_13_RID,
    I<1>:$AXI_13_RLAST,
    I<2>:$AXI_13_RRESP,
    I<1>:$AXI_13_RVALID,
    I<1>:$AXI_13_WREADY,
    I<1>:$AXI_14_ARREADY,
    I<1>:$AXI_14_AWREADY,
    I<6>:$AXI_14_BID,
    I<2>:$AXI_14_BRESP,
    I<1>:$AXI_14_BVALID,
    I<2>:$AXI_14_DFI_AW_AERR_N,
    I<1>:$AXI_14_DFI_CLK_BUF,
    I<8>:$AXI_14_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_14_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_14_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_14_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_14_DFI_INIT_COMPLETE,
    I<1>:$AXI_14_DFI_PHYUPD_REQ,
    I<1>:$AXI_14_DFI_PHY_LP_STATE,
    I<1>:$AXI_14_DFI_RST_N_BUF,
    I<6>:$AXI_14_MC_STATUS,
    I<8>:$AXI_14_PHY_STATUS,
    I<256>:$AXI_14_RDATA,
    I<32>:$AXI_14_RDATA_PARITY,
    I<6>:$AXI_14_RID,
    I<1>:$AXI_14_RLAST,
    I<2>:$AXI_14_RRESP,
    I<1>:$AXI_14_RVALID,
    I<1>:$AXI_14_WREADY,
    I<1>:$AXI_15_ARREADY,
    I<1>:$AXI_15_AWREADY,
    I<6>:$AXI_15_BID,
    I<2>:$AXI_15_BRESP,
    I<1>:$AXI_15_BVALID,
    I<2>:$AXI_15_DFI_AW_AERR_N,
    I<1>:$AXI_15_DFI_CLK_BUF,
    I<8>:$AXI_15_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_15_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_15_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_15_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_15_DFI_INIT_COMPLETE,
    I<1>:$AXI_15_DFI_PHYUPD_REQ,
    I<1>:$AXI_15_DFI_PHY_LP_STATE,
    I<1>:$AXI_15_DFI_RST_N_BUF,
    I<256>:$AXI_15_RDATA,
    I<32>:$AXI_15_RDATA_PARITY,
    I<6>:$AXI_15_RID,
    I<1>:$AXI_15_RLAST,
    I<2>:$AXI_15_RRESP,
    I<1>:$AXI_15_RVALID,
    I<1>:$AXI_15_WREADY,
    I<1>:$AXI_16_ARREADY,
    I<1>:$AXI_16_AWREADY,
    I<6>:$AXI_16_BID,
    I<2>:$AXI_16_BRESP,
    I<1>:$AXI_16_BVALID,
    I<2>:$AXI_16_DFI_AW_AERR_N,
    I<1>:$AXI_16_DFI_CLK_BUF,
    I<8>:$AXI_16_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_16_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_16_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_16_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_16_DFI_INIT_COMPLETE,
    I<1>:$AXI_16_DFI_PHYUPD_REQ,
    I<1>:$AXI_16_DFI_PHY_LP_STATE,
    I<1>:$AXI_16_DFI_RST_N_BUF,
    I<6>:$AXI_16_MC_STATUS,
    I<8>:$AXI_16_PHY_STATUS,
    I<256>:$AXI_16_RDATA,
    I<32>:$AXI_16_RDATA_PARITY,
    I<6>:$AXI_16_RID,
    I<1>:$AXI_16_RLAST,
    I<2>:$AXI_16_RRESP,
    I<1>:$AXI_16_RVALID,
    I<1>:$AXI_16_WREADY,
    I<1>:$AXI_17_ARREADY,
    I<1>:$AXI_17_AWREADY,
    I<6>:$AXI_17_BID,
    I<2>:$AXI_17_BRESP,
    I<1>:$AXI_17_BVALID,
    I<2>:$AXI_17_DFI_AW_AERR_N,
    I<1>:$AXI_17_DFI_CLK_BUF,
    I<8>:$AXI_17_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_17_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_17_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_17_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_17_DFI_INIT_COMPLETE,
    I<1>:$AXI_17_DFI_PHYUPD_REQ,
    I<1>:$AXI_17_DFI_PHY_LP_STATE,
    I<1>:$AXI_17_DFI_RST_N_BUF,
    I<256>:$AXI_17_RDATA,
    I<32>:$AXI_17_RDATA_PARITY,
    I<6>:$AXI_17_RID,
    I<1>:$AXI_17_RLAST,
    I<2>:$AXI_17_RRESP,
    I<1>:$AXI_17_RVALID,
    I<1>:$AXI_17_WREADY,
    I<1>:$AXI_18_ARREADY,
    I<1>:$AXI_18_AWREADY,
    I<6>:$AXI_18_BID,
    I<2>:$AXI_18_BRESP,
    I<1>:$AXI_18_BVALID,
    I<2>:$AXI_18_DFI_AW_AERR_N,
    I<1>:$AXI_18_DFI_CLK_BUF,
    I<8>:$AXI_18_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_18_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_18_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_18_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_18_DFI_INIT_COMPLETE,
    I<1>:$AXI_18_DFI_PHYUPD_REQ,
    I<1>:$AXI_18_DFI_PHY_LP_STATE,
    I<1>:$AXI_18_DFI_RST_N_BUF,
    I<6>:$AXI_18_MC_STATUS,
    I<8>:$AXI_18_PHY_STATUS,
    I<256>:$AXI_18_RDATA,
    I<32>:$AXI_18_RDATA_PARITY,
    I<6>:$AXI_18_RID,
    I<1>:$AXI_18_RLAST,
    I<2>:$AXI_18_RRESP,
    I<1>:$AXI_18_RVALID,
    I<1>:$AXI_18_WREADY,
    I<1>:$AXI_19_ARREADY,
    I<1>:$AXI_19_AWREADY,
    I<6>:$AXI_19_BID,
    I<2>:$AXI_19_BRESP,
    I<1>:$AXI_19_BVALID,
    I<2>:$AXI_19_DFI_AW_AERR_N,
    I<1>:$AXI_19_DFI_CLK_BUF,
    I<8>:$AXI_19_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_19_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_19_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_19_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_19_DFI_INIT_COMPLETE,
    I<1>:$AXI_19_DFI_PHYUPD_REQ,
    I<1>:$AXI_19_DFI_PHY_LP_STATE,
    I<1>:$AXI_19_DFI_RST_N_BUF,
    I<256>:$AXI_19_RDATA,
    I<32>:$AXI_19_RDATA_PARITY,
    I<6>:$AXI_19_RID,
    I<1>:$AXI_19_RLAST,
    I<2>:$AXI_19_RRESP,
    I<1>:$AXI_19_RVALID,
    I<1>:$AXI_19_WREADY,
    I<1>:$AXI_20_ARREADY,
    I<1>:$AXI_20_AWREADY,
    I<6>:$AXI_20_BID,
    I<2>:$AXI_20_BRESP,
    I<1>:$AXI_20_BVALID,
    I<2>:$AXI_20_DFI_AW_AERR_N,
    I<1>:$AXI_20_DFI_CLK_BUF,
    I<8>:$AXI_20_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_20_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_20_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_20_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_20_DFI_INIT_COMPLETE,
    I<1>:$AXI_20_DFI_PHYUPD_REQ,
    I<1>:$AXI_20_DFI_PHY_LP_STATE,
    I<1>:$AXI_20_DFI_RST_N_BUF,
    I<6>:$AXI_20_MC_STATUS,
    I<8>:$AXI_20_PHY_STATUS,
    I<256>:$AXI_20_RDATA,
    I<32>:$AXI_20_RDATA_PARITY,
    I<6>:$AXI_20_RID,
    I<1>:$AXI_20_RLAST,
    I<2>:$AXI_20_RRESP,
    I<1>:$AXI_20_RVALID,
    I<1>:$AXI_20_WREADY,
    I<1>:$AXI_21_ARREADY,
    I<1>:$AXI_21_AWREADY,
    I<6>:$AXI_21_BID,
    I<2>:$AXI_21_BRESP,
    I<1>:$AXI_21_BVALID,
    I<2>:$AXI_21_DFI_AW_AERR_N,
    I<1>:$AXI_21_DFI_CLK_BUF,
    I<8>:$AXI_21_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_21_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_21_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_21_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_21_DFI_INIT_COMPLETE,
    I<1>:$AXI_21_DFI_PHYUPD_REQ,
    I<1>:$AXI_21_DFI_PHY_LP_STATE,
    I<1>:$AXI_21_DFI_RST_N_BUF,
    I<256>:$AXI_21_RDATA,
    I<32>:$AXI_21_RDATA_PARITY,
    I<6>:$AXI_21_RID,
    I<1>:$AXI_21_RLAST,
    I<2>:$AXI_21_RRESP,
    I<1>:$AXI_21_RVALID,
    I<1>:$AXI_21_WREADY,
    I<1>:$AXI_22_ARREADY,
    I<1>:$AXI_22_AWREADY,
    I<6>:$AXI_22_BID,
    I<2>:$AXI_22_BRESP,
    I<1>:$AXI_22_BVALID,
    I<2>:$AXI_22_DFI_AW_AERR_N,
    I<1>:$AXI_22_DFI_CLK_BUF,
    I<8>:$AXI_22_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_22_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_22_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_22_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_22_DFI_INIT_COMPLETE,
    I<1>:$AXI_22_DFI_PHYUPD_REQ,
    I<1>:$AXI_22_DFI_PHY_LP_STATE,
    I<1>:$AXI_22_DFI_RST_N_BUF,
    I<6>:$AXI_22_MC_STATUS,
    I<8>:$AXI_22_PHY_STATUS,
    I<256>:$AXI_22_RDATA,
    I<32>:$AXI_22_RDATA_PARITY,
    I<6>:$AXI_22_RID,
    I<1>:$AXI_22_RLAST,
    I<2>:$AXI_22_RRESP,
    I<1>:$AXI_22_RVALID,
    I<1>:$AXI_22_WREADY,
    I<1>:$AXI_23_ARREADY,
    I<1>:$AXI_23_AWREADY,
    I<6>:$AXI_23_BID,
    I<2>:$AXI_23_BRESP,
    I<1>:$AXI_23_BVALID,
    I<2>:$AXI_23_DFI_AW_AERR_N,
    I<1>:$AXI_23_DFI_CLK_BUF,
    I<8>:$AXI_23_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_23_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_23_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_23_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_23_DFI_INIT_COMPLETE,
    I<1>:$AXI_23_DFI_PHYUPD_REQ,
    I<1>:$AXI_23_DFI_PHY_LP_STATE,
    I<1>:$AXI_23_DFI_RST_N_BUF,
    I<256>:$AXI_23_RDATA,
    I<32>:$AXI_23_RDATA_PARITY,
    I<6>:$AXI_23_RID,
    I<1>:$AXI_23_RLAST,
    I<2>:$AXI_23_RRESP,
    I<1>:$AXI_23_RVALID,
    I<1>:$AXI_23_WREADY,
    I<1>:$AXI_24_ARREADY,
    I<1>:$AXI_24_AWREADY,
    I<6>:$AXI_24_BID,
    I<2>:$AXI_24_BRESP,
    I<1>:$AXI_24_BVALID,
    I<2>:$AXI_24_DFI_AW_AERR_N,
    I<1>:$AXI_24_DFI_CLK_BUF,
    I<8>:$AXI_24_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_24_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_24_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_24_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_24_DFI_INIT_COMPLETE,
    I<1>:$AXI_24_DFI_PHYUPD_REQ,
    I<1>:$AXI_24_DFI_PHY_LP_STATE,
    I<1>:$AXI_24_DFI_RST_N_BUF,
    I<6>:$AXI_24_MC_STATUS,
    I<8>:$AXI_24_PHY_STATUS,
    I<256>:$AXI_24_RDATA,
    I<32>:$AXI_24_RDATA_PARITY,
    I<6>:$AXI_24_RID,
    I<1>:$AXI_24_RLAST,
    I<2>:$AXI_24_RRESP,
    I<1>:$AXI_24_RVALID,
    I<1>:$AXI_24_WREADY,
    I<1>:$AXI_25_ARREADY,
    I<1>:$AXI_25_AWREADY,
    I<6>:$AXI_25_BID,
    I<2>:$AXI_25_BRESP,
    I<1>:$AXI_25_BVALID,
    I<2>:$AXI_25_DFI_AW_AERR_N,
    I<1>:$AXI_25_DFI_CLK_BUF,
    I<8>:$AXI_25_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_25_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_25_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_25_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_25_DFI_INIT_COMPLETE,
    I<1>:$AXI_25_DFI_PHYUPD_REQ,
    I<1>:$AXI_25_DFI_PHY_LP_STATE,
    I<1>:$AXI_25_DFI_RST_N_BUF,
    I<256>:$AXI_25_RDATA,
    I<32>:$AXI_25_RDATA_PARITY,
    I<6>:$AXI_25_RID,
    I<1>:$AXI_25_RLAST,
    I<2>:$AXI_25_RRESP,
    I<1>:$AXI_25_RVALID,
    I<1>:$AXI_25_WREADY,
    I<1>:$AXI_26_ARREADY,
    I<1>:$AXI_26_AWREADY,
    I<6>:$AXI_26_BID,
    I<2>:$AXI_26_BRESP,
    I<1>:$AXI_26_BVALID,
    I<2>:$AXI_26_DFI_AW_AERR_N,
    I<1>:$AXI_26_DFI_CLK_BUF,
    I<8>:$AXI_26_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_26_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_26_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_26_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_26_DFI_INIT_COMPLETE,
    I<1>:$AXI_26_DFI_PHYUPD_REQ,
    I<1>:$AXI_26_DFI_PHY_LP_STATE,
    I<1>:$AXI_26_DFI_RST_N_BUF,
    I<6>:$AXI_26_MC_STATUS,
    I<8>:$AXI_26_PHY_STATUS,
    I<256>:$AXI_26_RDATA,
    I<32>:$AXI_26_RDATA_PARITY,
    I<6>:$AXI_26_RID,
    I<1>:$AXI_26_RLAST,
    I<2>:$AXI_26_RRESP,
    I<1>:$AXI_26_RVALID,
    I<1>:$AXI_26_WREADY,
    I<1>:$AXI_27_ARREADY,
    I<1>:$AXI_27_AWREADY,
    I<6>:$AXI_27_BID,
    I<2>:$AXI_27_BRESP,
    I<1>:$AXI_27_BVALID,
    I<2>:$AXI_27_DFI_AW_AERR_N,
    I<1>:$AXI_27_DFI_CLK_BUF,
    I<8>:$AXI_27_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_27_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_27_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_27_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_27_DFI_INIT_COMPLETE,
    I<1>:$AXI_27_DFI_PHYUPD_REQ,
    I<1>:$AXI_27_DFI_PHY_LP_STATE,
    I<1>:$AXI_27_DFI_RST_N_BUF,
    I<256>:$AXI_27_RDATA,
    I<32>:$AXI_27_RDATA_PARITY,
    I<6>:$AXI_27_RID,
    I<1>:$AXI_27_RLAST,
    I<2>:$AXI_27_RRESP,
    I<1>:$AXI_27_RVALID,
    I<1>:$AXI_27_WREADY,
    I<1>:$AXI_28_ARREADY,
    I<1>:$AXI_28_AWREADY,
    I<6>:$AXI_28_BID,
    I<2>:$AXI_28_BRESP,
    I<1>:$AXI_28_BVALID,
    I<2>:$AXI_28_DFI_AW_AERR_N,
    I<1>:$AXI_28_DFI_CLK_BUF,
    I<8>:$AXI_28_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_28_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_28_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_28_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_28_DFI_INIT_COMPLETE,
    I<1>:$AXI_28_DFI_PHYUPD_REQ,
    I<1>:$AXI_28_DFI_PHY_LP_STATE,
    I<1>:$AXI_28_DFI_RST_N_BUF,
    I<6>:$AXI_28_MC_STATUS,
    I<8>:$AXI_28_PHY_STATUS,
    I<256>:$AXI_28_RDATA,
    I<32>:$AXI_28_RDATA_PARITY,
    I<6>:$AXI_28_RID,
    I<1>:$AXI_28_RLAST,
    I<2>:$AXI_28_RRESP,
    I<1>:$AXI_28_RVALID,
    I<1>:$AXI_28_WREADY,
    I<1>:$AXI_29_ARREADY,
    I<1>:$AXI_29_AWREADY,
    I<6>:$AXI_29_BID,
    I<2>:$AXI_29_BRESP,
    I<1>:$AXI_29_BVALID,
    I<2>:$AXI_29_DFI_AW_AERR_N,
    I<1>:$AXI_29_DFI_CLK_BUF,
    I<8>:$AXI_29_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_29_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_29_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_29_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_29_DFI_INIT_COMPLETE,
    I<1>:$AXI_29_DFI_PHYUPD_REQ,
    I<1>:$AXI_29_DFI_PHY_LP_STATE,
    I<1>:$AXI_29_DFI_RST_N_BUF,
    I<256>:$AXI_29_RDATA,
    I<32>:$AXI_29_RDATA_PARITY,
    I<6>:$AXI_29_RID,
    I<1>:$AXI_29_RLAST,
    I<2>:$AXI_29_RRESP,
    I<1>:$AXI_29_RVALID,
    I<1>:$AXI_29_WREADY,
    I<1>:$AXI_30_ARREADY,
    I<1>:$AXI_30_AWREADY,
    I<6>:$AXI_30_BID,
    I<2>:$AXI_30_BRESP,
    I<1>:$AXI_30_BVALID,
    I<2>:$AXI_30_DFI_AW_AERR_N,
    I<1>:$AXI_30_DFI_CLK_BUF,
    I<8>:$AXI_30_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_30_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_30_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_30_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_30_DFI_INIT_COMPLETE,
    I<1>:$AXI_30_DFI_PHYUPD_REQ,
    I<1>:$AXI_30_DFI_PHY_LP_STATE,
    I<1>:$AXI_30_DFI_RST_N_BUF,
    I<6>:$AXI_30_MC_STATUS,
    I<8>:$AXI_30_PHY_STATUS,
    I<256>:$AXI_30_RDATA,
    I<32>:$AXI_30_RDATA_PARITY,
    I<6>:$AXI_30_RID,
    I<1>:$AXI_30_RLAST,
    I<2>:$AXI_30_RRESP,
    I<1>:$AXI_30_RVALID,
    I<1>:$AXI_30_WREADY,
    I<1>:$AXI_31_ARREADY,
    I<1>:$AXI_31_AWREADY,
    I<6>:$AXI_31_BID,
    I<2>:$AXI_31_BRESP,
    I<1>:$AXI_31_BVALID,
    I<2>:$AXI_31_DFI_AW_AERR_N,
    I<1>:$AXI_31_DFI_CLK_BUF,
    I<8>:$AXI_31_DFI_DBI_BYTE_DISABLE,
    I<21>:$AXI_31_DFI_DW_RDDATA_DBI,
    I<8>:$AXI_31_DFI_DW_RDDATA_DERR,
    I<2>:$AXI_31_DFI_DW_RDDATA_VALID,
    I<1>:$AXI_31_DFI_INIT_COMPLETE,
    I<1>:$AXI_31_DFI_PHYUPD_REQ,
    I<1>:$AXI_31_DFI_PHY_LP_STATE,
    I<1>:$AXI_31_DFI_RST_N_BUF,
    I<256>:$AXI_31_RDATA,
    I<32>:$AXI_31_RDATA_PARITY,
    I<6>:$AXI_31_RID,
    I<1>:$AXI_31_RLAST,
    I<2>:$AXI_31_RRESP,
    I<1>:$AXI_31_RVALID,
    I<1>:$AXI_31_WREADY,
    I<1>:$DRAM_0_STAT_CATTRIP,
    I<3>:$DRAM_0_STAT_TEMP,
    I<1>:$DRAM_1_STAT_CATTRIP,
    I<3>:$DRAM_1_STAT_TEMP
  );
}

def HPIOuVREF : XilinxPrimitiveOp<"HPIO_VREF", []> {
  let summary = "HPIO_VREF Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<7>:$FABRIC_VREF_TUNE,

    // HPIO_VREF parameters follows
    StrAttr:$VREF_CNTR
  );

  let results = (outs
    I<1>:$VREF
  );
}

def HSADC : XilinxPrimitiveOp<"HSADC", []> {
  let summary = "HSADC Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$ADC_CLK_N,
    I<1>:$ADC_CLK_P,
    I<1>:$CLK_FIFO_LM,
    I<16>:$CONTROL_ADC0,
    I<16>:$CONTROL_ADC1,
    I<16>:$CONTROL_ADC2,
    I<16>:$CONTROL_ADC3,
    I<16>:$CONTROL_COMMON,
    I<12>:$DADDR,
    I<1>:$DCLK,
    I<1>:$DEN,
    I<16>:$DI,
    I<1>:$DWE,
    I<1>:$FABRIC_CLK,
    I<1>:$PLL_MONCLK,
    I<1>:$PLL_REFCLK_IN,
    I<1>:$SYSREF_IN_NORTH,
    I<1>:$SYSREF_IN_SOUTH,
    I<1>:$SYSREF_N,
    I<1>:$SYSREF_P,
    I<1>:$VIN0_N,
    I<1>:$VIN0_P,
    I<1>:$VIN1_N,
    I<1>:$VIN1_P,
    I<1>:$VIN2_N,
    I<1>:$VIN2_P,
    I<1>:$VIN3_N,
    I<1>:$VIN3_P,
    I<1>:$VIN_I01_N,
    I<1>:$VIN_I01_P,
    I<1>:$VIN_I23_N,
    I<1>:$VIN_I23_P,

    // HSADC parameters follows
    StrAttr:$SIM_DEVICE,
    SI64Attr:$XPA_CFG0,
    SI64Attr:$XPA_CFG1,
    StrAttr:$XPA_NUM_ADCS,
    SI64Attr:$XPA_NUM_DDCS,
    StrAttr:$XPA_PLL_USED,
    SI64Attr:$XPA_SAMPLE_RATE_MSPS
  );

  let results = (outs
    I<1>:$CLK_ADC,
    I<128>:$DATA_ADC0,
    I<128>:$DATA_ADC1,
    I<128>:$DATA_ADC2,
    I<128>:$DATA_ADC3,
    I<16>:$DOUT,
    I<1>:$DRDY,
    I<1>:$PLL_DMON_OUT,
    I<1>:$PLL_REFCLK_OUT,
    I<16>:$STATUS_ADC0,
    I<16>:$STATUS_ADC1,
    I<16>:$STATUS_ADC2,
    I<16>:$STATUS_ADC3,
    I<16>:$STATUS_COMMON,
    I<1>:$SYSREF_OUT_NORTH,
    I<1>:$SYSREF_OUT_SOUTH
  );
}

def HSDAC : XilinxPrimitiveOp<"HSDAC", []> {
  let summary = "HSDAC Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLK_FIFO_LM,
    I<16>:$CONTROL_COMMON,
    I<16>:$CONTROL_DAC0,
    I<16>:$CONTROL_DAC1,
    I<16>:$CONTROL_DAC2,
    I<16>:$CONTROL_DAC3,
    I<1>:$DAC_CLK_N,
    I<1>:$DAC_CLK_P,
    I<12>:$DADDR,
    I<256>:$DATA_DAC0,
    I<256>:$DATA_DAC1,
    I<256>:$DATA_DAC2,
    I<256>:$DATA_DAC3,
    I<1>:$DCLK,
    I<1>:$DEN,
    I<16>:$DI,
    I<1>:$DWE,
    I<1>:$FABRIC_CLK,
    I<1>:$PLL_MONCLK,
    I<1>:$PLL_REFCLK_IN,
    I<1>:$SYSREF_IN_NORTH,
    I<1>:$SYSREF_IN_SOUTH,
    I<1>:$SYSREF_N,
    I<1>:$SYSREF_P,

    // HSDAC parameters follows
    StrAttr:$SIM_DEVICE,
    SI64Attr:$XPA_CFG0,
    SI64Attr:$XPA_CFG1,
    SI64Attr:$XPA_NUM_DACS,
    SI64Attr:$XPA_NUM_DUCS,
    StrAttr:$XPA_PLL_USED,
    SI64Attr:$XPA_SAMPLE_RATE_MSPS
  );

  let results = (outs
    I<1>:$CLK_DAC,
    I<16>:$DOUT,
    I<1>:$DRDY,
    I<1>:$PLL_DMON_OUT,
    I<1>:$PLL_REFCLK_OUT,
    I<16>:$STATUS_COMMON,
    I<16>:$STATUS_DAC0,
    I<16>:$STATUS_DAC1,
    I<16>:$STATUS_DAC2,
    I<16>:$STATUS_DAC3,
    I<1>:$SYSREF_OUT_NORTH,
    I<1>:$SYSREF_OUT_SOUTH,
    I<1>:$VOUT0_N,
    I<1>:$VOUT0_P,
    I<1>:$VOUT1_N,
    I<1>:$VOUT1_P,
    I<1>:$VOUT2_N,
    I<1>:$VOUT2_P,
    I<1>:$VOUT3_N,
    I<1>:$VOUT3_P
  );
}

def IBUF : XilinxPrimitiveOp<"IBUF", []> {
  let summary = "IBUF Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,

    // IBUF parameters follows
    StrAttr:$CAPACITANCE,
    StrAttr:$IBUF_DELAY_VALUE,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IFD_DELAY_VALUE,
    StrAttr:$IOSTANDARD,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O
  );
}

def IBUFCTRL : XilinxPrimitiveOp<"IBUFCTRL", []> {
  let summary = "IBUFCTRL Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,
    I<1>:$IBUFDISABLE,
    I<1>:$INTERMDISABLE,
    I<1>:$T,

    // IBUFCTRL parameters follows
    StrAttr:$ISTANDARD,
    StrAttr:$USE_IBUFDISABLE
  );

  let results = (outs
    I<1>:$O
  );
}

def IBUFDS : XilinxPrimitiveOp<"IBUFDS", []> {
  let summary = "IBUFDS Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,
    I<1>:$IB,

    // IBUFDS parameters follows
    StrAttr:$LOC,
    StrAttr:$CAPACITANCE,
    StrAttr:$DIFF_TERM,
    StrAttr:$DQS_BIAS,
    StrAttr:$IBUF_DELAY_VALUE,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IFD_DELAY_VALUE,
    StrAttr:$IOSTANDARD
  );

  let results = (outs
    I<1>:$O
  );
}

def IBUFDSE3 : XilinxPrimitiveOp<"IBUFDSE3", []> {
  let summary = "IBUFDSE3 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,
    I<1>:$IB,
    I<1>:$IBUFDISABLE,
    I<4>:$OSC,
    I<2>:$OSC_EN,

    // IBUFDSE3 parameters follows
    StrAttr:$DIFF_TERM,
    StrAttr:$DQS_BIAS,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$SIM_DEVICE,
    SI64Attr:$SIM_INPUT_BUFFER_OFFSET,
    StrAttr:$USE_IBUFDISABLE
  );

  let results = (outs
    I<1>:$O
  );
}

def IBUFDSuDIFFuOUT : XilinxPrimitiveOp<"IBUFDS_DIFF_OUT", []> {
  let summary = "IBUFDS_DIFF_OUT Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,
    I<1>:$IB,

    // IBUFDS_DIFF_OUT parameters follows
    StrAttr:$DIFF_TERM,
    StrAttr:$DQS_BIAS,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O,
    I<1>:$OB
  );
}

def IBUFDSuDIFFuOUTuIBUFDISABLE : XilinxPrimitiveOp<"IBUFDS_DIFF_OUT_IBUFDISABLE", []> {
  let summary = "IBUFDS_DIFF_OUT_IBUFDISABLE Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,
    I<1>:$IB,
    I<1>:$IBUFDISABLE,

    // IBUFDS_DIFF_OUT_IBUFDISABLE parameters follows
    StrAttr:$DIFF_TERM,
    StrAttr:$DQS_BIAS,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$SIM_DEVICE,
    StrAttr:$USE_IBUFDISABLE,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O,
    I<1>:$OB
  );
}

def IBUFDSuDIFFuOUTuINTERMDISABLE : XilinxPrimitiveOp<"IBUFDS_DIFF_OUT_INTERMDISABLE", []> {
  let summary = "IBUFDS_DIFF_OUT_INTERMDISABLE Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,
    I<1>:$IB,
    I<1>:$IBUFDISABLE,
    I<1>:$INTERMDISABLE,

    // IBUFDS_DIFF_OUT_INTERMDISABLE parameters follows
    StrAttr:$DIFF_TERM,
    StrAttr:$DQS_BIAS,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$SIM_DEVICE,
    StrAttr:$USE_IBUFDISABLE,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O,
    I<1>:$OB
  );
}

def IBUFDSuDPHY : XilinxPrimitiveOp<"IBUFDS_DPHY", []> {
  let summary = "IBUFDS_DPHY Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$HSRX_DISABLE,
    I<1>:$I,
    I<1>:$IB,
    I<1>:$LPRX_DISABLE,

    // IBUFDS_DPHY parameters follows
    StrAttr:$DIFF_TERM,
    StrAttr:$IOSTANDARD,
    StrAttr:$SIM_DEVICE
  );

  let results = (outs
    I<1>:$HSRX_O,
    I<1>:$LPRX_O_N,
    I<1>:$LPRX_O_P
  );
}

def IBUFDSuGTE2 : XilinxPrimitiveOp<"IBUFDS_GTE2", []> {
  let summary = "IBUFDS_GTE2 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CEB,
    I<1>:$I,
    I<1>:$IB,

    // IBUFDS_GTE2 parameters follows
    StrAttr:$LOC,
    StrAttr:$CLKCM_CFG,
    StrAttr:$CLKRCV_TRST,
    APIntAttr<I<2>>:$CLKSWING_CFG
  );

  let results = (outs
    I<1>:$O,
    I<1>:$ODIV2
  );
}

def IBUFDSuGTE3 : XilinxPrimitiveOp<"IBUFDS_GTE3", []> {
  let summary = "IBUFDS_GTE3 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CEB,
    I<1>:$I,
    I<1>:$IB,

    // IBUFDS_GTE3 parameters follows
    APIntAttr<I<1>>:$REFCLK_EN_TX_PATH,
    APIntAttr<I<2>>:$REFCLK_HROW_CK_SEL,
    APIntAttr<I<2>>:$REFCLK_ICNTL_RX
  );

  let results = (outs
    I<1>:$O,
    I<1>:$ODIV2
  );
}

def IBUFDSuGTE4 : XilinxPrimitiveOp<"IBUFDS_GTE4", []> {
  let summary = "IBUFDS_GTE4 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CEB,
    I<1>:$I,
    I<1>:$IB,

    // IBUFDS_GTE4 parameters follows
    APIntAttr<I<1>>:$REFCLK_EN_TX_PATH,
    APIntAttr<I<2>>:$REFCLK_HROW_CK_SEL,
    APIntAttr<I<2>>:$REFCLK_ICNTL_RX
  );

  let results = (outs
    I<1>:$O,
    I<1>:$ODIV2
  );
}

def IBUFDSuGTM : XilinxPrimitiveOp<"IBUFDS_GTM", []> {
  let summary = "IBUFDS_GTM Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CEB,
    I<1>:$I,
    I<1>:$IB,

    // IBUFDS_GTM parameters follows
    APIntAttr<I<1>>:$REFCLK_EN_TX_PATH,
    SI64Attr:$REFCLK_HROW_CK_SEL,
    SI64Attr:$REFCLK_ICNTL_RX
  );

  let results = (outs
    I<1>:$O,
    I<1>:$ODIV2
  );
}

def IBUFDSuIBUFDISABLE : XilinxPrimitiveOp<"IBUFDS_IBUFDISABLE", []> {
  let summary = "IBUFDS_IBUFDISABLE Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,
    I<1>:$IB,
    I<1>:$IBUFDISABLE,

    // IBUFDS_IBUFDISABLE parameters follows
    StrAttr:$LOC,
    StrAttr:$DIFF_TERM,
    StrAttr:$DQS_BIAS,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$SIM_DEVICE,
    StrAttr:$USE_IBUFDISABLE
  );

  let results = (outs
    I<1>:$O
  );
}

def IBUFDSuIBUFDISABLEuINT : XilinxPrimitiveOp<"IBUFDS_IBUFDISABLE_INT", []> {
  let summary = "IBUFDS_IBUFDISABLE_INT Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,
    I<1>:$IB,
    I<1>:$IBUFDISABLE,

    // IBUFDS_IBUFDISABLE_INT parameters follows
    StrAttr:$LOC,
    StrAttr:$DIFF_TERM,
    StrAttr:$DQS_BIAS,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$USE_IBUFDISABLE
  );

  let results = (outs
    I<1>:$O
  );
}

def IBUFDSuINTERMDISABLE : XilinxPrimitiveOp<"IBUFDS_INTERMDISABLE", []> {
  let summary = "IBUFDS_INTERMDISABLE Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,
    I<1>:$IB,
    I<1>:$IBUFDISABLE,
    I<1>:$INTERMDISABLE,

    // IBUFDS_INTERMDISABLE parameters follows
    StrAttr:$LOC,
    StrAttr:$DIFF_TERM,
    StrAttr:$DQS_BIAS,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$SIM_DEVICE,
    StrAttr:$USE_IBUFDISABLE
  );

  let results = (outs
    I<1>:$O
  );
}

def IBUFDSuINTERMDISABLEuINT : XilinxPrimitiveOp<"IBUFDS_INTERMDISABLE_INT", []> {
  let summary = "IBUFDS_INTERMDISABLE_INT Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,
    I<1>:$IB,
    I<1>:$IBUFDISABLE,
    I<1>:$INTERMDISABLE,

    // IBUFDS_INTERMDISABLE_INT parameters follows
    StrAttr:$LOC,
    StrAttr:$DIFF_TERM,
    StrAttr:$DQS_BIAS,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$USE_IBUFDISABLE
  );

  let results = (outs
    I<1>:$O
  );
}

def IBUFE3 : XilinxPrimitiveOp<"IBUFE3", []> {
  let summary = "IBUFE3 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,
    I<1>:$IBUFDISABLE,
    I<4>:$OSC,
    I<1>:$OSC_EN,
    I<1>:$VREF,

    // IBUFE3 parameters follows
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$SIM_DEVICE,
    SI64Attr:$SIM_INPUT_BUFFER_OFFSET,
    StrAttr:$USE_IBUFDISABLE
  );

  let results = (outs
    I<1>:$O
  );
}

def IBUFuANALOG : XilinxPrimitiveOp<"IBUF_ANALOG", []> {
  let summary = "IBUF_ANALOG Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I

    // IBUF_ANALOG does not contain any parameters
  );

  let results = (outs
    I<1>:$O
  );
}

def IBUFuIBUFDISABLE : XilinxPrimitiveOp<"IBUF_IBUFDISABLE", []> {
  let summary = "IBUF_IBUFDISABLE Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,
    I<1>:$IBUFDISABLE,

    // IBUF_IBUFDISABLE parameters follows
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$SIM_DEVICE,
    StrAttr:$USE_IBUFDISABLE,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O
  );
}

def IBUFuINTERMDISABLE : XilinxPrimitiveOp<"IBUF_INTERMDISABLE", []> {
  let summary = "IBUF_INTERMDISABLE Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,
    I<1>:$IBUFDISABLE,
    I<1>:$INTERMDISABLE,

    // IBUF_INTERMDISABLE parameters follows
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$SIM_DEVICE,
    StrAttr:$USE_IBUFDISABLE,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O
  );
}

def ICAPE2 : XilinxPrimitiveOp<"ICAPE2", []> {
  let summary = "ICAPE2 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLK,
    I<1>:$CSIB,
    I<1>:$RDWRB,
    I<32>:$I,

    // ICAPE2 parameters follows
    APIntAttr<I<32>>:$DEVICE_ID,
    StrAttr:$ICAP_WIDTH,
    StrAttr:$SIM_CFG_FILE_NAME,
    StrAttr:$LOC
  );

  let results = (outs
    I<32>:$O
  );
}

def ICAPE3 : XilinxPrimitiveOp<"ICAPE3", []> {
  let summary = "ICAPE3 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLK,
    I<1>:$CSIB,
    I<32>:$I,
    I<1>:$RDWRB,

    // ICAPE3 parameters follows
    APIntAttr<I<32>>:$DEVICE_ID,
    StrAttr:$ICAP_AUTO_SWITCH,
    StrAttr:$SIM_CFG_FILE_NAME
  );

  let results = (outs
    I<1>:$AVAIL,
    I<32>:$O,
    I<1>:$PRDONE,
    I<1>:$PRERROR
  );
}

def IDDR : XilinxPrimitiveOp<"IDDR", []> {
  let summary = "IDDR Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$C,
    I<1>:$CE,
    I<1>:$D,
    I<1>:$R,
    I<1>:$S,

    // IDDR parameters follows
    StrAttr:$DDR_CLK_EDGE,
    APIntAttr<I<1>>:$INIT_Q1,
    APIntAttr<I<1>>:$INIT_Q2,
    APIntAttr<I<1>>:$IS_C_INVERTED,
    APIntAttr<I<1>>:$IS_D_INVERTED,
    StrAttr:$SRTYPE,
    StrAttr:$LOC,
    StrAttr:$MSGON,
    StrAttr:$XON
  );

  let results = (outs
    I<1>:$Q1,
    I<1>:$Q2
  );
}

def IDDRE1 : XilinxPrimitiveOp<"IDDRE1", []> {
  let summary = "IDDRE1 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$C,
    I<1>:$CB,
    I<1>:$D,
    I<1>:$R,

    // IDDRE1 parameters follows
    StrAttr:$DDR_CLK_EDGE,
    APIntAttr<I<1>>:$IS_CB_INVERTED,
    APIntAttr<I<1>>:$IS_C_INVERTED
  );

  let results = (outs
    I<1>:$Q1,
    I<1>:$Q2
  );
}

def IDDRu2CLK : XilinxPrimitiveOp<"IDDR_2CLK", []> {
  let summary = "IDDR_2CLK Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$C,
    I<1>:$CB,
    I<1>:$CE,
    I<1>:$D,
    I<1>:$R,
    I<1>:$S,

    // IDDR_2CLK parameters follows
    StrAttr:$DDR_CLK_EDGE,
    APIntAttr<I<1>>:$INIT_Q1,
    APIntAttr<I<1>>:$INIT_Q2,
    APIntAttr<I<1>>:$IS_CB_INVERTED,
    APIntAttr<I<1>>:$IS_C_INVERTED,
    APIntAttr<I<1>>:$IS_D_INVERTED,
    StrAttr:$SRTYPE,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$Q1,
    I<1>:$Q2
  );
}

def IDELAYCTRL : XilinxPrimitiveOp<"IDELAYCTRL", []> {
  let summary = "IDELAYCTRL Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$REFCLK,
    I<1>:$RST,

    // IDELAYCTRL parameters follows
    StrAttr:$SIM_DEVICE
  );

  let results = (outs
    I<1>:$RDY
  );
}

def IDELAYE2 : XilinxPrimitiveOp<"IDELAYE2", []> {
  let summary = "IDELAYE2 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$C,
    I<1>:$CE,
    I<1>:$CINVCTRL,
    I<5>:$CNTVALUEIN,
    I<1>:$DATAIN,
    I<1>:$IDATAIN,
    I<1>:$INC,
    I<1>:$LD,
    I<1>:$LDPIPEEN,
    I<1>:$REGRST,

    // IDELAYE2 parameters follows
    StrAttr:$CINVCTRL_SEL,
    StrAttr:$DELAY_SRC,
    StrAttr:$HIGH_PERFORMANCE_MODE,
    StrAttr:$IDELAY_TYPE,
    SI64Attr:$IDELAY_VALUE,
    APIntAttr<I<1>>:$IS_C_INVERTED,
    APIntAttr<I<1>>:$IS_DATAIN_INVERTED,
    APIntAttr<I<1>>:$IS_IDATAIN_INVERTED,
    StrAttr:$PIPE_SEL,
    StrAttr:$REFCLK_FREQUENCY,
    StrAttr:$SIGNAL_PATTERN,
    StrAttr:$LOC,
    SI64Attr:$SIM_DELAY_D
  );

  let results = (outs
    I<5>:$CNTVALUEOUT,
    I<1>:$DATAOUT
  );
}

def IDELAYE2uFINEDELAY : XilinxPrimitiveOp<"IDELAYE2_FINEDELAY", []> {
  let summary = "IDELAYE2_FINEDELAY Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$C,
    I<1>:$CE,
    I<1>:$CINVCTRL,
    I<5>:$CNTVALUEIN,
    I<1>:$DATAIN,
    I<1>:$IDATAIN,
    I<3>:$IFDLY,
    I<1>:$INC,
    I<1>:$LD,
    I<1>:$LDPIPEEN,
    I<1>:$REGRST,

    // IDELAYE2_FINEDELAY parameters follows
    StrAttr:$CINVCTRL_SEL,
    StrAttr:$DELAY_SRC,
    StrAttr:$FINEDELAY,
    StrAttr:$HIGH_PERFORMANCE_MODE,
    StrAttr:$IDELAY_TYPE,
    SI64Attr:$IDELAY_VALUE,
    APIntAttr<I<1>>:$IS_C_INVERTED,
    APIntAttr<I<1>>:$IS_DATAIN_INVERTED,
    APIntAttr<I<1>>:$IS_IDATAIN_INVERTED,
    StrAttr:$PIPE_SEL,
    StrAttr:$REFCLK_FREQUENCY,
    StrAttr:$SIGNAL_PATTERN,
    StrAttr:$LOC,
    SI64Attr:$SIM_DELAY_D
  );

  let results = (outs
    I<5>:$CNTVALUEOUT,
    I<1>:$DATAOUT
  );
}

def IDELAYE3 : XilinxPrimitiveOp<"IDELAYE3", []> {
  let summary = "IDELAYE3 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CASC_IN,
    I<1>:$CASC_RETURN,
    I<1>:$CE,
    I<1>:$CLK,
    I<9>:$CNTVALUEIN,
    I<1>:$DATAIN,
    I<1>:$EN_VTC,
    I<1>:$IDATAIN,
    I<1>:$INC,
    I<1>:$LOAD,
    I<1>:$RST,

    // IDELAYE3 parameters follows
    StrAttr:$CASCADE,
    StrAttr:$DELAY_FORMAT,
    StrAttr:$DELAY_SRC,
    StrAttr:$DELAY_TYPE,
    SI64Attr:$DELAY_VALUE,
    APIntAttr<I<1>>:$IS_CLK_INVERTED,
    APIntAttr<I<1>>:$IS_RST_INVERTED,
    StrAttr:$LOOPBACK,
    StrAttr:$REFCLK_FREQUENCY,
    StrAttr:$SIM_DEVICE,
    StrAttr:$SIM_VERSION,
    StrAttr:$UPDATE_MODE
  );

  let results = (outs
    I<1>:$CASC_OUT,
    I<9>:$CNTVALUEOUT,
    I<1>:$DATAOUT
  );
}

def ILKN : XilinxPrimitiveOp<"ILKN", []> {
  let summary = "ILKN Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CORE_CLK,
    I<1>:$CTL_RX_FORCE_RESYNC,
    I<1>:$CTL_RX_RETRANS_ACK,
    I<1>:$CTL_RX_RETRANS_ENABLE,
    I<1>:$CTL_RX_RETRANS_ERRIN,
    I<1>:$CTL_RX_RETRANS_FORCE_REQ,
    I<1>:$CTL_RX_RETRANS_RESET,
    I<1>:$CTL_RX_RETRANS_RESET_MODE,
    I<1>:$CTL_TX_DIAGWORD_INTFSTAT,
    I<12>:$CTL_TX_DIAGWORD_LANESTAT,
    I<1>:$CTL_TX_ENABLE,
    I<1>:$CTL_TX_ERRINJ_BITERR_GO,
    I<4>:$CTL_TX_ERRINJ_BITERR_LANE,
    I<256>:$CTL_TX_FC_STAT,
    I<8>:$CTL_TX_MUBITS,
    I<1>:$CTL_TX_RETRANS_ENABLE,
    I<1>:$CTL_TX_RETRANS_RAM_PERRIN,
    I<644>:$CTL_TX_RETRANS_RAM_RDATA,
    I<1>:$CTL_TX_RETRANS_REQ,
    I<1>:$CTL_TX_RETRANS_REQ_VALID,
    I<12>:$CTL_TX_RLIM_DELTA,
    I<1>:$CTL_TX_RLIM_ENABLE,
    I<8>:$CTL_TX_RLIM_INTV,
    I<12>:$CTL_TX_RLIM_MAX,
    I<10>:$DRP_ADDR,
    I<1>:$DRP_CLK,
    I<16>:$DRP_DI,
    I<1>:$DRP_EN,
    I<1>:$DRP_WE,
    I<1>:$LBUS_CLK,
    I<1>:$RX_BYPASS_FORCE_REALIGNIN,
    I<1>:$RX_BYPASS_RDIN,
    I<1>:$RX_RESET,
    I<12>:$RX_SERDES_CLK,
    I<64>:$RX_SERDES_DATA00,
    I<64>:$RX_SERDES_DATA01,
    I<64>:$RX_SERDES_DATA02,
    I<64>:$RX_SERDES_DATA03,
    I<64>:$RX_SERDES_DATA04,
    I<64>:$RX_SERDES_DATA05,
    I<64>:$RX_SERDES_DATA06,
    I<64>:$RX_SERDES_DATA07,
    I<64>:$RX_SERDES_DATA08,
    I<64>:$RX_SERDES_DATA09,
    I<64>:$RX_SERDES_DATA10,
    I<64>:$RX_SERDES_DATA11,
    I<12>:$RX_SERDES_RESET,
    I<1>:$TX_BCTLIN0,
    I<1>:$TX_BCTLIN1,
    I<1>:$TX_BCTLIN2,
    I<1>:$TX_BCTLIN3,
    I<12>:$TX_BYPASS_CTRLIN,
    I<64>:$TX_BYPASS_DATAIN00,
    I<64>:$TX_BYPASS_DATAIN01,
    I<64>:$TX_BYPASS_DATAIN02,
    I<64>:$TX_BYPASS_DATAIN03,
    I<64>:$TX_BYPASS_DATAIN04,
    I<64>:$TX_BYPASS_DATAIN05,
    I<64>:$TX_BYPASS_DATAIN06,
    I<64>:$TX_BYPASS_DATAIN07,
    I<64>:$TX_BYPASS_DATAIN08,
    I<64>:$TX_BYPASS_DATAIN09,
    I<64>:$TX_BYPASS_DATAIN10,
    I<64>:$TX_BYPASS_DATAIN11,
    I<1>:$TX_BYPASS_ENAIN,
    I<8>:$TX_BYPASS_GEARBOX_SEQIN,
    I<4>:$TX_BYPASS_MFRAMER_STATEIN,
    I<11>:$TX_CHANIN0,
    I<11>:$TX_CHANIN1,
    I<11>:$TX_CHANIN2,
    I<11>:$TX_CHANIN3,
    I<128>:$TX_DATAIN0,
    I<128>:$TX_DATAIN1,
    I<128>:$TX_DATAIN2,
    I<128>:$TX_DATAIN3,
    I<1>:$TX_ENAIN0,
    I<1>:$TX_ENAIN1,
    I<1>:$TX_ENAIN2,
    I<1>:$TX_ENAIN3,
    I<1>:$TX_EOPIN0,
    I<1>:$TX_EOPIN1,
    I<1>:$TX_EOPIN2,
    I<1>:$TX_EOPIN3,
    I<1>:$TX_ERRIN0,
    I<1>:$TX_ERRIN1,
    I<1>:$TX_ERRIN2,
    I<1>:$TX_ERRIN3,
    I<4>:$TX_MTYIN0,
    I<4>:$TX_MTYIN1,
    I<4>:$TX_MTYIN2,
    I<4>:$TX_MTYIN3,
    I<1>:$TX_RESET,
    I<1>:$TX_SERDES_REFCLK,
    I<1>:$TX_SERDES_REFCLK_RESET,
    I<1>:$TX_SOPIN0,
    I<1>:$TX_SOPIN1,
    I<1>:$TX_SOPIN2,
    I<1>:$TX_SOPIN3,

    // ILKN parameters follows
    StrAttr:$BYPASS,
    APIntAttr<I<2>>:$CTL_RX_BURSTMAX,
    APIntAttr<I<2>>:$CTL_RX_CHAN_EXT,
    APIntAttr<I<4>>:$CTL_RX_LAST_LANE,
    APIntAttr<I<16>>:$CTL_RX_MFRAMELEN_MINUS1,
    StrAttr:$CTL_RX_PACKET_MODE,
    APIntAttr<I<3>>:$CTL_RX_RETRANS_MULT,
    APIntAttr<I<4>>:$CTL_RX_RETRANS_RETRY,
    APIntAttr<I<16>>:$CTL_RX_RETRANS_TIMER1,
    APIntAttr<I<16>>:$CTL_RX_RETRANS_TIMER2,
    APIntAttr<I<12>>:$CTL_RX_RETRANS_WDOG,
    APIntAttr<I<8>>:$CTL_RX_RETRANS_WRAP_TIMER,
    StrAttr:$CTL_TEST_MODE_PIN_CHAR,
    APIntAttr<I<2>>:$CTL_TX_BURSTMAX,
    APIntAttr<I<3>>:$CTL_TX_BURSTSHORT,
    APIntAttr<I<2>>:$CTL_TX_CHAN_EXT,
    StrAttr:$CTL_TX_DISABLE_SKIPWORD,
    APIntAttr<I<7>>:$CTL_TX_FC_CALLEN,
    APIntAttr<I<4>>:$CTL_TX_LAST_LANE,
    APIntAttr<I<16>>:$CTL_TX_MFRAMELEN_MINUS1,
    APIntAttr<I<14>>:$CTL_TX_RETRANS_DEPTH,
    APIntAttr<I<3>>:$CTL_TX_RETRANS_MULT,
    APIntAttr<I<2>>:$CTL_TX_RETRANS_RAM_BANKS,
    StrAttr:$MODE,
    StrAttr:$SIM_VERSION,
    StrAttr:$TEST_MODE_PIN_CHAR
  );

  let results = (outs
    I<16>:$DRP_DO,
    I<1>:$DRP_RDY,
    I<66>:$RX_BYPASS_DATAOUT00,
    I<66>:$RX_BYPASS_DATAOUT01,
    I<66>:$RX_BYPASS_DATAOUT02,
    I<66>:$RX_BYPASS_DATAOUT03,
    I<66>:$RX_BYPASS_DATAOUT04,
    I<66>:$RX_BYPASS_DATAOUT05,
    I<66>:$RX_BYPASS_DATAOUT06,
    I<66>:$RX_BYPASS_DATAOUT07,
    I<66>:$RX_BYPASS_DATAOUT08,
    I<66>:$RX_BYPASS_DATAOUT09,
    I<66>:$RX_BYPASS_DATAOUT10,
    I<66>:$RX_BYPASS_DATAOUT11,
    I<12>:$RX_BYPASS_ENAOUT,
    I<12>:$RX_BYPASS_IS_AVAILOUT,
    I<12>:$RX_BYPASS_IS_BADLYFRAMEDOUT,
    I<12>:$RX_BYPASS_IS_OVERFLOWOUT,
    I<12>:$RX_BYPASS_IS_SYNCEDOUT,
    I<12>:$RX_BYPASS_IS_SYNCWORDOUT,
    I<11>:$RX_CHANOUT0,
    I<11>:$RX_CHANOUT1,
    I<11>:$RX_CHANOUT2,
    I<11>:$RX_CHANOUT3,
    I<128>:$RX_DATAOUT0,
    I<128>:$RX_DATAOUT1,
    I<128>:$RX_DATAOUT2,
    I<128>:$RX_DATAOUT3,
    I<1>:$RX_ENAOUT0,
    I<1>:$RX_ENAOUT1,
    I<1>:$RX_ENAOUT2,
    I<1>:$RX_ENAOUT3,
    I<1>:$RX_EOPOUT0,
    I<1>:$RX_EOPOUT1,
    I<1>:$RX_EOPOUT2,
    I<1>:$RX_EOPOUT3,
    I<1>:$RX_ERROUT0,
    I<1>:$RX_ERROUT1,
    I<1>:$RX_ERROUT2,
    I<1>:$RX_ERROUT3,
    I<4>:$RX_MTYOUT0,
    I<4>:$RX_MTYOUT1,
    I<4>:$RX_MTYOUT2,
    I<4>:$RX_MTYOUT3,
    I<1>:$RX_OVFOUT,
    I<1>:$RX_SOPOUT0,
    I<1>:$RX_SOPOUT1,
    I<1>:$RX_SOPOUT2,
    I<1>:$RX_SOPOUT3,
    I<1>:$STAT_RX_ALIGNED,
    I<1>:$STAT_RX_ALIGNED_ERR,
    I<12>:$STAT_RX_BAD_TYPE_ERR,
    I<1>:$STAT_RX_BURSTMAX_ERR,
    I<1>:$STAT_RX_BURST_ERR,
    I<1>:$STAT_RX_CRC24_ERR,
    I<12>:$STAT_RX_CRC32_ERR,
    I<12>:$STAT_RX_CRC32_VALID,
    I<12>:$STAT_RX_DESCRAM_ERR,
    I<12>:$STAT_RX_DIAGWORD_INTFSTAT,
    I<12>:$STAT_RX_DIAGWORD_LANESTAT,
    I<256>:$STAT_RX_FC_STAT,
    I<12>:$STAT_RX_FRAMING_ERR,
    I<1>:$STAT_RX_MEOP_ERR,
    I<12>:$STAT_RX_MF_ERR,
    I<12>:$STAT_RX_MF_LEN_ERR,
    I<12>:$STAT_RX_MF_REPEAT_ERR,
    I<1>:$STAT_RX_MISALIGNED,
    I<1>:$STAT_RX_MSOP_ERR,
    I<8>:$STAT_RX_MUBITS,
    I<1>:$STAT_RX_MUBITS_UPDATED,
    I<1>:$STAT_RX_OVERFLOW_ERR,
    I<1>:$STAT_RX_RETRANS_CRC24_ERR,
    I<1>:$STAT_RX_RETRANS_DISC,
    I<16>:$STAT_RX_RETRANS_LATENCY,
    I<1>:$STAT_RX_RETRANS_REQ,
    I<1>:$STAT_RX_RETRANS_RETRY_ERR,
    I<8>:$STAT_RX_RETRANS_SEQ,
    I<1>:$STAT_RX_RETRANS_SEQ_UPDATED,
    I<3>:$STAT_RX_RETRANS_STATE,
    I<5>:$STAT_RX_RETRANS_SUBSEQ,
    I<1>:$STAT_RX_RETRANS_WDOG_ERR,
    I<1>:$STAT_RX_RETRANS_WRAP_ERR,
    I<12>:$STAT_RX_SYNCED,
    I<12>:$STAT_RX_SYNCED_ERR,
    I<12>:$STAT_RX_WORD_SYNC,
    I<1>:$STAT_TX_BURST_ERR,
    I<1>:$STAT_TX_ERRINJ_BITERR_DONE,
    I<1>:$STAT_TX_OVERFLOW_ERR,
    I<1>:$STAT_TX_RETRANS_BURST_ERR,
    I<1>:$STAT_TX_RETRANS_BUSY,
    I<1>:$STAT_TX_RETRANS_RAM_PERROUT,
    I<9>:$STAT_TX_RETRANS_RAM_RADDR,
    I<1>:$STAT_TX_RETRANS_RAM_RD_B0,
    I<1>:$STAT_TX_RETRANS_RAM_RD_B1,
    I<1>:$STAT_TX_RETRANS_RAM_RD_B2,
    I<1>:$STAT_TX_RETRANS_RAM_RD_B3,
    I<2>:$STAT_TX_RETRANS_RAM_RSEL,
    I<9>:$STAT_TX_RETRANS_RAM_WADDR,
    I<644>:$STAT_TX_RETRANS_RAM_WDATA,
    I<1>:$STAT_TX_RETRANS_RAM_WE_B0,
    I<1>:$STAT_TX_RETRANS_RAM_WE_B1,
    I<1>:$STAT_TX_RETRANS_RAM_WE_B2,
    I<1>:$STAT_TX_RETRANS_RAM_WE_B3,
    I<1>:$STAT_TX_UNDERFLOW_ERR,
    I<1>:$TX_OVFOUT,
    I<1>:$TX_RDYOUT,
    I<64>:$TX_SERDES_DATA00,
    I<64>:$TX_SERDES_DATA01,
    I<64>:$TX_SERDES_DATA02,
    I<64>:$TX_SERDES_DATA03,
    I<64>:$TX_SERDES_DATA04,
    I<64>:$TX_SERDES_DATA05,
    I<64>:$TX_SERDES_DATA06,
    I<64>:$TX_SERDES_DATA07,
    I<64>:$TX_SERDES_DATA08,
    I<64>:$TX_SERDES_DATA09,
    I<64>:$TX_SERDES_DATA10,
    I<64>:$TX_SERDES_DATA11
  );
}

def ILKNE4 : XilinxPrimitiveOp<"ILKNE4", []> {
  let summary = "ILKNE4 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CORE_CLK,
    I<1>:$CTL_RX_FORCE_RESYNC,
    I<1>:$CTL_RX_RETRANS_ACK,
    I<1>:$CTL_RX_RETRANS_ENABLE,
    I<1>:$CTL_RX_RETRANS_ERRIN,
    I<1>:$CTL_RX_RETRANS_FORCE_REQ,
    I<1>:$CTL_RX_RETRANS_RESET,
    I<1>:$CTL_RX_RETRANS_RESET_MODE,
    I<1>:$CTL_TX_DIAGWORD_INTFSTAT,
    I<12>:$CTL_TX_DIAGWORD_LANESTAT,
    I<1>:$CTL_TX_ENABLE,
    I<1>:$CTL_TX_ERRINJ_BITERR_GO,
    I<4>:$CTL_TX_ERRINJ_BITERR_LANE,
    I<256>:$CTL_TX_FC_STAT,
    I<8>:$CTL_TX_MUBITS,
    I<1>:$CTL_TX_RETRANS_ENABLE,
    I<1>:$CTL_TX_RETRANS_RAM_PERRIN,
    I<644>:$CTL_TX_RETRANS_RAM_RDATA,
    I<1>:$CTL_TX_RETRANS_REQ,
    I<1>:$CTL_TX_RETRANS_REQ_VALID,
    I<12>:$CTL_TX_RLIM_DELTA,
    I<1>:$CTL_TX_RLIM_ENABLE,
    I<8>:$CTL_TX_RLIM_INTV,
    I<12>:$CTL_TX_RLIM_MAX,
    I<10>:$DRP_ADDR,
    I<1>:$DRP_CLK,
    I<16>:$DRP_DI,
    I<1>:$DRP_EN,
    I<1>:$DRP_WE,
    I<1>:$LBUS_CLK,
    I<1>:$RX_BYPASS_FORCE_REALIGNIN,
    I<1>:$RX_BYPASS_RDIN,
    I<1>:$RX_RESET,
    I<12>:$RX_SERDES_CLK,
    I<64>:$RX_SERDES_DATA00,
    I<64>:$RX_SERDES_DATA01,
    I<64>:$RX_SERDES_DATA02,
    I<64>:$RX_SERDES_DATA03,
    I<64>:$RX_SERDES_DATA04,
    I<64>:$RX_SERDES_DATA05,
    I<64>:$RX_SERDES_DATA06,
    I<64>:$RX_SERDES_DATA07,
    I<64>:$RX_SERDES_DATA08,
    I<64>:$RX_SERDES_DATA09,
    I<64>:$RX_SERDES_DATA10,
    I<64>:$RX_SERDES_DATA11,
    I<12>:$RX_SERDES_RESET,
    I<1>:$TX_BCTLIN0,
    I<1>:$TX_BCTLIN1,
    I<1>:$TX_BCTLIN2,
    I<1>:$TX_BCTLIN3,
    I<12>:$TX_BYPASS_CTRLIN,
    I<64>:$TX_BYPASS_DATAIN00,
    I<64>:$TX_BYPASS_DATAIN01,
    I<64>:$TX_BYPASS_DATAIN02,
    I<64>:$TX_BYPASS_DATAIN03,
    I<64>:$TX_BYPASS_DATAIN04,
    I<64>:$TX_BYPASS_DATAIN05,
    I<64>:$TX_BYPASS_DATAIN06,
    I<64>:$TX_BYPASS_DATAIN07,
    I<64>:$TX_BYPASS_DATAIN08,
    I<64>:$TX_BYPASS_DATAIN09,
    I<64>:$TX_BYPASS_DATAIN10,
    I<64>:$TX_BYPASS_DATAIN11,
    I<1>:$TX_BYPASS_ENAIN,
    I<8>:$TX_BYPASS_GEARBOX_SEQIN,
    I<4>:$TX_BYPASS_MFRAMER_STATEIN,
    I<11>:$TX_CHANIN0,
    I<11>:$TX_CHANIN1,
    I<11>:$TX_CHANIN2,
    I<11>:$TX_CHANIN3,
    I<128>:$TX_DATAIN0,
    I<128>:$TX_DATAIN1,
    I<128>:$TX_DATAIN2,
    I<128>:$TX_DATAIN3,
    I<1>:$TX_ENAIN0,
    I<1>:$TX_ENAIN1,
    I<1>:$TX_ENAIN2,
    I<1>:$TX_ENAIN3,
    I<1>:$TX_EOPIN0,
    I<1>:$TX_EOPIN1,
    I<1>:$TX_EOPIN2,
    I<1>:$TX_EOPIN3,
    I<1>:$TX_ERRIN0,
    I<1>:$TX_ERRIN1,
    I<1>:$TX_ERRIN2,
    I<1>:$TX_ERRIN3,
    I<4>:$TX_MTYIN0,
    I<4>:$TX_MTYIN1,
    I<4>:$TX_MTYIN2,
    I<4>:$TX_MTYIN3,
    I<1>:$TX_RESET,
    I<1>:$TX_SERDES_REFCLK,
    I<1>:$TX_SERDES_REFCLK_RESET,
    I<1>:$TX_SOPIN0,
    I<1>:$TX_SOPIN1,
    I<1>:$TX_SOPIN2,
    I<1>:$TX_SOPIN3,

    // ILKNE4 parameters follows
    StrAttr:$BYPASS,
    APIntAttr<I<2>>:$CTL_RX_BURSTMAX,
    APIntAttr<I<2>>:$CTL_RX_CHAN_EXT,
    APIntAttr<I<4>>:$CTL_RX_LAST_LANE,
    APIntAttr<I<16>>:$CTL_RX_MFRAMELEN_MINUS1,
    StrAttr:$CTL_RX_PACKET_MODE,
    APIntAttr<I<3>>:$CTL_RX_RETRANS_MULT,
    APIntAttr<I<4>>:$CTL_RX_RETRANS_RETRY,
    APIntAttr<I<16>>:$CTL_RX_RETRANS_TIMER1,
    APIntAttr<I<16>>:$CTL_RX_RETRANS_TIMER2,
    APIntAttr<I<12>>:$CTL_RX_RETRANS_WDOG,
    APIntAttr<I<8>>:$CTL_RX_RETRANS_WRAP_TIMER,
    StrAttr:$CTL_TEST_MODE_PIN_CHAR,
    APIntAttr<I<2>>:$CTL_TX_BURSTMAX,
    APIntAttr<I<3>>:$CTL_TX_BURSTSHORT,
    APIntAttr<I<2>>:$CTL_TX_CHAN_EXT,
    StrAttr:$CTL_TX_DISABLE_SKIPWORD,
    APIntAttr<I<4>>:$CTL_TX_FC_CALLEN,
    APIntAttr<I<4>>:$CTL_TX_LAST_LANE,
    APIntAttr<I<16>>:$CTL_TX_MFRAMELEN_MINUS1,
    APIntAttr<I<14>>:$CTL_TX_RETRANS_DEPTH,
    APIntAttr<I<3>>:$CTL_TX_RETRANS_MULT,
    APIntAttr<I<2>>:$CTL_TX_RETRANS_RAM_BANKS,
    StrAttr:$MODE,
    StrAttr:$SIM_DEVICE,
    StrAttr:$TEST_MODE_PIN_CHAR
  );

  let results = (outs
    I<16>:$DRP_DO,
    I<1>:$DRP_RDY,
    I<66>:$RX_BYPASS_DATAOUT00,
    I<66>:$RX_BYPASS_DATAOUT01,
    I<66>:$RX_BYPASS_DATAOUT02,
    I<66>:$RX_BYPASS_DATAOUT03,
    I<66>:$RX_BYPASS_DATAOUT04,
    I<66>:$RX_BYPASS_DATAOUT05,
    I<66>:$RX_BYPASS_DATAOUT06,
    I<66>:$RX_BYPASS_DATAOUT07,
    I<66>:$RX_BYPASS_DATAOUT08,
    I<66>:$RX_BYPASS_DATAOUT09,
    I<66>:$RX_BYPASS_DATAOUT10,
    I<66>:$RX_BYPASS_DATAOUT11,
    I<12>:$RX_BYPASS_ENAOUT,
    I<12>:$RX_BYPASS_IS_AVAILOUT,
    I<12>:$RX_BYPASS_IS_BADLYFRAMEDOUT,
    I<12>:$RX_BYPASS_IS_OVERFLOWOUT,
    I<12>:$RX_BYPASS_IS_SYNCEDOUT,
    I<12>:$RX_BYPASS_IS_SYNCWORDOUT,
    I<11>:$RX_CHANOUT0,
    I<11>:$RX_CHANOUT1,
    I<11>:$RX_CHANOUT2,
    I<11>:$RX_CHANOUT3,
    I<128>:$RX_DATAOUT0,
    I<128>:$RX_DATAOUT1,
    I<128>:$RX_DATAOUT2,
    I<128>:$RX_DATAOUT3,
    I<1>:$RX_ENAOUT0,
    I<1>:$RX_ENAOUT1,
    I<1>:$RX_ENAOUT2,
    I<1>:$RX_ENAOUT3,
    I<1>:$RX_EOPOUT0,
    I<1>:$RX_EOPOUT1,
    I<1>:$RX_EOPOUT2,
    I<1>:$RX_EOPOUT3,
    I<1>:$RX_ERROUT0,
    I<1>:$RX_ERROUT1,
    I<1>:$RX_ERROUT2,
    I<1>:$RX_ERROUT3,
    I<4>:$RX_MTYOUT0,
    I<4>:$RX_MTYOUT1,
    I<4>:$RX_MTYOUT2,
    I<4>:$RX_MTYOUT3,
    I<1>:$RX_OVFOUT,
    I<1>:$RX_SOPOUT0,
    I<1>:$RX_SOPOUT1,
    I<1>:$RX_SOPOUT2,
    I<1>:$RX_SOPOUT3,
    I<1>:$STAT_RX_ALIGNED,
    I<1>:$STAT_RX_ALIGNED_ERR,
    I<12>:$STAT_RX_BAD_TYPE_ERR,
    I<1>:$STAT_RX_BURSTMAX_ERR,
    I<1>:$STAT_RX_BURST_ERR,
    I<1>:$STAT_RX_CRC24_ERR,
    I<12>:$STAT_RX_CRC32_ERR,
    I<12>:$STAT_RX_CRC32_VALID,
    I<12>:$STAT_RX_DESCRAM_ERR,
    I<12>:$STAT_RX_DIAGWORD_INTFSTAT,
    I<12>:$STAT_RX_DIAGWORD_LANESTAT,
    I<256>:$STAT_RX_FC_STAT,
    I<12>:$STAT_RX_FRAMING_ERR,
    I<1>:$STAT_RX_MEOP_ERR,
    I<12>:$STAT_RX_MF_ERR,
    I<12>:$STAT_RX_MF_LEN_ERR,
    I<12>:$STAT_RX_MF_REPEAT_ERR,
    I<1>:$STAT_RX_MISALIGNED,
    I<1>:$STAT_RX_MSOP_ERR,
    I<8>:$STAT_RX_MUBITS,
    I<1>:$STAT_RX_MUBITS_UPDATED,
    I<1>:$STAT_RX_OVERFLOW_ERR,
    I<1>:$STAT_RX_RETRANS_CRC24_ERR,
    I<1>:$STAT_RX_RETRANS_DISC,
    I<16>:$STAT_RX_RETRANS_LATENCY,
    I<1>:$STAT_RX_RETRANS_REQ,
    I<1>:$STAT_RX_RETRANS_RETRY_ERR,
    I<8>:$STAT_RX_RETRANS_SEQ,
    I<1>:$STAT_RX_RETRANS_SEQ_UPDATED,
    I<3>:$STAT_RX_RETRANS_STATE,
    I<5>:$STAT_RX_RETRANS_SUBSEQ,
    I<1>:$STAT_RX_RETRANS_WDOG_ERR,
    I<1>:$STAT_RX_RETRANS_WRAP_ERR,
    I<12>:$STAT_RX_SYNCED,
    I<12>:$STAT_RX_SYNCED_ERR,
    I<12>:$STAT_RX_WORD_SYNC,
    I<1>:$STAT_TX_BURST_ERR,
    I<1>:$STAT_TX_ERRINJ_BITERR_DONE,
    I<1>:$STAT_TX_OVERFLOW_ERR,
    I<1>:$STAT_TX_RETRANS_BURST_ERR,
    I<1>:$STAT_TX_RETRANS_BUSY,
    I<1>:$STAT_TX_RETRANS_RAM_PERROUT,
    I<9>:$STAT_TX_RETRANS_RAM_RADDR,
    I<1>:$STAT_TX_RETRANS_RAM_RD_B0,
    I<1>:$STAT_TX_RETRANS_RAM_RD_B1,
    I<1>:$STAT_TX_RETRANS_RAM_RD_B2,
    I<1>:$STAT_TX_RETRANS_RAM_RD_B3,
    I<2>:$STAT_TX_RETRANS_RAM_RSEL,
    I<9>:$STAT_TX_RETRANS_RAM_WADDR,
    I<644>:$STAT_TX_RETRANS_RAM_WDATA,
    I<1>:$STAT_TX_RETRANS_RAM_WE_B0,
    I<1>:$STAT_TX_RETRANS_RAM_WE_B1,
    I<1>:$STAT_TX_RETRANS_RAM_WE_B2,
    I<1>:$STAT_TX_RETRANS_RAM_WE_B3,
    I<1>:$STAT_TX_UNDERFLOW_ERR,
    I<1>:$TX_OVFOUT,
    I<1>:$TX_RDYOUT,
    I<64>:$TX_SERDES_DATA00,
    I<64>:$TX_SERDES_DATA01,
    I<64>:$TX_SERDES_DATA02,
    I<64>:$TX_SERDES_DATA03,
    I<64>:$TX_SERDES_DATA04,
    I<64>:$TX_SERDES_DATA05,
    I<64>:$TX_SERDES_DATA06,
    I<64>:$TX_SERDES_DATA07,
    I<64>:$TX_SERDES_DATA08,
    I<64>:$TX_SERDES_DATA09,
    I<64>:$TX_SERDES_DATA10,
    I<64>:$TX_SERDES_DATA11
  );
}

def INBUF : XilinxPrimitiveOp<"INBUF", []> {
  let summary = "INBUF Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<4>:$OSC,
    I<1>:$OSC_EN,
    I<1>:$PAD,
    I<1>:$VREF,

    // INBUF parameters follows
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$ISTANDARD,
    SI64Attr:$SIM_INPUT_BUFFER_OFFSET
  );

  let results = (outs
    I<1>:$O
  );
}

def INV : XilinxPrimitiveOp<"INV", []> {
  let summary = "INV Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,

    // INV parameters follows
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O
  );
}

def INuFIFO : XilinxPrimitiveOp<"IN_FIFO", []> {
  let summary = "IN_FIFO Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$RDCLK,
    I<1>:$RDEN,
    I<1>:$RESET,
    I<1>:$WRCLK,
    I<1>:$WREN,
    I<4>:$D0,
    I<4>:$D1,
    I<4>:$D2,
    I<4>:$D3,
    I<4>:$D4,
    I<4>:$D7,
    I<4>:$D8,
    I<4>:$D9,
    I<8>:$D5,
    I<8>:$D6,

    // IN_FIFO parameters follows
    StrAttr:$LOC,
    SI64Attr:$ALMOST_EMPTY_VALUE,
    SI64Attr:$ALMOST_FULL_VALUE,
    StrAttr:$ARRAY_MODE,
    StrAttr:$SYNCHRONOUS_MODE
  );

  let results = (outs
    I<1>:$ALMOSTEMPTY,
    I<1>:$ALMOSTFULL,
    I<1>:$EMPTY,
    I<1>:$FULL,
    I<8>:$Q0,
    I<8>:$Q1,
    I<8>:$Q2,
    I<8>:$Q3,
    I<8>:$Q4,
    I<8>:$Q5,
    I<8>:$Q6,
    I<8>:$Q7,
    I<8>:$Q8,
    I<8>:$Q9
  );
}

def IOBUF : XilinxPrimitiveOp<"IOBUF", []> {
  let summary = "IOBUF Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,
    I<1>:$T,

    // IOBUF parameters follows
    SI64Attr:$DRIVE,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$LOC,
    StrAttr:$SLEW
  );

  let results = (outs
    I<1>:$O
  );
}

def IOBUFDS : XilinxPrimitiveOp<"IOBUFDS", []> {
  let summary = "IOBUFDS Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,
    I<1>:$T,

    // IOBUFDS parameters follows
    StrAttr:$LOC,
    StrAttr:$DIFF_TERM,
    StrAttr:$DQS_BIAS,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$SLEW
  );

  let results = (outs
    I<1>:$O
  );
}

def IOBUFDSE3 : XilinxPrimitiveOp<"IOBUFDSE3", []> {
  let summary = "IOBUFDSE3 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    InOut<1>:$IO,
    InOut<1>:$IOB,
    I<1>:$DCITERMDISABLE,
    I<1>:$I,
    I<1>:$IBUFDISABLE,
    I<4>:$OSC,
    I<2>:$OSC_EN,
    I<1>:$T,

    // IOBUFDSE3 parameters follows
    StrAttr:$DIFF_TERM,
    StrAttr:$DQS_BIAS,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$SIM_DEVICE,
    SI64Attr:$SIM_INPUT_BUFFER_OFFSET,
    StrAttr:$USE_IBUFDISABLE
  );

  let results = (outs
    I<1>:$O
  );
}

def IOBUFDSuDCIEN : XilinxPrimitiveOp<"IOBUFDS_DCIEN", []> {
  let summary = "IOBUFDS_DCIEN Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$DCITERMDISABLE,
    I<1>:$I,
    I<1>:$IBUFDISABLE,
    I<1>:$T,

    // IOBUFDS_DCIEN parameters follows
    StrAttr:$LOC,
    StrAttr:$DIFF_TERM,
    StrAttr:$DQS_BIAS,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$SIM_DEVICE,
    StrAttr:$SLEW,
    StrAttr:$USE_IBUFDISABLE
  );

  let results = (outs
    I<1>:$O
  );
}

def IOBUFDSuDIFFuOUT : XilinxPrimitiveOp<"IOBUFDS_DIFF_OUT", []> {
  let summary = "IOBUFDS_DIFF_OUT Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,
    I<1>:$TM,
    I<1>:$TS,

    // IOBUFDS_DIFF_OUT parameters follows
    StrAttr:$DIFF_TERM,
    StrAttr:$DQS_BIAS,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O,
    I<1>:$OB
  );
}

def IOBUFDSuDIFFuOUTuDCIEN : XilinxPrimitiveOp<"IOBUFDS_DIFF_OUT_DCIEN", []> {
  let summary = "IOBUFDS_DIFF_OUT_DCIEN Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$DCITERMDISABLE,
    I<1>:$I,
    I<1>:$IBUFDISABLE,
    I<1>:$TM,
    I<1>:$TS,

    // IOBUFDS_DIFF_OUT_DCIEN parameters follows
    StrAttr:$DIFF_TERM,
    StrAttr:$DQS_BIAS,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$SIM_DEVICE,
    StrAttr:$USE_IBUFDISABLE,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O,
    I<1>:$OB
  );
}

def IOBUFDSuDIFFuOUTuINTERMDISABLE : XilinxPrimitiveOp<"IOBUFDS_DIFF_OUT_INTERMDISABLE", []> {
  let summary = "IOBUFDS_DIFF_OUT_INTERMDISABLE Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,
    I<1>:$IBUFDISABLE,
    I<1>:$INTERMDISABLE,
    I<1>:$TM,
    I<1>:$TS,

    // IOBUFDS_DIFF_OUT_INTERMDISABLE parameters follows
    StrAttr:$DIFF_TERM,
    StrAttr:$DQS_BIAS,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$SIM_DEVICE,
    StrAttr:$USE_IBUFDISABLE,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O,
    I<1>:$OB
  );
}

def IOBUFDSuINTERMDISABLE : XilinxPrimitiveOp<"IOBUFDS_INTERMDISABLE", []> {
  let summary = "IOBUFDS_INTERMDISABLE Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,
    I<1>:$IBUFDISABLE,
    I<1>:$INTERMDISABLE,
    I<1>:$T,

    // IOBUFDS_INTERMDISABLE parameters follows
    StrAttr:$LOC,
    StrAttr:$DIFF_TERM,
    StrAttr:$DQS_BIAS,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$SIM_DEVICE,
    StrAttr:$SLEW,
    StrAttr:$USE_IBUFDISABLE
  );

  let results = (outs
    I<1>:$O
  );
}

def IOBUFE3 : XilinxPrimitiveOp<"IOBUFE3", []> {
  let summary = "IOBUFE3 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    InOut<1>:$IO,
    I<1>:$DCITERMDISABLE,
    I<1>:$I,
    I<1>:$IBUFDISABLE,
    I<4>:$OSC,
    I<1>:$OSC_EN,
    I<1>:$T,
    I<1>:$VREF,

    // IOBUFE3 parameters follows
    SI64Attr:$DRIVE,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$SIM_DEVICE,
    SI64Attr:$SIM_INPUT_BUFFER_OFFSET,
    StrAttr:$USE_IBUFDISABLE
  );

  let results = (outs
    I<1>:$O
  );
}

def IOBUFuANALOG : XilinxPrimitiveOp<"IOBUF_ANALOG", []> {
  let summary = "IOBUF_ANALOG Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    InOut<1>:$IO,
    I<1>:$I,
    I<1>:$T,

    // IOBUF_ANALOG parameters follows
    SI64Attr:$DRIVE,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$SLEW
  );

  let results = (outs
    I<1>:$O
  );
}

def IOBUFuDCIEN : XilinxPrimitiveOp<"IOBUF_DCIEN", []> {
  let summary = "IOBUF_DCIEN Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$DCITERMDISABLE,
    I<1>:$I,
    I<1>:$IBUFDISABLE,
    I<1>:$T,

    // IOBUF_DCIEN parameters follows
    SI64Attr:$DRIVE,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$SIM_DEVICE,
    StrAttr:$SLEW,
    StrAttr:$USE_IBUFDISABLE,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O
  );
}

def IOBUFuINTERMDISABLE : XilinxPrimitiveOp<"IOBUF_INTERMDISABLE", []> {
  let summary = "IOBUF_INTERMDISABLE Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,
    I<1>:$IBUFDISABLE,
    I<1>:$INTERMDISABLE,
    I<1>:$T,

    // IOBUF_INTERMDISABLE parameters follows
    SI64Attr:$DRIVE,
    StrAttr:$IBUF_LOW_PWR,
    StrAttr:$IOSTANDARD,
    StrAttr:$SIM_DEVICE,
    StrAttr:$SLEW,
    StrAttr:$USE_IBUFDISABLE,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O
  );
}

def ISERDES : XilinxPrimitiveOp<"ISERDES", []> {
  let summary = "ISERDES Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$BITSLIP,
    I<1>:$CE1,
    I<1>:$CE2,
    I<1>:$CLK,
    I<1>:$CLKDIV,
    I<1>:$D,
    I<1>:$DLYCE,
    I<1>:$DLYINC,
    I<1>:$DLYRST,
    I<1>:$OCLK,
    I<1>:$REV,
    I<1>:$SHIFTIN1,
    I<1>:$SHIFTIN2,
    I<1>:$SR,

    // ISERDES parameters follows
    StrAttr:$BITSLIP_ENABLE,
    StrAttr:$DATA_RATE,
    SI64Attr:$DATA_WIDTH,
    APIntAttr<I<1>>:$INIT_Q1,
    APIntAttr<I<1>>:$INIT_Q2,
    APIntAttr<I<1>>:$INIT_Q3,
    APIntAttr<I<1>>:$INIT_Q4,
    StrAttr:$INTERFACE_TYPE,
    StrAttr:$IOBDELAY,
    StrAttr:$IOBDELAY_TYPE,
    SI64Attr:$IOBDELAY_VALUE,
    SI64Attr:$NUM_CE,
    StrAttr:$SERDES_MODE,
    SI64Attr:$SIM_DELAY_D,
    SI64Attr:$SIM_SETUP_D_CLK,
    SI64Attr:$SIM_HOLD_D_CLK,
    APIntAttr<I<1>>:$SRVAL_Q1,
    APIntAttr<I<1>>:$SRVAL_Q2,
    APIntAttr<I<1>>:$SRVAL_Q3,
    APIntAttr<I<1>>:$SRVAL_Q4,
    StrAttr:$LOC,
    SI64Attr:$SIM_TAPDELAY_VALUE
  );

  let results = (outs
    I<1>:$O,
    I<1>:$Q1,
    I<1>:$Q2,
    I<1>:$Q3,
    I<1>:$Q4,
    I<1>:$Q5,
    I<1>:$Q6,
    I<1>:$SHIFTOUT1,
    I<1>:$SHIFTOUT2
  );
}

def ISERDESE1 : XilinxPrimitiveOp<"ISERDESE1", []> {
  let summary = "ISERDESE1 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$BITSLIP,
    I<1>:$CE1,
    I<1>:$CE2,
    I<1>:$CLK,
    I<1>:$CLKB,
    I<1>:$CLKDIV,
    I<1>:$D,
    I<1>:$DDLY,
    I<1>:$DYNCLKDIVSEL,
    I<1>:$DYNCLKSEL,
    I<1>:$OCLK,
    I<1>:$OFB,
    I<1>:$RST,
    I<1>:$SHIFTIN1,
    I<1>:$SHIFTIN2,

    // ISERDESE1 parameters follows
    StrAttr:$DATA_RATE,
    SI64Attr:$DATA_WIDTH,
    StrAttr:$DYN_CLKDIV_INV_EN,
    StrAttr:$DYN_CLK_INV_EN,
    APIntAttr<I<1>>:$INIT_Q1,
    APIntAttr<I<1>>:$INIT_Q2,
    APIntAttr<I<1>>:$INIT_Q3,
    APIntAttr<I<1>>:$INIT_Q4,
    StrAttr:$INTERFACE_TYPE,
    SI64Attr:$NUM_CE,
    StrAttr:$IOBDELAY,
    StrAttr:$OFB_USED,
    StrAttr:$SERDES_MODE,
    APIntAttr<I<1>>:$SRVAL_Q1,
    APIntAttr<I<1>>:$SRVAL_Q2,
    APIntAttr<I<1>>:$SRVAL_Q3,
    APIntAttr<I<1>>:$SRVAL_Q4,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O,
    I<1>:$Q1,
    I<1>:$Q2,
    I<1>:$Q3,
    I<1>:$Q4,
    I<1>:$Q5,
    I<1>:$Q6,
    I<1>:$SHIFTOUT1,
    I<1>:$SHIFTOUT2
  );
}

def LUT5 : XilinxPrimitiveOp<"LUT5", []> {
  let summary = "LUT5 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I0,
    I<1>:$I1,
    I<1>:$I2,
    I<1>:$I3,
    I<1>:$I4,

    // LUT5 parameters follows
    APIntAttr<I<32>>:$INIT
  );

  let results = (outs
    I<1>:$O
  );
}

def LUT6 : XilinxPrimitiveOp<"LUT6", []> {
  let summary = "LUT6 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I0,
    I<1>:$I1,
    I<1>:$I2,
    I<1>:$I3,
    I<1>:$I4,
    I<1>:$I5,

    // LUT6 parameters follows
    APIntAttr<I<64>>:$INIT
  );

  let results = (outs
    I<1>:$O
  );

  let assemblyFormat = "$I0 `,` $I1 `,` $I2 `,` $I3 `,` $I4 `,` $I5  attr-dict `:` type($O)";
}

def LUT6u2 : XilinxPrimitiveOp<"LUT6_2", []> {
  let summary = "LUT6_2 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I0,
    I<1>:$I1,
    I<1>:$I2,
    I<1>:$I3,
    I<1>:$I4,
    I<1>:$I5,

    // LUT6_2 parameters follows
    APIntAttr<I<64>>:$INIT
  );

  let results = (outs
    I<1>:$O5,
    I<1>:$O6
  );
}

def MASTERuJTAG : XilinxPrimitiveOp<"MASTER_JTAG", []> {
  let summary = "MASTER_JTAG Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$TCK,
    I<1>:$TDI,
    I<1>:$TMS

    // MASTER_JTAG does not contain any parameters
  );

  let results = (outs
    I<1>:$TDO
  );
}

def MMCME2uADV : XilinxPrimitiveOp<"MMCME2_ADV", []> {
  let summary = "MMCME2_ADV Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLKFBIN,
    I<1>:$CLKIN1,
    I<1>:$CLKIN2,
    I<1>:$CLKINSEL,
    I<7>:$DADDR,
    I<1>:$DCLK,
    I<1>:$DEN,
    I<16>:$DI,
    I<1>:$DWE,
    I<1>:$PSCLK,
    I<1>:$PSEN,
    I<1>:$PSINCDEC,
    I<1>:$PWRDWN,
    I<1>:$RST,

    // MMCME2_ADV parameters follows
    StrAttr:$BANDWIDTH,
    StrAttr:$CLKFBOUT_MULT_F,
    StrAttr:$CLKFBOUT_PHASE,
    StrAttr:$CLKFBOUT_USE_FINE_PS,
    StrAttr:$CLKIN1_PERIOD,
    StrAttr:$CLKIN2_PERIOD,
    StrAttr:$CLKOUT0_DIVIDE_F,
    StrAttr:$CLKOUT0_DUTY_CYCLE,
    StrAttr:$CLKOUT0_PHASE,
    StrAttr:$CLKOUT0_USE_FINE_PS,
    SI64Attr:$CLKOUT1_DIVIDE,
    StrAttr:$CLKOUT1_DUTY_CYCLE,
    StrAttr:$CLKOUT1_PHASE,
    StrAttr:$CLKOUT1_USE_FINE_PS,
    SI64Attr:$CLKOUT2_DIVIDE,
    StrAttr:$CLKOUT2_DUTY_CYCLE,
    StrAttr:$CLKOUT2_PHASE,
    StrAttr:$CLKOUT2_USE_FINE_PS,
    SI64Attr:$CLKOUT3_DIVIDE,
    StrAttr:$CLKOUT3_DUTY_CYCLE,
    StrAttr:$CLKOUT3_PHASE,
    StrAttr:$CLKOUT3_USE_FINE_PS,
    StrAttr:$CLKOUT4_CASCADE,
    SI64Attr:$CLKOUT4_DIVIDE,
    StrAttr:$CLKOUT4_DUTY_CYCLE,
    StrAttr:$CLKOUT4_PHASE,
    StrAttr:$CLKOUT4_USE_FINE_PS,
    SI64Attr:$CLKOUT5_DIVIDE,
    StrAttr:$CLKOUT5_DUTY_CYCLE,
    StrAttr:$CLKOUT5_PHASE,
    StrAttr:$CLKOUT5_USE_FINE_PS,
    SI64Attr:$CLKOUT6_DIVIDE,
    StrAttr:$CLKOUT6_DUTY_CYCLE,
    StrAttr:$CLKOUT6_PHASE,
    StrAttr:$CLKOUT6_USE_FINE_PS,
    StrAttr:$COMPENSATION,
    SI64Attr:$DIVCLK_DIVIDE,
    APIntAttr<I<1>>:$IS_CLKINSEL_INVERTED,
    APIntAttr<I<1>>:$IS_PSEN_INVERTED,
    APIntAttr<I<1>>:$IS_PSINCDEC_INVERTED,
    APIntAttr<I<1>>:$IS_PWRDWN_INVERTED,
    APIntAttr<I<1>>:$IS_RST_INVERTED,
    StrAttr:$REF_JITTER1,
    StrAttr:$REF_JITTER2,
    StrAttr:$SS_EN,
    StrAttr:$SS_MODE,
    SI64Attr:$SS_MOD_PERIOD,
    StrAttr:$STARTUP_WAIT
  );

  let results = (outs
    I<1>:$CLKFBOUT,
    I<1>:$CLKFBOUTB,
    I<1>:$CLKFBSTOPPED,
    I<1>:$CLKINSTOPPED,
    I<1>:$CLKOUT0,
    I<1>:$CLKOUT0B,
    I<1>:$CLKOUT1,
    I<1>:$CLKOUT1B,
    I<1>:$CLKOUT2,
    I<1>:$CLKOUT2B,
    I<1>:$CLKOUT3,
    I<1>:$CLKOUT3B,
    I<1>:$CLKOUT4,
    I<1>:$CLKOUT5,
    I<1>:$CLKOUT6,
    I<16>:$DO,
    I<1>:$DRDY,
    I<1>:$LOCKED,
    I<1>:$PSDONE
  );
}

def MMCME2uBASE : XilinxPrimitiveOp<"MMCME2_BASE", []> {
  let summary = "MMCME2_BASE Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLKFBIN,
    I<1>:$CLKIN1,
    I<1>:$PWRDWN,
    I<1>:$RST,

    // MMCME2_BASE parameters follows
    StrAttr:$BANDWIDTH,
    StrAttr:$CLKFBOUT_MULT_F,
    StrAttr:$CLKFBOUT_PHASE,
    StrAttr:$CLKIN1_PERIOD,
    StrAttr:$CLKOUT0_DIVIDE_F,
    StrAttr:$CLKOUT0_DUTY_CYCLE,
    StrAttr:$CLKOUT0_PHASE,
    SI64Attr:$CLKOUT1_DIVIDE,
    StrAttr:$CLKOUT1_DUTY_CYCLE,
    StrAttr:$CLKOUT1_PHASE,
    SI64Attr:$CLKOUT2_DIVIDE,
    StrAttr:$CLKOUT2_DUTY_CYCLE,
    StrAttr:$CLKOUT2_PHASE,
    SI64Attr:$CLKOUT3_DIVIDE,
    StrAttr:$CLKOUT3_DUTY_CYCLE,
    StrAttr:$CLKOUT3_PHASE,
    StrAttr:$CLKOUT4_CASCADE,
    SI64Attr:$CLKOUT4_DIVIDE,
    StrAttr:$CLKOUT4_DUTY_CYCLE,
    StrAttr:$CLKOUT4_PHASE,
    SI64Attr:$CLKOUT5_DIVIDE,
    StrAttr:$CLKOUT5_DUTY_CYCLE,
    StrAttr:$CLKOUT5_PHASE,
    SI64Attr:$CLKOUT6_DIVIDE,
    StrAttr:$CLKOUT6_DUTY_CYCLE,
    StrAttr:$CLKOUT6_PHASE,
    SI64Attr:$DIVCLK_DIVIDE,
    StrAttr:$REF_JITTER1,
    StrAttr:$STARTUP_WAIT,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$CLKFBOUT,
    I<1>:$CLKFBOUTB,
    I<1>:$CLKOUT0,
    I<1>:$CLKOUT0B,
    I<1>:$CLKOUT1,
    I<1>:$CLKOUT1B,
    I<1>:$CLKOUT2,
    I<1>:$CLKOUT2B,
    I<1>:$CLKOUT3,
    I<1>:$CLKOUT3B,
    I<1>:$CLKOUT4,
    I<1>:$CLKOUT5,
    I<1>:$CLKOUT6,
    I<1>:$LOCKED
  );
}

def MMCME3uADV : XilinxPrimitiveOp<"MMCME3_ADV", []> {
  let summary = "MMCME3_ADV Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CDDCREQ,
    I<1>:$CLKFBIN,
    I<1>:$CLKIN1,
    I<1>:$CLKIN2,
    I<1>:$CLKINSEL,
    I<7>:$DADDR,
    I<1>:$DCLK,
    I<1>:$DEN,
    I<16>:$DI,
    I<1>:$DWE,
    I<1>:$PSCLK,
    I<1>:$PSEN,
    I<1>:$PSINCDEC,
    I<1>:$PWRDWN,
    I<1>:$RST,

    // MMCME3_ADV parameters follows
    StrAttr:$BANDWIDTH,
    StrAttr:$CLKFBOUT_MULT_F,
    StrAttr:$CLKFBOUT_PHASE,
    StrAttr:$CLKFBOUT_USE_FINE_PS,
    StrAttr:$CLKIN1_PERIOD,
    StrAttr:$CLKIN2_PERIOD,
    StrAttr:$CLKOUT0_DIVIDE_F,
    StrAttr:$CLKOUT0_DUTY_CYCLE,
    StrAttr:$CLKOUT0_PHASE,
    StrAttr:$CLKOUT0_USE_FINE_PS,
    SI64Attr:$CLKOUT1_DIVIDE,
    StrAttr:$CLKOUT1_DUTY_CYCLE,
    StrAttr:$CLKOUT1_PHASE,
    StrAttr:$CLKOUT1_USE_FINE_PS,
    SI64Attr:$CLKOUT2_DIVIDE,
    StrAttr:$CLKOUT2_DUTY_CYCLE,
    StrAttr:$CLKOUT2_PHASE,
    StrAttr:$CLKOUT2_USE_FINE_PS,
    SI64Attr:$CLKOUT3_DIVIDE,
    StrAttr:$CLKOUT3_DUTY_CYCLE,
    StrAttr:$CLKOUT3_PHASE,
    StrAttr:$CLKOUT3_USE_FINE_PS,
    StrAttr:$CLKOUT4_CASCADE,
    SI64Attr:$CLKOUT4_DIVIDE,
    StrAttr:$CLKOUT4_DUTY_CYCLE,
    StrAttr:$CLKOUT4_PHASE,
    StrAttr:$CLKOUT4_USE_FINE_PS,
    SI64Attr:$CLKOUT5_DIVIDE,
    StrAttr:$CLKOUT5_DUTY_CYCLE,
    StrAttr:$CLKOUT5_PHASE,
    StrAttr:$CLKOUT5_USE_FINE_PS,
    SI64Attr:$CLKOUT6_DIVIDE,
    StrAttr:$CLKOUT6_DUTY_CYCLE,
    StrAttr:$CLKOUT6_PHASE,
    StrAttr:$CLKOUT6_USE_FINE_PS,
    StrAttr:$COMPENSATION,
    SI64Attr:$DIVCLK_DIVIDE,
    APIntAttr<I<1>>:$IS_CLKFBIN_INVERTED,
    APIntAttr<I<1>>:$IS_CLKIN1_INVERTED,
    APIntAttr<I<1>>:$IS_CLKIN2_INVERTED,
    APIntAttr<I<1>>:$IS_CLKINSEL_INVERTED,
    APIntAttr<I<1>>:$IS_PSEN_INVERTED,
    APIntAttr<I<1>>:$IS_PSINCDEC_INVERTED,
    APIntAttr<I<1>>:$IS_PWRDWN_INVERTED,
    APIntAttr<I<1>>:$IS_RST_INVERTED,
    StrAttr:$REF_JITTER1,
    StrAttr:$REF_JITTER2,
    StrAttr:$SS_EN,
    StrAttr:$SS_MODE,
    SI64Attr:$SS_MOD_PERIOD,
    StrAttr:$STARTUP_WAIT
  );

  let results = (outs
    I<1>:$CDDCDONE,
    I<1>:$CLKFBOUT,
    I<1>:$CLKFBOUTB,
    I<1>:$CLKFBSTOPPED,
    I<1>:$CLKINSTOPPED,
    I<1>:$CLKOUT0,
    I<1>:$CLKOUT0B,
    I<1>:$CLKOUT1,
    I<1>:$CLKOUT1B,
    I<1>:$CLKOUT2,
    I<1>:$CLKOUT2B,
    I<1>:$CLKOUT3,
    I<1>:$CLKOUT3B,
    I<1>:$CLKOUT4,
    I<1>:$CLKOUT5,
    I<1>:$CLKOUT6,
    I<16>:$DO,
    I<1>:$DRDY,
    I<1>:$LOCKED,
    I<1>:$PSDONE
  );
}

def MMCME3uBASE : XilinxPrimitiveOp<"MMCME3_BASE", []> {
  let summary = "MMCME3_BASE Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLKFBIN,
    I<1>:$CLKIN1,
    I<1>:$PWRDWN,
    I<1>:$RST,

    // MMCME3_BASE parameters follows
    StrAttr:$BANDWIDTH,
    StrAttr:$CLKFBOUT_MULT_F,
    StrAttr:$CLKFBOUT_PHASE,
    StrAttr:$CLKIN1_PERIOD,
    StrAttr:$CLKOUT0_DIVIDE_F,
    StrAttr:$CLKOUT0_DUTY_CYCLE,
    StrAttr:$CLKOUT0_PHASE,
    SI64Attr:$CLKOUT1_DIVIDE,
    StrAttr:$CLKOUT1_DUTY_CYCLE,
    StrAttr:$CLKOUT1_PHASE,
    SI64Attr:$CLKOUT2_DIVIDE,
    StrAttr:$CLKOUT2_DUTY_CYCLE,
    StrAttr:$CLKOUT2_PHASE,
    SI64Attr:$CLKOUT3_DIVIDE,
    StrAttr:$CLKOUT3_DUTY_CYCLE,
    StrAttr:$CLKOUT3_PHASE,
    StrAttr:$CLKOUT4_CASCADE,
    SI64Attr:$CLKOUT4_DIVIDE,
    StrAttr:$CLKOUT4_DUTY_CYCLE,
    StrAttr:$CLKOUT4_PHASE,
    SI64Attr:$CLKOUT5_DIVIDE,
    StrAttr:$CLKOUT5_DUTY_CYCLE,
    StrAttr:$CLKOUT5_PHASE,
    SI64Attr:$CLKOUT6_DIVIDE,
    StrAttr:$CLKOUT6_DUTY_CYCLE,
    StrAttr:$CLKOUT6_PHASE,
    SI64Attr:$DIVCLK_DIVIDE,
    APIntAttr<I<1>>:$IS_CLKFBIN_INVERTED,
    APIntAttr<I<1>>:$IS_CLKIN1_INVERTED,
    APIntAttr<I<1>>:$IS_PWRDWN_INVERTED,
    APIntAttr<I<1>>:$IS_RST_INVERTED,
    StrAttr:$REF_JITTER1,
    StrAttr:$STARTUP_WAIT
  );

  let results = (outs
    I<1>:$CLKFBOUT,
    I<1>:$CLKFBOUTB,
    I<1>:$CLKOUT0,
    I<1>:$CLKOUT0B,
    I<1>:$CLKOUT1,
    I<1>:$CLKOUT1B,
    I<1>:$CLKOUT2,
    I<1>:$CLKOUT2B,
    I<1>:$CLKOUT3,
    I<1>:$CLKOUT3B,
    I<1>:$CLKOUT4,
    I<1>:$CLKOUT5,
    I<1>:$CLKOUT6,
    I<1>:$LOCKED
  );
}

def MMCME4uADV : XilinxPrimitiveOp<"MMCME4_ADV", []> {
  let summary = "MMCME4_ADV Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CDDCREQ,
    I<1>:$CLKFBIN,
    I<1>:$CLKIN1,
    I<1>:$CLKIN2,
    I<1>:$CLKINSEL,
    I<7>:$DADDR,
    I<1>:$DCLK,
    I<1>:$DEN,
    I<16>:$DI,
    I<1>:$DWE,
    I<1>:$PSCLK,
    I<1>:$PSEN,
    I<1>:$PSINCDEC,
    I<1>:$PWRDWN,
    I<1>:$RST,

    // MMCME4_ADV parameters follows
    StrAttr:$BANDWIDTH,
    StrAttr:$CLKFBOUT_MULT_F,
    StrAttr:$CLKFBOUT_PHASE,
    StrAttr:$CLKFBOUT_USE_FINE_PS,
    StrAttr:$CLKIN1_PERIOD,
    StrAttr:$CLKIN2_PERIOD,
    StrAttr:$CLKOUT0_DIVIDE_F,
    StrAttr:$CLKOUT0_DUTY_CYCLE,
    StrAttr:$CLKOUT0_PHASE,
    StrAttr:$CLKOUT0_USE_FINE_PS,
    SI64Attr:$CLKOUT1_DIVIDE,
    StrAttr:$CLKOUT1_DUTY_CYCLE,
    StrAttr:$CLKOUT1_PHASE,
    StrAttr:$CLKOUT1_USE_FINE_PS,
    SI64Attr:$CLKOUT2_DIVIDE,
    StrAttr:$CLKOUT2_DUTY_CYCLE,
    StrAttr:$CLKOUT2_PHASE,
    StrAttr:$CLKOUT2_USE_FINE_PS,
    SI64Attr:$CLKOUT3_DIVIDE,
    StrAttr:$CLKOUT3_DUTY_CYCLE,
    StrAttr:$CLKOUT3_PHASE,
    StrAttr:$CLKOUT3_USE_FINE_PS,
    StrAttr:$CLKOUT4_CASCADE,
    SI64Attr:$CLKOUT4_DIVIDE,
    StrAttr:$CLKOUT4_DUTY_CYCLE,
    StrAttr:$CLKOUT4_PHASE,
    StrAttr:$CLKOUT4_USE_FINE_PS,
    SI64Attr:$CLKOUT5_DIVIDE,
    StrAttr:$CLKOUT5_DUTY_CYCLE,
    StrAttr:$CLKOUT5_PHASE,
    StrAttr:$CLKOUT5_USE_FINE_PS,
    SI64Attr:$CLKOUT6_DIVIDE,
    StrAttr:$CLKOUT6_DUTY_CYCLE,
    StrAttr:$CLKOUT6_PHASE,
    StrAttr:$CLKOUT6_USE_FINE_PS,
    StrAttr:$COMPENSATION,
    SI64Attr:$DIVCLK_DIVIDE,
    APIntAttr<I<1>>:$IS_CLKFBIN_INVERTED,
    APIntAttr<I<1>>:$IS_CLKIN1_INVERTED,
    APIntAttr<I<1>>:$IS_CLKIN2_INVERTED,
    APIntAttr<I<1>>:$IS_CLKINSEL_INVERTED,
    APIntAttr<I<1>>:$IS_PSEN_INVERTED,
    APIntAttr<I<1>>:$IS_PSINCDEC_INVERTED,
    APIntAttr<I<1>>:$IS_PWRDWN_INVERTED,
    APIntAttr<I<1>>:$IS_RST_INVERTED,
    StrAttr:$REF_JITTER1,
    StrAttr:$REF_JITTER2,
    StrAttr:$SS_EN,
    StrAttr:$SS_MODE,
    SI64Attr:$SS_MOD_PERIOD,
    StrAttr:$STARTUP_WAIT
  );

  let results = (outs
    I<1>:$CDDCDONE,
    I<1>:$CLKFBOUT,
    I<1>:$CLKFBOUTB,
    I<1>:$CLKFBSTOPPED,
    I<1>:$CLKINSTOPPED,
    I<1>:$CLKOUT0,
    I<1>:$CLKOUT0B,
    I<1>:$CLKOUT1,
    I<1>:$CLKOUT1B,
    I<1>:$CLKOUT2,
    I<1>:$CLKOUT2B,
    I<1>:$CLKOUT3,
    I<1>:$CLKOUT3B,
    I<1>:$CLKOUT4,
    I<1>:$CLKOUT5,
    I<1>:$CLKOUT6,
    I<16>:$DO,
    I<1>:$DRDY,
    I<1>:$LOCKED,
    I<1>:$PSDONE
  );
}

def MMCME4uBASE : XilinxPrimitiveOp<"MMCME4_BASE", []> {
  let summary = "MMCME4_BASE Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLKFBIN,
    I<1>:$CLKIN1,
    I<1>:$PWRDWN,
    I<1>:$RST,

    // MMCME4_BASE parameters follows
    StrAttr:$BANDWIDTH,
    StrAttr:$CLKFBOUT_MULT_F,
    StrAttr:$CLKFBOUT_PHASE,
    StrAttr:$CLKIN1_PERIOD,
    StrAttr:$CLKOUT0_DIVIDE_F,
    StrAttr:$CLKOUT0_DUTY_CYCLE,
    StrAttr:$CLKOUT0_PHASE,
    SI64Attr:$CLKOUT1_DIVIDE,
    StrAttr:$CLKOUT1_DUTY_CYCLE,
    StrAttr:$CLKOUT1_PHASE,
    SI64Attr:$CLKOUT2_DIVIDE,
    StrAttr:$CLKOUT2_DUTY_CYCLE,
    StrAttr:$CLKOUT2_PHASE,
    SI64Attr:$CLKOUT3_DIVIDE,
    StrAttr:$CLKOUT3_DUTY_CYCLE,
    StrAttr:$CLKOUT3_PHASE,
    StrAttr:$CLKOUT4_CASCADE,
    SI64Attr:$CLKOUT4_DIVIDE,
    StrAttr:$CLKOUT4_DUTY_CYCLE,
    StrAttr:$CLKOUT4_PHASE,
    SI64Attr:$CLKOUT5_DIVIDE,
    StrAttr:$CLKOUT5_DUTY_CYCLE,
    StrAttr:$CLKOUT5_PHASE,
    SI64Attr:$CLKOUT6_DIVIDE,
    StrAttr:$CLKOUT6_DUTY_CYCLE,
    StrAttr:$CLKOUT6_PHASE,
    SI64Attr:$DIVCLK_DIVIDE,
    APIntAttr<I<1>>:$IS_CLKFBIN_INVERTED,
    APIntAttr<I<1>>:$IS_CLKIN1_INVERTED,
    APIntAttr<I<1>>:$IS_PWRDWN_INVERTED,
    APIntAttr<I<1>>:$IS_RST_INVERTED,
    StrAttr:$REF_JITTER1,
    StrAttr:$STARTUP_WAIT
  );

  let results = (outs
    I<1>:$CLKFBOUT,
    I<1>:$CLKFBOUTB,
    I<1>:$CLKOUT0,
    I<1>:$CLKOUT0B,
    I<1>:$CLKOUT1,
    I<1>:$CLKOUT1B,
    I<1>:$CLKOUT2,
    I<1>:$CLKOUT2B,
    I<1>:$CLKOUT3,
    I<1>:$CLKOUT3B,
    I<1>:$CLKOUT4,
    I<1>:$CLKOUT5,
    I<1>:$CLKOUT6,
    I<1>:$LOCKED
  );
}

def MUXCY : XilinxPrimitiveOp<"MUXCY", []> {
  let summary = "MUXCY Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CI,
    I<1>:$DI,
    I<1>:$S,

    // MUXCY parameters follows
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O
  );
}

def MUXF7 : XilinxPrimitiveOp<"MUXF7", []> {
  let summary = "MUXF7 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I0,
    I<1>:$I1,
    I<1>:$S,

    // MUXF7 parameters follows
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O
  );
}

def MUXF8 : XilinxPrimitiveOp<"MUXF8", []> {
  let summary = "MUXF8 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I0,
    I<1>:$I1,
    I<1>:$S,

    // MUXF8 parameters follows
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O
  );
}

def MUXF9 : XilinxPrimitiveOp<"MUXF9", []> {
  let summary = "MUXF9 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I0,
    I<1>:$I1,
    I<1>:$S

    // MUXF9 does not contain any parameters
  );

  let results = (outs
    I<1>:$O
  );
}

def OBUF : XilinxPrimitiveOp<"OBUF", []> {
  let summary = "OBUF Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,

    // OBUF parameters follows
    StrAttr:$CAPACITANCE,
    SI64Attr:$DRIVE,
    StrAttr:$IOSTANDARD,
    StrAttr:$LOC,
    StrAttr:$SLEW
  );

  let results = (outs
    I<1>:$O
  );
}

def OBUFDS : XilinxPrimitiveOp<"OBUFDS", []> {
  let summary = "OBUFDS Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,

    // OBUFDS parameters follows
    StrAttr:$CAPACITANCE,
    StrAttr:$IOSTANDARD,
    StrAttr:$SLEW,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O,
    I<1>:$OB
  );
}

def OBUFDSuDPHY : XilinxPrimitiveOp<"OBUFDS_DPHY", []> {
  let summary = "OBUFDS_DPHY Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$HSTX_I,
    I<1>:$HSTX_T,
    I<1>:$LPTX_I_N,
    I<1>:$LPTX_I_P,
    I<1>:$LPTX_T,

    // OBUFDS_DPHY parameters follows
    StrAttr:$IOSTANDARD
  );

  let results = (outs
    I<1>:$O,
    I<1>:$OB
  );
}

def OBUFDSuGTE3 : XilinxPrimitiveOp<"OBUFDS_GTE3", []> {
  let summary = "OBUFDS_GTE3 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CEB,
    I<1>:$I,

    // OBUFDS_GTE3 parameters follows
    APIntAttr<I<1>>:$REFCLK_EN_TX_PATH,
    APIntAttr<I<5>>:$REFCLK_ICNTL_TX
  );

  let results = (outs
    I<1>:$O,
    I<1>:$OB
  );
}

def OBUFDSuGTE3uADV : XilinxPrimitiveOp<"OBUFDS_GTE3_ADV", []> {
  let summary = "OBUFDS_GTE3_ADV Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CEB,
    I<4>:$I,
    I<2>:$RXRECCLK_SEL,

    // OBUFDS_GTE3_ADV parameters follows
    APIntAttr<I<1>>:$REFCLK_EN_TX_PATH,
    APIntAttr<I<5>>:$REFCLK_ICNTL_TX
  );

  let results = (outs
    I<1>:$O,
    I<1>:$OB
  );
}

def OBUFDSuGTE4 : XilinxPrimitiveOp<"OBUFDS_GTE4", []> {
  let summary = "OBUFDS_GTE4 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CEB,
    I<1>:$I,

    // OBUFDS_GTE4 parameters follows
    APIntAttr<I<1>>:$REFCLK_EN_TX_PATH,
    APIntAttr<I<5>>:$REFCLK_ICNTL_TX
  );

  let results = (outs
    I<1>:$O,
    I<1>:$OB
  );
}

def OBUFDSuGTE4uADV : XilinxPrimitiveOp<"OBUFDS_GTE4_ADV", []> {
  let summary = "OBUFDS_GTE4_ADV Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CEB,
    I<4>:$I,
    I<2>:$RXRECCLK_SEL,

    // OBUFDS_GTE4_ADV parameters follows
    APIntAttr<I<1>>:$REFCLK_EN_TX_PATH,
    APIntAttr<I<5>>:$REFCLK_ICNTL_TX
  );

  let results = (outs
    I<1>:$O,
    I<1>:$OB
  );
}

def OBUFDSuGTM : XilinxPrimitiveOp<"OBUFDS_GTM", []> {
  let summary = "OBUFDS_GTM Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CEB,
    I<1>:$I,

    // OBUFDS_GTM parameters follows
    APIntAttr<I<1>>:$REFCLK_EN_TX_PATH,
    SI64Attr:$REFCLK_ICNTL_TX
  );

  let results = (outs
    I<1>:$O,
    I<1>:$OB
  );
}

def OBUFDSuGTMuADV : XilinxPrimitiveOp<"OBUFDS_GTM_ADV", []> {
  let summary = "OBUFDS_GTM_ADV Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CEB,
    I<4>:$I,

    // OBUFDS_GTM_ADV parameters follows
    APIntAttr<I<1>>:$REFCLK_EN_TX_PATH,
    SI64Attr:$REFCLK_ICNTL_TX,
    APIntAttr<I<2>>:$RXRECCLK_SEL
  );

  let results = (outs
    I<1>:$O,
    I<1>:$OB
  );
}

def OBUFT : XilinxPrimitiveOp<"OBUFT", []> {
  let summary = "OBUFT Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,
    I<1>:$T,

    // OBUFT parameters follows
    StrAttr:$CAPACITANCE,
    SI64Attr:$DRIVE,
    StrAttr:$IOSTANDARD,
    StrAttr:$LOC,
    StrAttr:$SLEW
  );

  let results = (outs
    I<1>:$O
  );
}

def OBUFTDS : XilinxPrimitiveOp<"OBUFTDS", []> {
  let summary = "OBUFTDS Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$I,
    I<1>:$T,

    // OBUFTDS parameters follows
    StrAttr:$CAPACITANCE,
    StrAttr:$IOSTANDARD,
    StrAttr:$LOC,
    StrAttr:$SLEW
  );

  let results = (outs
    I<1>:$O,
    I<1>:$OB
  );
}

def OBUFTDSuDCIEN : XilinxPrimitiveOp<"OBUFTDS_DCIEN", []> {
  let summary = "OBUFTDS_DCIEN Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$DCITERMDISABLE,
    I<1>:$I,
    I<1>:$T,

    // OBUFTDS_DCIEN parameters follows
    StrAttr:$IOSTANDARD,
    StrAttr:$LOC,
    StrAttr:$SLEW
  );

  let results = (outs
    I<1>:$O,
    I<1>:$OB
  );
}

def OBUFTuDCIEN : XilinxPrimitiveOp<"OBUFT_DCIEN", []> {
  let summary = "OBUFT_DCIEN Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$DCITERMDISABLE,
    I<1>:$I,
    I<1>:$T,

    // OBUFT_DCIEN parameters follows
    SI64Attr:$DRIVE,
    StrAttr:$IOSTANDARD,
    StrAttr:$LOC,
    StrAttr:$SLEW
  );

  let results = (outs
    I<1>:$O
  );
}

def ODDR : XilinxPrimitiveOp<"ODDR", []> {
  let summary = "ODDR Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$C,
    I<1>:$CE,
    I<1>:$D1,
    I<1>:$D2,
    I<1>:$R,
    I<1>:$S,

    // ODDR parameters follows
    StrAttr:$DDR_CLK_EDGE,
    APIntAttr<I<1>>:$INIT,
    APIntAttr<I<1>>:$IS_C_INVERTED,
    APIntAttr<I<1>>:$IS_D1_INVERTED,
    APIntAttr<I<1>>:$IS_D2_INVERTED,
    StrAttr:$SRTYPE,
    StrAttr:$LOC,
    StrAttr:$MSGON,
    StrAttr:$XON
  );

  let results = (outs
    I<1>:$Q
  );
}

def ODDRE1 : XilinxPrimitiveOp<"ODDRE1", []> {
  let summary = "ODDRE1 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$C,
    I<1>:$D1,
    I<1>:$D2,
    I<1>:$SR,

    // ODDRE1 parameters follows
    APIntAttr<I<1>>:$IS_C_INVERTED,
    APIntAttr<I<1>>:$IS_D1_INVERTED,
    APIntAttr<I<1>>:$IS_D2_INVERTED,
    StrAttr:$SIM_DEVICE,
    APIntAttr<I<1>>:$SRVAL
  );

  let results = (outs
    I<1>:$Q
  );
}

def ODELAYE2 : XilinxPrimitiveOp<"ODELAYE2", []> {
  let summary = "ODELAYE2 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$C,
    I<1>:$CE,
    I<1>:$CINVCTRL,
    I<1>:$CLKIN,
    I<5>:$CNTVALUEIN,
    I<1>:$INC,
    I<1>:$LD,
    I<1>:$LDPIPEEN,
    I<1>:$ODATAIN,
    I<1>:$REGRST,

    // ODELAYE2 parameters follows
    StrAttr:$CINVCTRL_SEL,
    StrAttr:$DELAY_SRC,
    StrAttr:$HIGH_PERFORMANCE_MODE,
    APIntAttr<I<1>>:$IS_C_INVERTED,
    APIntAttr<I<1>>:$IS_ODATAIN_INVERTED,
    StrAttr:$ODELAY_TYPE,
    SI64Attr:$ODELAY_VALUE,
    StrAttr:$PIPE_SEL,
    StrAttr:$REFCLK_FREQUENCY,
    StrAttr:$SIGNAL_PATTERN,
    StrAttr:$LOC,
    SI64Attr:$SIM_DELAY_D
  );

  let results = (outs
    I<5>:$CNTVALUEOUT,
    I<1>:$DATAOUT
  );
}

def ODELAYE2uFINEDELAY : XilinxPrimitiveOp<"ODELAYE2_FINEDELAY", []> {
  let summary = "ODELAYE2_FINEDELAY Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$C,
    I<1>:$CE,
    I<1>:$CINVCTRL,
    I<1>:$CLKIN,
    I<5>:$CNTVALUEIN,
    I<1>:$INC,
    I<1>:$LD,
    I<1>:$LDPIPEEN,
    I<1>:$ODATAIN,
    I<3>:$OFDLY,
    I<1>:$REGRST,

    // ODELAYE2_FINEDELAY parameters follows
    StrAttr:$CINVCTRL_SEL,
    StrAttr:$DELAY_SRC,
    StrAttr:$FINEDELAY,
    StrAttr:$HIGH_PERFORMANCE_MODE,
    APIntAttr<I<1>>:$IS_C_INVERTED,
    APIntAttr<I<1>>:$IS_ODATAIN_INVERTED,
    StrAttr:$ODELAY_TYPE,
    SI64Attr:$ODELAY_VALUE,
    StrAttr:$PIPE_SEL,
    StrAttr:$REFCLK_FREQUENCY,
    StrAttr:$SIGNAL_PATTERN,
    StrAttr:$LOC,
    SI64Attr:$SIM_DELAY_D
  );

  let results = (outs
    I<5>:$CNTVALUEOUT,
    I<1>:$DATAOUT
  );
}

def ODELAYE3 : XilinxPrimitiveOp<"ODELAYE3", []> {
  let summary = "ODELAYE3 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CASC_IN,
    I<1>:$CASC_RETURN,
    I<1>:$CE,
    I<1>:$CLK,
    I<9>:$CNTVALUEIN,
    I<1>:$EN_VTC,
    I<1>:$INC,
    I<1>:$LOAD,
    I<1>:$ODATAIN,
    I<1>:$RST,

    // ODELAYE3 parameters follows
    StrAttr:$CASCADE,
    StrAttr:$DELAY_FORMAT,
    StrAttr:$DELAY_TYPE,
    SI64Attr:$DELAY_VALUE,
    APIntAttr<I<1>>:$IS_CLK_INVERTED,
    APIntAttr<I<1>>:$IS_RST_INVERTED,
    StrAttr:$REFCLK_FREQUENCY,
    StrAttr:$SIM_DEVICE,
    StrAttr:$SIM_VERSION,
    StrAttr:$UPDATE_MODE
  );

  let results = (outs
    I<1>:$CASC_OUT,
    I<9>:$CNTVALUEOUT,
    I<1>:$DATAOUT
  );
}

def OR2L : XilinxPrimitiveOp<"OR2L", []> {
  let summary = "OR2L Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$DI,
    I<1>:$SRI,

    // OR2L parameters follows
    APIntAttr<I<1>>:$IS_SRI_INVERTED
  );

  let results = (outs
    I<1>:$O
  );
}

def OSERDES : XilinxPrimitiveOp<"OSERDES", []> {
  let summary = "OSERDES Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLK,
    I<1>:$CLKDIV,
    I<1>:$D1,
    I<1>:$D2,
    I<1>:$D3,
    I<1>:$D4,
    I<1>:$D5,
    I<1>:$D6,
    I<1>:$OCE,
    I<1>:$REV,
    I<1>:$SHIFTIN1,
    I<1>:$SHIFTIN2,
    I<1>:$SR,
    I<1>:$T1,
    I<1>:$T2,
    I<1>:$T3,
    I<1>:$T4,
    I<1>:$TCE,

    // OSERDES parameters follows
    StrAttr:$DATA_RATE_OQ,
    StrAttr:$DATA_RATE_TQ,
    SI64Attr:$DATA_WIDTH,
    APIntAttr<I<1>>:$INIT_OQ,
    APIntAttr<I<1>>:$INIT_TQ,
    StrAttr:$SERDES_MODE,
    APIntAttr<I<1>>:$SRVAL_OQ,
    APIntAttr<I<1>>:$SRVAL_TQ,
    SI64Attr:$TRISTATE_WIDTH,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$OQ,
    I<1>:$SHIFTOUT1,
    I<1>:$SHIFTOUT2,
    I<1>:$TQ
  );
}

def OSERDESE1 : XilinxPrimitiveOp<"OSERDESE1", []> {
  let summary = "OSERDESE1 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLK,
    I<1>:$CLKDIV,
    I<1>:$CLKPERF,
    I<1>:$CLKPERFDELAY,
    I<1>:$D1,
    I<1>:$D2,
    I<1>:$D3,
    I<1>:$D4,
    I<1>:$D5,
    I<1>:$D6,
    I<1>:$OCE,
    I<1>:$ODV,
    I<1>:$RST,
    I<1>:$SHIFTIN1,
    I<1>:$SHIFTIN2,
    I<1>:$T1,
    I<1>:$T2,
    I<1>:$T3,
    I<1>:$T4,
    I<1>:$TCE,
    I<1>:$WC,

    // OSERDESE1 parameters follows
    StrAttr:$DATA_RATE_OQ,
    StrAttr:$DATA_RATE_TQ,
    SI64Attr:$DATA_WIDTH,
    SI64Attr:$DDR3_DATA,
    APIntAttr<I<1>>:$INIT_OQ,
    APIntAttr<I<1>>:$INIT_TQ,
    StrAttr:$INTERFACE_TYPE,
    SI64Attr:$ODELAY_USED,
    StrAttr:$SERDES_MODE,
    APIntAttr<I<1>>:$SRVAL_OQ,
    APIntAttr<I<1>>:$SRVAL_TQ,
    SI64Attr:$TRISTATE_WIDTH,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$OCBEXTEND,
    I<1>:$OFB,
    I<1>:$OQ,
    I<1>:$SHIFTOUT1,
    I<1>:$SHIFTOUT2,
    I<1>:$TFB,
    I<1>:$TQ
  );
}

def selfhealuoserdese1uvlog : XilinxPrimitiveOp<"selfheal_oserdese1_vlog", []> {
  let summary = "selfheal_oserdese1_vlog Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.

    // selfheal_oserdese1_vlog parameters follows
    SI64Attr:$FFD
  );

  let results = (outs
  );
}

def plguoserdese1uvlog : XilinxPrimitiveOp<"plg_oserdese1_vlog", []> {
  let summary = "plg_oserdese1_vlog Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.

    // plg_oserdese1_vlog parameters follows
    SI64Attr:$ffdcnt,
    SI64Attr:$mxdcnt,
    SI64Attr:$FFRST
  );

  let results = (outs
  );
}

def rank12duoserdese1uvlog : XilinxPrimitiveOp<"rank12d_oserdese1_vlog", []> {
  let summary = "rank12d_oserdese1_vlog Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.

    // rank12d_oserdese1_vlog parameters follows
    SI64Attr:$FFD
  );

  let results = (outs
  );
}

def trifuoserdese1uvlog : XilinxPrimitiveOp<"trif_oserdese1_vlog", []> {
  let summary = "trif_oserdese1_vlog Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.

    // trif_oserdese1_vlog parameters follows
    SI64Attr:$ffd,
    SI64Attr:$mxd
  );

  let results = (outs
  );
}

def txbufferuoserdese1uvlog : XilinxPrimitiveOp<"txbuffer_oserdese1_vlog", []> {
  let summary = "txbuffer_oserdese1_vlog Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.

    // txbuffer_oserdese1_vlog does not contain any parameters
  );

  let results = (outs
  );
}

def fifoutdpipeuoserdese1uvlog : XilinxPrimitiveOp<"fifo_tdpipe_oserdese1_vlog", []> {
  let summary = "fifo_tdpipe_oserdese1_vlog Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.

    // fifo_tdpipe_oserdese1_vlog does not contain any parameters
  );

  let results = (outs
  );
}

def fifouresetuoserdese1uvlog : XilinxPrimitiveOp<"fifo_reset_oserdese1_vlog", []> {
  let summary = "fifo_reset_oserdese1_vlog Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.

    // fifo_reset_oserdese1_vlog does not contain any parameters
  );

  let results = (outs
  );
}

def fifouaddruoserdese1uvlog : XilinxPrimitiveOp<"fifo_addr_oserdese1_vlog", []> {
  let summary = "fifo_addr_oserdese1_vlog Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.

    // fifo_addr_oserdese1_vlog does not contain any parameters
  );

  let results = (outs
  );
}

def iodlyctrlunpreuoserdese1uvlog : XilinxPrimitiveOp<"iodlyctrl_npre_oserdese1_vlog", []> {
  let summary = "iodlyctrl_npre_oserdese1_vlog Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.

    // iodlyctrl_npre_oserdese1_vlog does not contain any parameters
  );

  let results = (outs
  );
}

def doutuoserdese1uvlog : XilinxPrimitiveOp<"dout_oserdese1_vlog", []> {
  let summary = "dout_oserdese1_vlog Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.

    // dout_oserdese1_vlog parameters follows
    SI64Attr:$FFD
  );

  let results = (outs
  );
}

def toutuoserdese1uvlog : XilinxPrimitiveOp<"tout_oserdese1_vlog", []> {
  let summary = "tout_oserdese1_vlog Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.

    // tout_oserdese1_vlog parameters follows
    SI64Attr:$ffd,
    SI64Attr:$mxd
  );

  let results = (outs
  );
}

def OSERDESE2 : XilinxPrimitiveOp<"OSERDESE2", []> {
  let summary = "OSERDESE2 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLK,
    I<1>:$CLKDIV,
    I<1>:$D1,
    I<1>:$D2,
    I<1>:$D3,
    I<1>:$D4,
    I<1>:$D5,
    I<1>:$D6,
    I<1>:$D7,
    I<1>:$D8,
    I<1>:$OCE,
    I<1>:$RST,
    I<1>:$SHIFTIN1,
    I<1>:$SHIFTIN2,
    I<1>:$T1,
    I<1>:$T2,
    I<1>:$T3,
    I<1>:$T4,
    I<1>:$TBYTEIN,
    I<1>:$TCE,

    // OSERDESE2 parameters follows
    StrAttr:$DATA_RATE_OQ,
    StrAttr:$DATA_RATE_TQ,
    SI64Attr:$DATA_WIDTH,
    APIntAttr<I<1>>:$INIT_OQ,
    APIntAttr<I<1>>:$INIT_TQ,
    APIntAttr<I<1>>:$IS_CLKDIV_INVERTED,
    APIntAttr<I<1>>:$IS_CLK_INVERTED,
    APIntAttr<I<1>>:$IS_D1_INVERTED,
    APIntAttr<I<1>>:$IS_D2_INVERTED,
    APIntAttr<I<1>>:$IS_D3_INVERTED,
    APIntAttr<I<1>>:$IS_D4_INVERTED,
    APIntAttr<I<1>>:$IS_D5_INVERTED,
    APIntAttr<I<1>>:$IS_D6_INVERTED,
    APIntAttr<I<1>>:$IS_D7_INVERTED,
    APIntAttr<I<1>>:$IS_D8_INVERTED,
    APIntAttr<I<1>>:$IS_T1_INVERTED,
    APIntAttr<I<1>>:$IS_T2_INVERTED,
    APIntAttr<I<1>>:$IS_T3_INVERTED,
    APIntAttr<I<1>>:$IS_T4_INVERTED,
    StrAttr:$LOC,
    StrAttr:$SERDES_MODE,
    APIntAttr<I<1>>:$SRVAL_OQ,
    APIntAttr<I<1>>:$SRVAL_TQ,
    StrAttr:$TBYTE_CTL,
    StrAttr:$TBYTE_SRC,
    SI64Attr:$TRISTATE_WIDTH
  );

  let results = (outs
    I<1>:$OFB,
    I<1>:$OQ,
    I<1>:$SHIFTOUT1,
    I<1>:$SHIFTOUT2,
    I<1>:$TBYTEOUT,
    I<1>:$TFB,
    I<1>:$TQ
  );
}

def OSERDESE3 : XilinxPrimitiveOp<"OSERDESE3", []> {
  let summary = "OSERDESE3 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLK,
    I<1>:$CLKDIV,
    I<8>:$D,
    I<1>:$RST,
    I<1>:$T,

    // OSERDESE3 parameters follows
    SI64Attr:$DATA_WIDTH,
    APIntAttr<I<1>>:$INIT,
    APIntAttr<I<1>>:$IS_CLKDIV_INVERTED,
    APIntAttr<I<1>>:$IS_CLK_INVERTED,
    APIntAttr<I<1>>:$IS_RST_INVERTED,
    StrAttr:$ODDR_MODE,
    StrAttr:$OSERDES_D_BYPASS,
    StrAttr:$OSERDES_T_BYPASS,
    StrAttr:$SIM_DEVICE,
    StrAttr:$SIM_VERSION
  );

  let results = (outs
    I<1>:$OQ,
    I<1>:$T_OUT
  );
}

def OUTuFIFO : XilinxPrimitiveOp<"OUT_FIFO", []> {
  let summary = "OUT_FIFO Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$RDCLK,
    I<1>:$RDEN,
    I<1>:$RESET,
    I<1>:$WRCLK,
    I<1>:$WREN,
    I<8>:$D0,
    I<8>:$D1,
    I<8>:$D2,
    I<8>:$D3,
    I<8>:$D4,
    I<8>:$D5,
    I<8>:$D6,
    I<8>:$D7,
    I<8>:$D8,
    I<8>:$D9,

    // OUT_FIFO parameters follows
    StrAttr:$LOC,
    SI64Attr:$ALMOST_EMPTY_VALUE,
    SI64Attr:$ALMOST_FULL_VALUE,
    StrAttr:$ARRAY_MODE,
    StrAttr:$OUTPUT_DISABLE,
    StrAttr:$SYNCHRONOUS_MODE
  );

  let results = (outs
    I<1>:$ALMOSTEMPTY,
    I<1>:$ALMOSTFULL,
    I<1>:$EMPTY,
    I<1>:$FULL,
    I<4>:$Q0,
    I<4>:$Q1,
    I<4>:$Q2,
    I<4>:$Q3,
    I<4>:$Q4,
    I<4>:$Q7,
    I<4>:$Q8,
    I<4>:$Q9,
    I<8>:$Q5,
    I<8>:$Q6
  );
}

def PCIE40E4 : XilinxPrimitiveOp<"PCIE40E4", []> {
  let summary = "PCIE40E4 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<8>:$AXIUSERIN,
    I<1>:$CFGCONFIGSPACEENABLE,
    I<16>:$CFGDEVIDPF0,
    I<16>:$CFGDEVIDPF1,
    I<16>:$CFGDEVIDPF2,
    I<16>:$CFGDEVIDPF3,
    I<8>:$CFGDSBUSNUMBER,
    I<5>:$CFGDSDEVICENUMBER,
    I<3>:$CFGDSFUNCTIONNUMBER,
    I<64>:$CFGDSN,
    I<8>:$CFGDSPORTNUMBER,
    I<1>:$CFGERRCORIN,
    I<1>:$CFGERRUNCORIN,
    I<32>:$CFGEXTREADDATA,
    I<1>:$CFGEXTREADDATAVALID,
    I<3>:$CFGFCSEL,
    I<4>:$CFGFLRDONE,
    I<1>:$CFGHOTRESETIN,
    I<4>:$CFGINTERRUPTINT,
    I<3>:$CFGINTERRUPTMSIATTR,
    I<8>:$CFGINTERRUPTMSIFUNCTIONNUMBER,
    I<32>:$CFGINTERRUPTMSIINT,
    I<32>:$CFGINTERRUPTMSIPENDINGSTATUS,
    I<1>:$CFGINTERRUPTMSIPENDINGSTATUSDATAENABLE,
    I<2>:$CFGINTERRUPTMSIPENDINGSTATUSFUNCTIONNUM,
    I<2>:$CFGINTERRUPTMSISELECT,
    I<1>:$CFGINTERRUPTMSITPHPRESENT,
    I<8>:$CFGINTERRUPTMSITPHSTTAG,
    I<2>:$CFGINTERRUPTMSITPHTYPE,
    I<64>:$CFGINTERRUPTMSIXADDRESS,
    I<32>:$CFGINTERRUPTMSIXDATA,
    I<1>:$CFGINTERRUPTMSIXINT,
    I<2>:$CFGINTERRUPTMSIXVECPENDING,
    I<4>:$CFGINTERRUPTPENDING,
    I<1>:$CFGLINKTRAININGENABLE,
    I<10>:$CFGMGMTADDR,
    I<4>:$CFGMGMTBYTEENABLE,
    I<1>:$CFGMGMTDEBUGACCESS,
    I<8>:$CFGMGMTFUNCTIONNUMBER,
    I<1>:$CFGMGMTREAD,
    I<1>:$CFGMGMTWRITE,
    I<32>:$CFGMGMTWRITEDATA,
    I<1>:$CFGMSGTRANSMIT,
    I<32>:$CFGMSGTRANSMITDATA,
    I<3>:$CFGMSGTRANSMITTYPE,
    I<36>:$CFGMSIXRAMREADDATA,
    I<1>:$CFGPMASPML1ENTRYREJECT,
    I<1>:$CFGPMASPMTXL0SENTRYDISABLE,
    I<1>:$CFGPOWERSTATECHANGEACK,
    I<1>:$CFGREQPMTRANSITIONL23READY,
    I<8>:$CFGREVIDPF0,
    I<8>:$CFGREVIDPF1,
    I<8>:$CFGREVIDPF2,
    I<8>:$CFGREVIDPF3,
    I<16>:$CFGSUBSYSIDPF0,
    I<16>:$CFGSUBSYSIDPF1,
    I<16>:$CFGSUBSYSIDPF2,
    I<16>:$CFGSUBSYSIDPF3,
    I<16>:$CFGSUBSYSVENDID,
    I<36>:$CFGTPHRAMREADDATA,
    I<16>:$CFGVENDID,
    I<1>:$CFGVFFLRDONE,
    I<8>:$CFGVFFLRFUNCNUM,
    I<1>:$CONFMCAPREQUESTBYCONF,
    I<32>:$CONFREQDATA,
    I<4>:$CONFREQREGNUM,
    I<2>:$CONFREQTYPE,
    I<1>:$CONFREQVALID,
    I<1>:$CORECLK,
    I<1>:$CORECLKMIREPLAYRAM0,
    I<1>:$CORECLKMIREPLAYRAM1,
    I<1>:$CORECLKMIRXCOMPLETIONRAM0,
    I<1>:$CORECLKMIRXCOMPLETIONRAM1,
    I<1>:$CORECLKMIRXPOSTEDREQUESTRAM0,
    I<1>:$CORECLKMIRXPOSTEDREQUESTRAM1,
    I<6>:$DBGSEL0,
    I<6>:$DBGSEL1,
    I<10>:$DRPADDR,
    I<1>:$DRPCLK,
    I<16>:$DRPDI,
    I<1>:$DRPEN,
    I<1>:$DRPWE,
    I<22>:$MAXISCQTREADY,
    I<22>:$MAXISRCTREADY,
    I<1>:$MCAPCLK,
    I<1>:$MCAPPERST0B,
    I<1>:$MCAPPERST1B,
    I<1>:$MGMTRESETN,
    I<1>:$MGMTSTICKYRESETN,
    I<6>:$MIREPLAYRAMERRCOR,
    I<6>:$MIREPLAYRAMERRUNCOR,
    I<128>:$MIREPLAYRAMREADDATA0,
    I<128>:$MIREPLAYRAMREADDATA1,
    I<12>:$MIRXCOMPLETIONRAMERRCOR,
    I<12>:$MIRXCOMPLETIONRAMERRUNCOR,
    I<144>:$MIRXCOMPLETIONRAMREADDATA0,
    I<144>:$MIRXCOMPLETIONRAMREADDATA1,
    I<6>:$MIRXPOSTEDREQUESTRAMERRCOR,
    I<6>:$MIRXPOSTEDREQUESTRAMERRUNCOR,
    I<144>:$MIRXPOSTEDREQUESTRAMREADDATA0,
    I<144>:$MIRXPOSTEDREQUESTRAMREADDATA1,
    I<2>:$PCIECOMPLDELIVERED,
    I<8>:$PCIECOMPLDELIVEREDTAG0,
    I<8>:$PCIECOMPLDELIVEREDTAG1,
    I<2>:$PCIECQNPREQ,
    I<1>:$PCIECQNPUSERCREDITRCVD,
    I<1>:$PCIECQPIPELINEEMPTY,
    I<1>:$PCIEPOSTEDREQDELIVERED,
    I<1>:$PIPECLK,
    I<1>:$PIPECLKEN,
    I<6>:$PIPEEQFS,
    I<6>:$PIPEEQLF,
    I<1>:$PIPERESETN,
    I<2>:$PIPERX00CHARISK,
    I<32>:$PIPERX00DATA,
    I<1>:$PIPERX00DATAVALID,
    I<1>:$PIPERX00ELECIDLE,
    I<1>:$PIPERX00EQDONE,
    I<1>:$PIPERX00EQLPADAPTDONE,
    I<1>:$PIPERX00EQLPLFFSSEL,
    I<18>:$PIPERX00EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX00PHYSTATUS,
    I<2>:$PIPERX00STARTBLOCK,
    I<3>:$PIPERX00STATUS,
    I<2>:$PIPERX00SYNCHEADER,
    I<1>:$PIPERX00VALID,
    I<2>:$PIPERX01CHARISK,
    I<32>:$PIPERX01DATA,
    I<1>:$PIPERX01DATAVALID,
    I<1>:$PIPERX01ELECIDLE,
    I<1>:$PIPERX01EQDONE,
    I<1>:$PIPERX01EQLPADAPTDONE,
    I<1>:$PIPERX01EQLPLFFSSEL,
    I<18>:$PIPERX01EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX01PHYSTATUS,
    I<2>:$PIPERX01STARTBLOCK,
    I<3>:$PIPERX01STATUS,
    I<2>:$PIPERX01SYNCHEADER,
    I<1>:$PIPERX01VALID,
    I<2>:$PIPERX02CHARISK,
    I<32>:$PIPERX02DATA,
    I<1>:$PIPERX02DATAVALID,
    I<1>:$PIPERX02ELECIDLE,
    I<1>:$PIPERX02EQDONE,
    I<1>:$PIPERX02EQLPADAPTDONE,
    I<1>:$PIPERX02EQLPLFFSSEL,
    I<18>:$PIPERX02EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX02PHYSTATUS,
    I<2>:$PIPERX02STARTBLOCK,
    I<3>:$PIPERX02STATUS,
    I<2>:$PIPERX02SYNCHEADER,
    I<1>:$PIPERX02VALID,
    I<2>:$PIPERX03CHARISK,
    I<32>:$PIPERX03DATA,
    I<1>:$PIPERX03DATAVALID,
    I<1>:$PIPERX03ELECIDLE,
    I<1>:$PIPERX03EQDONE,
    I<1>:$PIPERX03EQLPADAPTDONE,
    I<1>:$PIPERX03EQLPLFFSSEL,
    I<18>:$PIPERX03EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX03PHYSTATUS,
    I<2>:$PIPERX03STARTBLOCK,
    I<3>:$PIPERX03STATUS,
    I<2>:$PIPERX03SYNCHEADER,
    I<1>:$PIPERX03VALID,
    I<2>:$PIPERX04CHARISK,
    I<32>:$PIPERX04DATA,
    I<1>:$PIPERX04DATAVALID,
    I<1>:$PIPERX04ELECIDLE,
    I<1>:$PIPERX04EQDONE,
    I<1>:$PIPERX04EQLPADAPTDONE,
    I<1>:$PIPERX04EQLPLFFSSEL,
    I<18>:$PIPERX04EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX04PHYSTATUS,
    I<2>:$PIPERX04STARTBLOCK,
    I<3>:$PIPERX04STATUS,
    I<2>:$PIPERX04SYNCHEADER,
    I<1>:$PIPERX04VALID,
    I<2>:$PIPERX05CHARISK,
    I<32>:$PIPERX05DATA,
    I<1>:$PIPERX05DATAVALID,
    I<1>:$PIPERX05ELECIDLE,
    I<1>:$PIPERX05EQDONE,
    I<1>:$PIPERX05EQLPADAPTDONE,
    I<1>:$PIPERX05EQLPLFFSSEL,
    I<18>:$PIPERX05EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX05PHYSTATUS,
    I<2>:$PIPERX05STARTBLOCK,
    I<3>:$PIPERX05STATUS,
    I<2>:$PIPERX05SYNCHEADER,
    I<1>:$PIPERX05VALID,
    I<2>:$PIPERX06CHARISK,
    I<32>:$PIPERX06DATA,
    I<1>:$PIPERX06DATAVALID,
    I<1>:$PIPERX06ELECIDLE,
    I<1>:$PIPERX06EQDONE,
    I<1>:$PIPERX06EQLPADAPTDONE,
    I<1>:$PIPERX06EQLPLFFSSEL,
    I<18>:$PIPERX06EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX06PHYSTATUS,
    I<2>:$PIPERX06STARTBLOCK,
    I<3>:$PIPERX06STATUS,
    I<2>:$PIPERX06SYNCHEADER,
    I<1>:$PIPERX06VALID,
    I<2>:$PIPERX07CHARISK,
    I<32>:$PIPERX07DATA,
    I<1>:$PIPERX07DATAVALID,
    I<1>:$PIPERX07ELECIDLE,
    I<1>:$PIPERX07EQDONE,
    I<1>:$PIPERX07EQLPADAPTDONE,
    I<1>:$PIPERX07EQLPLFFSSEL,
    I<18>:$PIPERX07EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX07PHYSTATUS,
    I<2>:$PIPERX07STARTBLOCK,
    I<3>:$PIPERX07STATUS,
    I<2>:$PIPERX07SYNCHEADER,
    I<1>:$PIPERX07VALID,
    I<2>:$PIPERX08CHARISK,
    I<32>:$PIPERX08DATA,
    I<1>:$PIPERX08DATAVALID,
    I<1>:$PIPERX08ELECIDLE,
    I<1>:$PIPERX08EQDONE,
    I<1>:$PIPERX08EQLPADAPTDONE,
    I<1>:$PIPERX08EQLPLFFSSEL,
    I<18>:$PIPERX08EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX08PHYSTATUS,
    I<2>:$PIPERX08STARTBLOCK,
    I<3>:$PIPERX08STATUS,
    I<2>:$PIPERX08SYNCHEADER,
    I<1>:$PIPERX08VALID,
    I<2>:$PIPERX09CHARISK,
    I<32>:$PIPERX09DATA,
    I<1>:$PIPERX09DATAVALID,
    I<1>:$PIPERX09ELECIDLE,
    I<1>:$PIPERX09EQDONE,
    I<1>:$PIPERX09EQLPADAPTDONE,
    I<1>:$PIPERX09EQLPLFFSSEL,
    I<18>:$PIPERX09EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX09PHYSTATUS,
    I<2>:$PIPERX09STARTBLOCK,
    I<3>:$PIPERX09STATUS,
    I<2>:$PIPERX09SYNCHEADER,
    I<1>:$PIPERX09VALID,
    I<2>:$PIPERX10CHARISK,
    I<32>:$PIPERX10DATA,
    I<1>:$PIPERX10DATAVALID,
    I<1>:$PIPERX10ELECIDLE,
    I<1>:$PIPERX10EQDONE,
    I<1>:$PIPERX10EQLPADAPTDONE,
    I<1>:$PIPERX10EQLPLFFSSEL,
    I<18>:$PIPERX10EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX10PHYSTATUS,
    I<2>:$PIPERX10STARTBLOCK,
    I<3>:$PIPERX10STATUS,
    I<2>:$PIPERX10SYNCHEADER,
    I<1>:$PIPERX10VALID,
    I<2>:$PIPERX11CHARISK,
    I<32>:$PIPERX11DATA,
    I<1>:$PIPERX11DATAVALID,
    I<1>:$PIPERX11ELECIDLE,
    I<1>:$PIPERX11EQDONE,
    I<1>:$PIPERX11EQLPADAPTDONE,
    I<1>:$PIPERX11EQLPLFFSSEL,
    I<18>:$PIPERX11EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX11PHYSTATUS,
    I<2>:$PIPERX11STARTBLOCK,
    I<3>:$PIPERX11STATUS,
    I<2>:$PIPERX11SYNCHEADER,
    I<1>:$PIPERX11VALID,
    I<2>:$PIPERX12CHARISK,
    I<32>:$PIPERX12DATA,
    I<1>:$PIPERX12DATAVALID,
    I<1>:$PIPERX12ELECIDLE,
    I<1>:$PIPERX12EQDONE,
    I<1>:$PIPERX12EQLPADAPTDONE,
    I<1>:$PIPERX12EQLPLFFSSEL,
    I<18>:$PIPERX12EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX12PHYSTATUS,
    I<2>:$PIPERX12STARTBLOCK,
    I<3>:$PIPERX12STATUS,
    I<2>:$PIPERX12SYNCHEADER,
    I<1>:$PIPERX12VALID,
    I<2>:$PIPERX13CHARISK,
    I<32>:$PIPERX13DATA,
    I<1>:$PIPERX13DATAVALID,
    I<1>:$PIPERX13ELECIDLE,
    I<1>:$PIPERX13EQDONE,
    I<1>:$PIPERX13EQLPADAPTDONE,
    I<1>:$PIPERX13EQLPLFFSSEL,
    I<18>:$PIPERX13EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX13PHYSTATUS,
    I<2>:$PIPERX13STARTBLOCK,
    I<3>:$PIPERX13STATUS,
    I<2>:$PIPERX13SYNCHEADER,
    I<1>:$PIPERX13VALID,
    I<2>:$PIPERX14CHARISK,
    I<32>:$PIPERX14DATA,
    I<1>:$PIPERX14DATAVALID,
    I<1>:$PIPERX14ELECIDLE,
    I<1>:$PIPERX14EQDONE,
    I<1>:$PIPERX14EQLPADAPTDONE,
    I<1>:$PIPERX14EQLPLFFSSEL,
    I<18>:$PIPERX14EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX14PHYSTATUS,
    I<2>:$PIPERX14STARTBLOCK,
    I<3>:$PIPERX14STATUS,
    I<2>:$PIPERX14SYNCHEADER,
    I<1>:$PIPERX14VALID,
    I<2>:$PIPERX15CHARISK,
    I<32>:$PIPERX15DATA,
    I<1>:$PIPERX15DATAVALID,
    I<1>:$PIPERX15ELECIDLE,
    I<1>:$PIPERX15EQDONE,
    I<1>:$PIPERX15EQLPADAPTDONE,
    I<1>:$PIPERX15EQLPLFFSSEL,
    I<18>:$PIPERX15EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX15PHYSTATUS,
    I<2>:$PIPERX15STARTBLOCK,
    I<3>:$PIPERX15STATUS,
    I<2>:$PIPERX15SYNCHEADER,
    I<1>:$PIPERX15VALID,
    I<18>:$PIPETX00EQCOEFF,
    I<1>:$PIPETX00EQDONE,
    I<18>:$PIPETX01EQCOEFF,
    I<1>:$PIPETX01EQDONE,
    I<18>:$PIPETX02EQCOEFF,
    I<1>:$PIPETX02EQDONE,
    I<18>:$PIPETX03EQCOEFF,
    I<1>:$PIPETX03EQDONE,
    I<18>:$PIPETX04EQCOEFF,
    I<1>:$PIPETX04EQDONE,
    I<18>:$PIPETX05EQCOEFF,
    I<1>:$PIPETX05EQDONE,
    I<18>:$PIPETX06EQCOEFF,
    I<1>:$PIPETX06EQDONE,
    I<18>:$PIPETX07EQCOEFF,
    I<1>:$PIPETX07EQDONE,
    I<18>:$PIPETX08EQCOEFF,
    I<1>:$PIPETX08EQDONE,
    I<18>:$PIPETX09EQCOEFF,
    I<1>:$PIPETX09EQDONE,
    I<18>:$PIPETX10EQCOEFF,
    I<1>:$PIPETX10EQDONE,
    I<18>:$PIPETX11EQCOEFF,
    I<1>:$PIPETX11EQDONE,
    I<18>:$PIPETX12EQCOEFF,
    I<1>:$PIPETX12EQDONE,
    I<18>:$PIPETX13EQCOEFF,
    I<1>:$PIPETX13EQDONE,
    I<18>:$PIPETX14EQCOEFF,
    I<1>:$PIPETX14EQDONE,
    I<18>:$PIPETX15EQCOEFF,
    I<1>:$PIPETX15EQDONE,
    I<1>:$PLEQRESETEIEOSCOUNT,
    I<1>:$PLGEN2UPSTREAMPREFERDEEMPH,
    I<1>:$PLGEN34REDOEQSPEED,
    I<1>:$PLGEN34REDOEQUALIZATION,
    I<1>:$RESETN,
    I<256>:$SAXISCCTDATA,
    I<8>:$SAXISCCTKEEP,
    I<1>:$SAXISCCTLAST,
    I<33>:$SAXISCCTUSER,
    I<1>:$SAXISCCTVALID,
    I<256>:$SAXISRQTDATA,
    I<8>:$SAXISRQTKEEP,
    I<1>:$SAXISRQTLAST,
    I<62>:$SAXISRQTUSER,
    I<1>:$SAXISRQTVALID,
    I<1>:$USERCLK,
    I<1>:$USERCLK2,
    I<1>:$USERCLKEN,
    I<32>:$USERSPAREIN,

    // PCIE40E4 parameters follows
    StrAttr:$ARI_CAP_ENABLE,
    StrAttr:$AUTO_FLR_RESPONSE,
    APIntAttr<I<2>>:$AXISTEN_IF_CC_ALIGNMENT_MODE,
    APIntAttr<I<24>>:$AXISTEN_IF_COMPL_TIMEOUT_REG0,
    APIntAttr<I<28>>:$AXISTEN_IF_COMPL_TIMEOUT_REG1,
    APIntAttr<I<2>>:$AXISTEN_IF_CQ_ALIGNMENT_MODE,
    StrAttr:$AXISTEN_IF_CQ_EN_POISONED_MEM_WR,
    StrAttr:$AXISTEN_IF_ENABLE_256_TAGS,
    StrAttr:$AXISTEN_IF_ENABLE_CLIENT_TAG,
    StrAttr:$AXISTEN_IF_ENABLE_INTERNAL_MSIX_TABLE,
    StrAttr:$AXISTEN_IF_ENABLE_MESSAGE_RID_CHECK,
    APIntAttr<I<18>>:$AXISTEN_IF_ENABLE_MSG_ROUTE,
    StrAttr:$AXISTEN_IF_ENABLE_RX_MSG_INTFC,
    StrAttr:$AXISTEN_IF_EXT_512,
    StrAttr:$AXISTEN_IF_EXT_512_CC_STRADDLE,
    StrAttr:$AXISTEN_IF_EXT_512_CQ_STRADDLE,
    StrAttr:$AXISTEN_IF_EXT_512_RC_STRADDLE,
    StrAttr:$AXISTEN_IF_EXT_512_RQ_STRADDLE,
    StrAttr:$AXISTEN_IF_LEGACY_MODE_ENABLE,
    StrAttr:$AXISTEN_IF_MSIX_FROM_RAM_PIPELINE,
    StrAttr:$AXISTEN_IF_MSIX_RX_PARITY_EN,
    StrAttr:$AXISTEN_IF_MSIX_TO_RAM_PIPELINE,
    APIntAttr<I<2>>:$AXISTEN_IF_RC_ALIGNMENT_MODE,
    StrAttr:$AXISTEN_IF_RC_STRADDLE,
    APIntAttr<I<2>>:$AXISTEN_IF_RQ_ALIGNMENT_MODE,
    StrAttr:$AXISTEN_IF_RX_PARITY_EN,
    StrAttr:$AXISTEN_IF_SIM_SHORT_CPL_TIMEOUT,
    StrAttr:$AXISTEN_IF_TX_PARITY_EN,
    APIntAttr<I<2>>:$AXISTEN_IF_WIDTH,
    StrAttr:$CFG_BYPASS_MODE_ENABLE,
    StrAttr:$CRM_CORE_CLK_FREQ_500,
    APIntAttr<I<2>>:$CRM_USER_CLK_FREQ,
    APIntAttr<I<16>>:$DEBUG_AXI4ST_SPARE,
    APIntAttr<I<8>>:$DEBUG_AXIST_DISABLE_FEATURE_BIT,
    APIntAttr<I<4>>:$DEBUG_CAR_SPARE,
    APIntAttr<I<16>>:$DEBUG_CFG_SPARE,
    APIntAttr<I<16>>:$DEBUG_LL_SPARE,
    StrAttr:$DEBUG_PL_DISABLE_LES_UPDATE_ON_DEFRAMER_ERROR,
    StrAttr:$DEBUG_PL_DISABLE_LES_UPDATE_ON_SKP_ERROR,
    StrAttr:$DEBUG_PL_DISABLE_LES_UPDATE_ON_SKP_PARITY_ERROR,
    StrAttr:$DEBUG_PL_DISABLE_REC_ENTRY_ON_DYNAMIC_DSKEW_FAIL,
    StrAttr:$DEBUG_PL_DISABLE_REC_ENTRY_ON_RX_BUFFER_UNDER_OVER_FLOW,
    StrAttr:$DEBUG_PL_DISABLE_SCRAMBLING,
    StrAttr:$DEBUG_PL_SIM_RESET_LFSR,
    APIntAttr<I<16>>:$DEBUG_PL_SPARE,
    StrAttr:$DEBUG_TL_DISABLE_FC_TIMEOUT,
    StrAttr:$DEBUG_TL_DISABLE_RX_TLP_ORDER_CHECKS,
    APIntAttr<I<16>>:$DEBUG_TL_SPARE,
    APIntAttr<I<8>>:$DNSTREAM_LINK_NUM,
    StrAttr:$DSN_CAP_ENABLE,
    StrAttr:$EXTENDED_CFG_EXTEND_INTERFACE_ENABLE,
    StrAttr:$HEADER_TYPE_OVERRIDE,
    StrAttr:$IS_SWITCH_PORT,
    StrAttr:$LEGACY_CFG_EXTEND_INTERFACE_ENABLE,
    APIntAttr<I<9>>:$LL_ACK_TIMEOUT,
    StrAttr:$LL_ACK_TIMEOUT_EN,
    SI64Attr:$LL_ACK_TIMEOUT_FUNC,
    StrAttr:$LL_DISABLE_SCHED_TX_NAK,
    StrAttr:$LL_REPLAY_FROM_RAM_PIPELINE,
    APIntAttr<I<9>>:$LL_REPLAY_TIMEOUT,
    StrAttr:$LL_REPLAY_TIMEOUT_EN,
    SI64Attr:$LL_REPLAY_TIMEOUT_FUNC,
    StrAttr:$LL_REPLAY_TO_RAM_PIPELINE,
    StrAttr:$LL_RX_TLP_PARITY_GEN,
    StrAttr:$LL_TX_TLP_PARITY_CHK,
    APIntAttr<I<16>>:$LL_USER_SPARE,
    APIntAttr<I<10>>:$LTR_TX_MESSAGE_MINIMUM_INTERVAL,
    StrAttr:$LTR_TX_MESSAGE_ON_FUNC_POWER_STATE_CHANGE,
    StrAttr:$LTR_TX_MESSAGE_ON_LTR_ENABLE,
    APIntAttr<I<12>>:$MCAP_CAP_NEXTPTR,
    StrAttr:$MCAP_CONFIGURE_OVERRIDE,
    StrAttr:$MCAP_ENABLE,
    StrAttr:$MCAP_EOS_DESIGN_SWITCH,
    APIntAttr<I<32>>:$MCAP_FPGA_BITSTREAM_VERSION,
    StrAttr:$MCAP_GATE_IO_ENABLE_DESIGN_SWITCH,
    StrAttr:$MCAP_GATE_MEM_ENABLE_DESIGN_SWITCH,
    StrAttr:$MCAP_INPUT_GATE_DESIGN_SWITCH,
    StrAttr:$MCAP_INTERRUPT_ON_MCAP_EOS,
    StrAttr:$MCAP_INTERRUPT_ON_MCAP_ERROR,
    APIntAttr<I<16>>:$MCAP_VSEC_ID,
    APIntAttr<I<12>>:$MCAP_VSEC_LEN,
    APIntAttr<I<4>>:$MCAP_VSEC_REV,
    StrAttr:$PF0_AER_CAP_ECRC_GEN_AND_CHECK_CAPABLE,
    APIntAttr<I<12>>:$PF0_AER_CAP_NEXTPTR,
    APIntAttr<I<12>>:$PF0_ARI_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF0_ARI_CAP_NEXT_FUNC,
    APIntAttr<I<4>>:$PF0_ARI_CAP_VER,
    APIntAttr<I<6>>:$PF0_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF0_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR1_CONTROL,
    APIntAttr<I<6>>:$PF0_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF0_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR3_CONTROL,
    APIntAttr<I<6>>:$PF0_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF0_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR5_CONTROL,
    APIntAttr<I<8>>:$PF0_CAPABILITY_POINTER,
    APIntAttr<I<24>>:$PF0_CLASS_CODE,
    StrAttr:$PF0_DEV_CAP2_128B_CAS_ATOMIC_COMPLETER_SUPPORT,
    StrAttr:$PF0_DEV_CAP2_32B_ATOMIC_COMPLETER_SUPPORT,
    StrAttr:$PF0_DEV_CAP2_64B_ATOMIC_COMPLETER_SUPPORT,
    StrAttr:$PF0_DEV_CAP2_ARI_FORWARD_ENABLE,
    StrAttr:$PF0_DEV_CAP2_CPL_TIMEOUT_DISABLE,
    StrAttr:$PF0_DEV_CAP2_LTR_SUPPORT,
    APIntAttr<I<2>>:$PF0_DEV_CAP2_OBFF_SUPPORT,
    StrAttr:$PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT,
    SI64Attr:$PF0_DEV_CAP_ENDPOINT_L0S_LATENCY,
    SI64Attr:$PF0_DEV_CAP_ENDPOINT_L1_LATENCY,
    StrAttr:$PF0_DEV_CAP_EXT_TAG_SUPPORTED,
    StrAttr:$PF0_DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE,
    APIntAttr<I<3>>:$PF0_DEV_CAP_MAX_PAYLOAD_SIZE,
    APIntAttr<I<12>>:$PF0_DSN_CAP_NEXTPTR,
    APIntAttr<I<5>>:$PF0_EXPANSION_ROM_APERTURE_SIZE,
    StrAttr:$PF0_EXPANSION_ROM_ENABLE,
    APIntAttr<I<3>>:$PF0_INTERRUPT_PIN,
    SI64Attr:$PF0_LINK_CAP_ASPM_SUPPORT,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN1,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN2,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN3,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN4,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN1,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN2,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN3,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN4,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN1,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN2,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN3,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN4,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_GEN1,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_GEN2,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_GEN3,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_GEN4,
    APIntAttr<I<1>>:$PF0_LINK_CONTROL_RCB,
    StrAttr:$PF0_LINK_STATUS_SLOT_CLOCK_CONFIG,
    APIntAttr<I<10>>:$PF0_LTR_CAP_MAX_NOSNOOP_LAT,
    APIntAttr<I<10>>:$PF0_LTR_CAP_MAX_SNOOP_LAT,
    APIntAttr<I<12>>:$PF0_LTR_CAP_NEXTPTR,
    APIntAttr<I<4>>:$PF0_LTR_CAP_VER,
    APIntAttr<I<8>>:$PF0_MSIX_CAP_NEXTPTR,
    SI64Attr:$PF0_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$PF0_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$PF0_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$PF0_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$PF0_MSIX_CAP_TABLE_SIZE,
    APIntAttr<I<6>>:$PF0_MSIX_VECTOR_COUNT,
    SI64Attr:$PF0_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$PF0_MSI_CAP_NEXTPTR,
    StrAttr:$PF0_MSI_CAP_PERVECMASKCAP,
    APIntAttr<I<8>>:$PF0_PCIE_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF0_PM_CAP_ID,
    APIntAttr<I<8>>:$PF0_PM_CAP_NEXTPTR,
    StrAttr:$PF0_PM_CAP_PMESUPPORT_D0,
    StrAttr:$PF0_PM_CAP_PMESUPPORT_D1,
    StrAttr:$PF0_PM_CAP_PMESUPPORT_D3HOT,
    StrAttr:$PF0_PM_CAP_SUPP_D1_STATE,
    APIntAttr<I<3>>:$PF0_PM_CAP_VER_ID,
    StrAttr:$PF0_PM_CSR_NOSOFTRESET,
    APIntAttr<I<12>>:$PF0_SECONDARY_PCIE_CAP_NEXTPTR,
    StrAttr:$PF0_SRIOV_ARI_CAPBL_HIER_PRESERVED,
    APIntAttr<I<6>>:$PF0_SRIOV_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF0_SRIOV_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR1_CONTROL,
    APIntAttr<I<6>>:$PF0_SRIOV_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF0_SRIOV_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR3_CONTROL,
    APIntAttr<I<6>>:$PF0_SRIOV_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF0_SRIOV_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR5_CONTROL,
    APIntAttr<I<16>>:$PF0_SRIOV_CAP_INITIAL_VF,
    APIntAttr<I<12>>:$PF0_SRIOV_CAP_NEXTPTR,
    APIntAttr<I<16>>:$PF0_SRIOV_CAP_TOTAL_VF,
    APIntAttr<I<4>>:$PF0_SRIOV_CAP_VER,
    APIntAttr<I<16>>:$PF0_SRIOV_FIRST_VF_OFFSET,
    APIntAttr<I<16>>:$PF0_SRIOV_FUNC_DEP_LINK,
    APIntAttr<I<32>>:$PF0_SRIOV_SUPPORTED_PAGE_SIZE,
    APIntAttr<I<16>>:$PF0_SRIOV_VF_DEVICE_ID,
    StrAttr:$PF0_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$PF0_TPHR_CAP_ENABLE,
    StrAttr:$PF0_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$PF0_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$PF0_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$PF0_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$PF0_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$PF0_TPHR_CAP_VER,
    StrAttr:$PF0_VC_CAP_ENABLE,
    APIntAttr<I<12>>:$PF0_VC_CAP_NEXTPTR,
    APIntAttr<I<4>>:$PF0_VC_CAP_VER,
    APIntAttr<I<12>>:$PF1_AER_CAP_NEXTPTR,
    APIntAttr<I<12>>:$PF1_ARI_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF1_ARI_CAP_NEXT_FUNC,
    APIntAttr<I<6>>:$PF1_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF1_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR1_CONTROL,
    APIntAttr<I<6>>:$PF1_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF1_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR3_CONTROL,
    APIntAttr<I<6>>:$PF1_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF1_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR5_CONTROL,
    APIntAttr<I<8>>:$PF1_CAPABILITY_POINTER,
    APIntAttr<I<24>>:$PF1_CLASS_CODE,
    APIntAttr<I<3>>:$PF1_DEV_CAP_MAX_PAYLOAD_SIZE,
    APIntAttr<I<12>>:$PF1_DSN_CAP_NEXTPTR,
    APIntAttr<I<5>>:$PF1_EXPANSION_ROM_APERTURE_SIZE,
    StrAttr:$PF1_EXPANSION_ROM_ENABLE,
    APIntAttr<I<3>>:$PF1_INTERRUPT_PIN,
    APIntAttr<I<8>>:$PF1_MSIX_CAP_NEXTPTR,
    SI64Attr:$PF1_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$PF1_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$PF1_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$PF1_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$PF1_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$PF1_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$PF1_MSI_CAP_NEXTPTR,
    StrAttr:$PF1_MSI_CAP_PERVECMASKCAP,
    APIntAttr<I<8>>:$PF1_PCIE_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF1_PM_CAP_NEXTPTR,
    StrAttr:$PF1_SRIOV_ARI_CAPBL_HIER_PRESERVED,
    APIntAttr<I<6>>:$PF1_SRIOV_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF1_SRIOV_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR1_CONTROL,
    APIntAttr<I<6>>:$PF1_SRIOV_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF1_SRIOV_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR3_CONTROL,
    APIntAttr<I<6>>:$PF1_SRIOV_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF1_SRIOV_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR5_CONTROL,
    APIntAttr<I<16>>:$PF1_SRIOV_CAP_INITIAL_VF,
    APIntAttr<I<12>>:$PF1_SRIOV_CAP_NEXTPTR,
    APIntAttr<I<16>>:$PF1_SRIOV_CAP_TOTAL_VF,
    APIntAttr<I<4>>:$PF1_SRIOV_CAP_VER,
    APIntAttr<I<16>>:$PF1_SRIOV_FIRST_VF_OFFSET,
    APIntAttr<I<16>>:$PF1_SRIOV_FUNC_DEP_LINK,
    APIntAttr<I<32>>:$PF1_SRIOV_SUPPORTED_PAGE_SIZE,
    APIntAttr<I<16>>:$PF1_SRIOV_VF_DEVICE_ID,
    APIntAttr<I<12>>:$PF1_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$PF1_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<12>>:$PF2_AER_CAP_NEXTPTR,
    APIntAttr<I<12>>:$PF2_ARI_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF2_ARI_CAP_NEXT_FUNC,
    APIntAttr<I<6>>:$PF2_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF2_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_BAR1_CONTROL,
    APIntAttr<I<6>>:$PF2_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF2_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_BAR3_CONTROL,
    APIntAttr<I<6>>:$PF2_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF2_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_BAR5_CONTROL,
    APIntAttr<I<8>>:$PF2_CAPABILITY_POINTER,
    APIntAttr<I<24>>:$PF2_CLASS_CODE,
    APIntAttr<I<3>>:$PF2_DEV_CAP_MAX_PAYLOAD_SIZE,
    APIntAttr<I<12>>:$PF2_DSN_CAP_NEXTPTR,
    APIntAttr<I<5>>:$PF2_EXPANSION_ROM_APERTURE_SIZE,
    StrAttr:$PF2_EXPANSION_ROM_ENABLE,
    APIntAttr<I<3>>:$PF2_INTERRUPT_PIN,
    APIntAttr<I<8>>:$PF2_MSIX_CAP_NEXTPTR,
    SI64Attr:$PF2_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$PF2_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$PF2_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$PF2_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$PF2_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$PF2_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$PF2_MSI_CAP_NEXTPTR,
    StrAttr:$PF2_MSI_CAP_PERVECMASKCAP,
    APIntAttr<I<8>>:$PF2_PCIE_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF2_PM_CAP_NEXTPTR,
    StrAttr:$PF2_SRIOV_ARI_CAPBL_HIER_PRESERVED,
    APIntAttr<I<6>>:$PF2_SRIOV_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_SRIOV_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF2_SRIOV_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_SRIOV_BAR1_CONTROL,
    APIntAttr<I<6>>:$PF2_SRIOV_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_SRIOV_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF2_SRIOV_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_SRIOV_BAR3_CONTROL,
    APIntAttr<I<6>>:$PF2_SRIOV_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_SRIOV_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF2_SRIOV_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_SRIOV_BAR5_CONTROL,
    APIntAttr<I<16>>:$PF2_SRIOV_CAP_INITIAL_VF,
    APIntAttr<I<12>>:$PF2_SRIOV_CAP_NEXTPTR,
    APIntAttr<I<16>>:$PF2_SRIOV_CAP_TOTAL_VF,
    APIntAttr<I<4>>:$PF2_SRIOV_CAP_VER,
    APIntAttr<I<16>>:$PF2_SRIOV_FIRST_VF_OFFSET,
    APIntAttr<I<16>>:$PF2_SRIOV_FUNC_DEP_LINK,
    APIntAttr<I<32>>:$PF2_SRIOV_SUPPORTED_PAGE_SIZE,
    APIntAttr<I<16>>:$PF2_SRIOV_VF_DEVICE_ID,
    APIntAttr<I<12>>:$PF2_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$PF2_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<12>>:$PF3_AER_CAP_NEXTPTR,
    APIntAttr<I<12>>:$PF3_ARI_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF3_ARI_CAP_NEXT_FUNC,
    APIntAttr<I<6>>:$PF3_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF3_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_BAR1_CONTROL,
    APIntAttr<I<6>>:$PF3_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF3_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_BAR3_CONTROL,
    APIntAttr<I<6>>:$PF3_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF3_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_BAR5_CONTROL,
    APIntAttr<I<8>>:$PF3_CAPABILITY_POINTER,
    APIntAttr<I<24>>:$PF3_CLASS_CODE,
    APIntAttr<I<3>>:$PF3_DEV_CAP_MAX_PAYLOAD_SIZE,
    APIntAttr<I<12>>:$PF3_DSN_CAP_NEXTPTR,
    APIntAttr<I<5>>:$PF3_EXPANSION_ROM_APERTURE_SIZE,
    StrAttr:$PF3_EXPANSION_ROM_ENABLE,
    APIntAttr<I<3>>:$PF3_INTERRUPT_PIN,
    APIntAttr<I<8>>:$PF3_MSIX_CAP_NEXTPTR,
    SI64Attr:$PF3_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$PF3_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$PF3_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$PF3_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$PF3_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$PF3_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$PF3_MSI_CAP_NEXTPTR,
    StrAttr:$PF3_MSI_CAP_PERVECMASKCAP,
    APIntAttr<I<8>>:$PF3_PCIE_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF3_PM_CAP_NEXTPTR,
    StrAttr:$PF3_SRIOV_ARI_CAPBL_HIER_PRESERVED,
    APIntAttr<I<6>>:$PF3_SRIOV_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_SRIOV_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF3_SRIOV_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_SRIOV_BAR1_CONTROL,
    APIntAttr<I<6>>:$PF3_SRIOV_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_SRIOV_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF3_SRIOV_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_SRIOV_BAR3_CONTROL,
    APIntAttr<I<6>>:$PF3_SRIOV_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_SRIOV_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF3_SRIOV_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_SRIOV_BAR5_CONTROL,
    APIntAttr<I<16>>:$PF3_SRIOV_CAP_INITIAL_VF,
    APIntAttr<I<12>>:$PF3_SRIOV_CAP_NEXTPTR,
    APIntAttr<I<16>>:$PF3_SRIOV_CAP_TOTAL_VF,
    APIntAttr<I<4>>:$PF3_SRIOV_CAP_VER,
    APIntAttr<I<16>>:$PF3_SRIOV_FIRST_VF_OFFSET,
    APIntAttr<I<16>>:$PF3_SRIOV_FUNC_DEP_LINK,
    APIntAttr<I<32>>:$PF3_SRIOV_SUPPORTED_PAGE_SIZE,
    APIntAttr<I<16>>:$PF3_SRIOV_VF_DEVICE_ID,
    APIntAttr<I<12>>:$PF3_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$PF3_TPHR_CAP_ST_MODE_SEL,
    StrAttr:$PL_CFG_STATE_ROBUSTNESS_ENABLE,
    StrAttr:$PL_DEEMPH_SOURCE_SELECT,
    StrAttr:$PL_DESKEW_ON_SKIP_IN_GEN12,
    StrAttr:$PL_DISABLE_AUTO_EQ_SPEED_CHANGE_TO_GEN3,
    StrAttr:$PL_DISABLE_AUTO_EQ_SPEED_CHANGE_TO_GEN4,
    StrAttr:$PL_DISABLE_AUTO_SPEED_CHANGE_TO_GEN2,
    StrAttr:$PL_DISABLE_DC_BALANCE,
    StrAttr:$PL_DISABLE_EI_INFER_IN_L0,
    StrAttr:$PL_DISABLE_LANE_REVERSAL,
    APIntAttr<I<2>>:$PL_DISABLE_LFSR_UPDATE_ON_SKP,
    StrAttr:$PL_DISABLE_RETRAIN_ON_EB_ERROR,
    StrAttr:$PL_DISABLE_RETRAIN_ON_FRAMING_ERROR,
    APIntAttr<I<16>>:$PL_DISABLE_RETRAIN_ON_SPECIFIC_FRAMING_ERROR,
    StrAttr:$PL_DISABLE_UPCONFIG_CAPABLE,
    APIntAttr<I<2>>:$PL_EQ_ADAPT_DISABLE_COEFF_CHECK,
    APIntAttr<I<2>>:$PL_EQ_ADAPT_DISABLE_PRESET_CHECK,
    APIntAttr<I<5>>:$PL_EQ_ADAPT_ITER_COUNT,
    APIntAttr<I<2>>:$PL_EQ_ADAPT_REJECT_RETRY_COUNT,
    APIntAttr<I<2>>:$PL_EQ_BYPASS_PHASE23,
    APIntAttr<I<6>>:$PL_EQ_DEFAULT_RX_PRESET_HINT,
    APIntAttr<I<8>>:$PL_EQ_DEFAULT_TX_PRESET,
    StrAttr:$PL_EQ_DISABLE_MISMATCH_CHECK,
    APIntAttr<I<2>>:$PL_EQ_RX_ADAPT_EQ_PHASE0,
    APIntAttr<I<2>>:$PL_EQ_RX_ADAPT_EQ_PHASE1,
    StrAttr:$PL_EQ_SHORT_ADAPT_PHASE,
    StrAttr:$PL_EQ_TX_8G_EQ_TS2_ENABLE,
    StrAttr:$PL_EXIT_LOOPBACK_ON_EI_ENTRY,
    StrAttr:$PL_INFER_EI_DISABLE_LPBK_ACTIVE,
    StrAttr:$PL_INFER_EI_DISABLE_REC_RC,
    StrAttr:$PL_INFER_EI_DISABLE_REC_SPD,
    APIntAttr<I<32>>:$PL_LANE0_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE10_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE11_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE12_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE13_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE14_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE15_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE1_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE2_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE3_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE4_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE5_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE6_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE7_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE8_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE9_EQ_CONTROL,
    APIntAttr<I<4>>:$PL_LINK_CAP_MAX_LINK_SPEED,
    APIntAttr<I<5>>:$PL_LINK_CAP_MAX_LINK_WIDTH,
    SI64Attr:$PL_N_FTS,
    StrAttr:$PL_QUIESCE_GUARANTEE_DISABLE,
    StrAttr:$PL_REDO_EQ_SOURCE_SELECT,
    APIntAttr<I<8>>:$PL_REPORT_ALL_PHY_ERRORS,
    APIntAttr<I<2>>:$PL_RX_ADAPT_TIMER_CLWS_CLOBBER_TX_TS,
    APIntAttr<I<4>>:$PL_RX_ADAPT_TIMER_CLWS_GEN3,
    APIntAttr<I<4>>:$PL_RX_ADAPT_TIMER_CLWS_GEN4,
    APIntAttr<I<2>>:$PL_RX_ADAPT_TIMER_RRL_CLOBBER_TX_TS,
    APIntAttr<I<4>>:$PL_RX_ADAPT_TIMER_RRL_GEN3,
    APIntAttr<I<4>>:$PL_RX_ADAPT_TIMER_RRL_GEN4,
    APIntAttr<I<2>>:$PL_RX_L0S_EXIT_TO_RECOVERY,
    APIntAttr<I<2>>:$PL_SIM_FAST_LINK_TRAINING,
    StrAttr:$PL_SRIS_ENABLE,
    APIntAttr<I<7>>:$PL_SRIS_SKPOS_GEN_SPD_VEC,
    APIntAttr<I<7>>:$PL_SRIS_SKPOS_REC_SPD_VEC,
    StrAttr:$PL_UPSTREAM_FACING,
    APIntAttr<I<16>>:$PL_USER_SPARE,
    APIntAttr<I<16>>:$PM_ASPML0S_TIMEOUT,
    APIntAttr<I<20>>:$PM_ASPML1_ENTRY_DELAY,
    StrAttr:$PM_ENABLE_L23_ENTRY,
    StrAttr:$PM_ENABLE_SLOT_POWER_CAPTURE,
    APIntAttr<I<32>>:$PM_L1_REENTRY_DELAY,
    APIntAttr<I<20>>:$PM_PME_SERVICE_TIMEOUT_DELAY,
    APIntAttr<I<16>>:$PM_PME_TURNOFF_ACK_DELAY,
    StrAttr:$SIM_DEVICE,
    APIntAttr<I<32>>:$SIM_JTAG_IDCODE,
    StrAttr:$SIM_VERSION,
    StrAttr:$SPARE_BIT0,
    SI64Attr:$SPARE_BIT1,
    SI64Attr:$SPARE_BIT2,
    StrAttr:$SPARE_BIT3,
    SI64Attr:$SPARE_BIT4,
    SI64Attr:$SPARE_BIT5,
    SI64Attr:$SPARE_BIT6,
    SI64Attr:$SPARE_BIT7,
    SI64Attr:$SPARE_BIT8,
    APIntAttr<I<8>>:$SPARE_BYTE0,
    APIntAttr<I<8>>:$SPARE_BYTE1,
    APIntAttr<I<8>>:$SPARE_BYTE2,
    APIntAttr<I<8>>:$SPARE_BYTE3,
    APIntAttr<I<32>>:$SPARE_WORD0,
    APIntAttr<I<32>>:$SPARE_WORD1,
    APIntAttr<I<32>>:$SPARE_WORD2,
    APIntAttr<I<32>>:$SPARE_WORD3,
    APIntAttr<I<4>>:$SRIOV_CAP_ENABLE,
    StrAttr:$TL2CFG_IF_PARITY_CHK,
    APIntAttr<I<2>>:$TL_COMPLETION_RAM_NUM_TLPS,
    APIntAttr<I<2>>:$TL_COMPLETION_RAM_SIZE,
    APIntAttr<I<12>>:$TL_CREDITS_CD,
    APIntAttr<I<8>>:$TL_CREDITS_CH,
    APIntAttr<I<12>>:$TL_CREDITS_NPD,
    APIntAttr<I<8>>:$TL_CREDITS_NPH,
    APIntAttr<I<12>>:$TL_CREDITS_PD,
    APIntAttr<I<8>>:$TL_CREDITS_PH,
    APIntAttr<I<5>>:$TL_FC_UPDATE_MIN_INTERVAL_TIME,
    APIntAttr<I<5>>:$TL_FC_UPDATE_MIN_INTERVAL_TLP_COUNT,
    APIntAttr<I<2>>:$TL_PF_ENABLE_REG,
    APIntAttr<I<1>>:$TL_POSTED_RAM_SIZE,
    StrAttr:$TL_RX_COMPLETION_FROM_RAM_READ_PIPELINE,
    StrAttr:$TL_RX_COMPLETION_TO_RAM_READ_PIPELINE,
    StrAttr:$TL_RX_COMPLETION_TO_RAM_WRITE_PIPELINE,
    StrAttr:$TL_RX_POSTED_FROM_RAM_READ_PIPELINE,
    StrAttr:$TL_RX_POSTED_TO_RAM_READ_PIPELINE,
    StrAttr:$TL_RX_POSTED_TO_RAM_WRITE_PIPELINE,
    StrAttr:$TL_TX_MUX_STRICT_PRIORITY,
    StrAttr:$TL_TX_TLP_STRADDLE_ENABLE,
    StrAttr:$TL_TX_TLP_TERMINATE_PARITY,
    APIntAttr<I<16>>:$TL_USER_SPARE,
    StrAttr:$TPH_FROM_RAM_PIPELINE,
    StrAttr:$TPH_TO_RAM_PIPELINE,
    APIntAttr<I<8>>:$VF0_CAPABILITY_POINTER,
    APIntAttr<I<12>>:$VFG0_ARI_CAP_NEXTPTR,
    APIntAttr<I<8>>:$VFG0_MSIX_CAP_NEXTPTR,
    SI64Attr:$VFG0_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VFG0_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VFG0_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VFG0_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VFG0_MSIX_CAP_TABLE_SIZE,
    APIntAttr<I<8>>:$VFG0_PCIE_CAP_NEXTPTR,
    APIntAttr<I<12>>:$VFG0_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VFG0_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<12>>:$VFG1_ARI_CAP_NEXTPTR,
    APIntAttr<I<8>>:$VFG1_MSIX_CAP_NEXTPTR,
    SI64Attr:$VFG1_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VFG1_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VFG1_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VFG1_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VFG1_MSIX_CAP_TABLE_SIZE,
    APIntAttr<I<8>>:$VFG1_PCIE_CAP_NEXTPTR,
    APIntAttr<I<12>>:$VFG1_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VFG1_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<12>>:$VFG2_ARI_CAP_NEXTPTR,
    APIntAttr<I<8>>:$VFG2_MSIX_CAP_NEXTPTR,
    SI64Attr:$VFG2_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VFG2_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VFG2_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VFG2_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VFG2_MSIX_CAP_TABLE_SIZE,
    APIntAttr<I<8>>:$VFG2_PCIE_CAP_NEXTPTR,
    APIntAttr<I<12>>:$VFG2_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VFG2_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<12>>:$VFG3_ARI_CAP_NEXTPTR,
    APIntAttr<I<8>>:$VFG3_MSIX_CAP_NEXTPTR,
    SI64Attr:$VFG3_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VFG3_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VFG3_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VFG3_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VFG3_MSIX_CAP_TABLE_SIZE,
    APIntAttr<I<8>>:$VFG3_PCIE_CAP_NEXTPTR,
    APIntAttr<I<12>>:$VFG3_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VFG3_TPHR_CAP_ST_MODE_SEL
  );

  let results = (outs
    I<8>:$AXIUSEROUT,
    I<8>:$CFGBUSNUMBER,
    I<2>:$CFGCURRENTSPEED,
    I<1>:$CFGERRCOROUT,
    I<1>:$CFGERRFATALOUT,
    I<1>:$CFGERRNONFATALOUT,
    I<8>:$CFGEXTFUNCTIONNUMBER,
    I<1>:$CFGEXTREADRECEIVED,
    I<10>:$CFGEXTREGISTERNUMBER,
    I<4>:$CFGEXTWRITEBYTEENABLE,
    I<32>:$CFGEXTWRITEDATA,
    I<1>:$CFGEXTWRITERECEIVED,
    I<12>:$CFGFCCPLD,
    I<8>:$CFGFCCPLH,
    I<12>:$CFGFCNPD,
    I<8>:$CFGFCNPH,
    I<12>:$CFGFCPD,
    I<8>:$CFGFCPH,
    I<4>:$CFGFLRINPROCESS,
    I<12>:$CFGFUNCTIONPOWERSTATE,
    I<16>:$CFGFUNCTIONSTATUS,
    I<1>:$CFGHOTRESETOUT,
    I<32>:$CFGINTERRUPTMSIDATA,
    I<4>:$CFGINTERRUPTMSIENABLE,
    I<1>:$CFGINTERRUPTMSIFAIL,
    I<1>:$CFGINTERRUPTMSIMASKUPDATE,
    I<12>:$CFGINTERRUPTMSIMMENABLE,
    I<1>:$CFGINTERRUPTMSISENT,
    I<4>:$CFGINTERRUPTMSIXENABLE,
    I<4>:$CFGINTERRUPTMSIXMASK,
    I<1>:$CFGINTERRUPTMSIXVECPENDINGSTATUS,
    I<1>:$CFGINTERRUPTSENT,
    I<2>:$CFGLINKPOWERSTATE,
    I<5>:$CFGLOCALERROROUT,
    I<1>:$CFGLOCALERRORVALID,
    I<1>:$CFGLTRENABLE,
    I<6>:$CFGLTSSMSTATE,
    I<2>:$CFGMAXPAYLOAD,
    I<3>:$CFGMAXREADREQ,
    I<32>:$CFGMGMTREADDATA,
    I<1>:$CFGMGMTREADWRITEDONE,
    I<1>:$CFGMSGRECEIVED,
    I<8>:$CFGMSGRECEIVEDDATA,
    I<5>:$CFGMSGRECEIVEDTYPE,
    I<1>:$CFGMSGTRANSMITDONE,
    I<13>:$CFGMSIXRAMADDRESS,
    I<1>:$CFGMSIXRAMREADENABLE,
    I<4>:$CFGMSIXRAMWRITEBYTEENABLE,
    I<36>:$CFGMSIXRAMWRITEDATA,
    I<3>:$CFGNEGOTIATEDWIDTH,
    I<2>:$CFGOBFFENABLE,
    I<1>:$CFGPHYLINKDOWN,
    I<2>:$CFGPHYLINKSTATUS,
    I<1>:$CFGPLSTATUSCHANGE,
    I<1>:$CFGPOWERSTATECHANGEINTERRUPT,
    I<4>:$CFGRCBSTATUS,
    I<2>:$CFGRXPMSTATE,
    I<12>:$CFGTPHRAMADDRESS,
    I<1>:$CFGTPHRAMREADENABLE,
    I<4>:$CFGTPHRAMWRITEBYTEENABLE,
    I<36>:$CFGTPHRAMWRITEDATA,
    I<4>:$CFGTPHREQUESTERENABLE,
    I<12>:$CFGTPHSTMODE,
    I<2>:$CFGTXPMSTATE,
    I<1>:$CONFMCAPDESIGNSWITCH,
    I<1>:$CONFMCAPEOS,
    I<1>:$CONFMCAPINUSEBYPCIE,
    I<1>:$CONFREQREADY,
    I<32>:$CONFRESPRDATA,
    I<1>:$CONFRESPVALID,
    I<32>:$DBGCTRL0OUT,
    I<32>:$DBGCTRL1OUT,
    I<256>:$DBGDATA0OUT,
    I<256>:$DBGDATA1OUT,
    I<16>:$DRPDO,
    I<1>:$DRPRDY,
    I<256>:$MAXISCQTDATA,
    I<8>:$MAXISCQTKEEP,
    I<1>:$MAXISCQTLAST,
    I<88>:$MAXISCQTUSER,
    I<1>:$MAXISCQTVALID,
    I<256>:$MAXISRCTDATA,
    I<8>:$MAXISRCTKEEP,
    I<1>:$MAXISRCTLAST,
    I<75>:$MAXISRCTUSER,
    I<1>:$MAXISRCTVALID,
    I<9>:$MIREPLAYRAMADDRESS0,
    I<9>:$MIREPLAYRAMADDRESS1,
    I<1>:$MIREPLAYRAMREADENABLE0,
    I<1>:$MIREPLAYRAMREADENABLE1,
    I<128>:$MIREPLAYRAMWRITEDATA0,
    I<128>:$MIREPLAYRAMWRITEDATA1,
    I<1>:$MIREPLAYRAMWRITEENABLE0,
    I<1>:$MIREPLAYRAMWRITEENABLE1,
    I<9>:$MIRXCOMPLETIONRAMREADADDRESS0,
    I<9>:$MIRXCOMPLETIONRAMREADADDRESS1,
    I<2>:$MIRXCOMPLETIONRAMREADENABLE0,
    I<2>:$MIRXCOMPLETIONRAMREADENABLE1,
    I<9>:$MIRXCOMPLETIONRAMWRITEADDRESS0,
    I<9>:$MIRXCOMPLETIONRAMWRITEADDRESS1,
    I<144>:$MIRXCOMPLETIONRAMWRITEDATA0,
    I<144>:$MIRXCOMPLETIONRAMWRITEDATA1,
    I<2>:$MIRXCOMPLETIONRAMWRITEENABLE0,
    I<2>:$MIRXCOMPLETIONRAMWRITEENABLE1,
    I<9>:$MIRXPOSTEDREQUESTRAMREADADDRESS0,
    I<9>:$MIRXPOSTEDREQUESTRAMREADADDRESS1,
    I<1>:$MIRXPOSTEDREQUESTRAMREADENABLE0,
    I<1>:$MIRXPOSTEDREQUESTRAMREADENABLE1,
    I<9>:$MIRXPOSTEDREQUESTRAMWRITEADDRESS0,
    I<9>:$MIRXPOSTEDREQUESTRAMWRITEADDRESS1,
    I<144>:$MIRXPOSTEDREQUESTRAMWRITEDATA0,
    I<144>:$MIRXPOSTEDREQUESTRAMWRITEDATA1,
    I<1>:$MIRXPOSTEDREQUESTRAMWRITEENABLE0,
    I<1>:$MIRXPOSTEDREQUESTRAMWRITEENABLE1,
    I<6>:$PCIECQNPREQCOUNT,
    I<1>:$PCIEPERST0B,
    I<1>:$PCIEPERST1B,
    I<6>:$PCIERQSEQNUM0,
    I<6>:$PCIERQSEQNUM1,
    I<1>:$PCIERQSEQNUMVLD0,
    I<1>:$PCIERQSEQNUMVLD1,
    I<8>:$PCIERQTAG0,
    I<8>:$PCIERQTAG1,
    I<4>:$PCIERQTAGAV,
    I<1>:$PCIERQTAGVLD0,
    I<1>:$PCIERQTAGVLD1,
    I<4>:$PCIETFCNPDAV,
    I<4>:$PCIETFCNPHAV,
    I<2>:$PIPERX00EQCONTROL,
    I<1>:$PIPERX00POLARITY,
    I<2>:$PIPERX01EQCONTROL,
    I<1>:$PIPERX01POLARITY,
    I<2>:$PIPERX02EQCONTROL,
    I<1>:$PIPERX02POLARITY,
    I<2>:$PIPERX03EQCONTROL,
    I<1>:$PIPERX03POLARITY,
    I<2>:$PIPERX04EQCONTROL,
    I<1>:$PIPERX04POLARITY,
    I<2>:$PIPERX05EQCONTROL,
    I<1>:$PIPERX05POLARITY,
    I<2>:$PIPERX06EQCONTROL,
    I<1>:$PIPERX06POLARITY,
    I<2>:$PIPERX07EQCONTROL,
    I<1>:$PIPERX07POLARITY,
    I<2>:$PIPERX08EQCONTROL,
    I<1>:$PIPERX08POLARITY,
    I<2>:$PIPERX09EQCONTROL,
    I<1>:$PIPERX09POLARITY,
    I<2>:$PIPERX10EQCONTROL,
    I<1>:$PIPERX10POLARITY,
    I<2>:$PIPERX11EQCONTROL,
    I<1>:$PIPERX11POLARITY,
    I<2>:$PIPERX12EQCONTROL,
    I<1>:$PIPERX12POLARITY,
    I<2>:$PIPERX13EQCONTROL,
    I<1>:$PIPERX13POLARITY,
    I<2>:$PIPERX14EQCONTROL,
    I<1>:$PIPERX14POLARITY,
    I<2>:$PIPERX15EQCONTROL,
    I<1>:$PIPERX15POLARITY,
    I<6>:$PIPERXEQLPLFFS,
    I<4>:$PIPERXEQLPTXPRESET,
    I<2>:$PIPETX00CHARISK,
    I<1>:$PIPETX00COMPLIANCE,
    I<32>:$PIPETX00DATA,
    I<1>:$PIPETX00DATAVALID,
    I<1>:$PIPETX00ELECIDLE,
    I<2>:$PIPETX00EQCONTROL,
    I<6>:$PIPETX00EQDEEMPH,
    I<2>:$PIPETX00POWERDOWN,
    I<1>:$PIPETX00STARTBLOCK,
    I<2>:$PIPETX00SYNCHEADER,
    I<2>:$PIPETX01CHARISK,
    I<1>:$PIPETX01COMPLIANCE,
    I<32>:$PIPETX01DATA,
    I<1>:$PIPETX01DATAVALID,
    I<1>:$PIPETX01ELECIDLE,
    I<2>:$PIPETX01EQCONTROL,
    I<6>:$PIPETX01EQDEEMPH,
    I<2>:$PIPETX01POWERDOWN,
    I<1>:$PIPETX01STARTBLOCK,
    I<2>:$PIPETX01SYNCHEADER,
    I<2>:$PIPETX02CHARISK,
    I<1>:$PIPETX02COMPLIANCE,
    I<32>:$PIPETX02DATA,
    I<1>:$PIPETX02DATAVALID,
    I<1>:$PIPETX02ELECIDLE,
    I<2>:$PIPETX02EQCONTROL,
    I<6>:$PIPETX02EQDEEMPH,
    I<2>:$PIPETX02POWERDOWN,
    I<1>:$PIPETX02STARTBLOCK,
    I<2>:$PIPETX02SYNCHEADER,
    I<2>:$PIPETX03CHARISK,
    I<1>:$PIPETX03COMPLIANCE,
    I<32>:$PIPETX03DATA,
    I<1>:$PIPETX03DATAVALID,
    I<1>:$PIPETX03ELECIDLE,
    I<2>:$PIPETX03EQCONTROL,
    I<6>:$PIPETX03EQDEEMPH,
    I<2>:$PIPETX03POWERDOWN,
    I<1>:$PIPETX03STARTBLOCK,
    I<2>:$PIPETX03SYNCHEADER,
    I<2>:$PIPETX04CHARISK,
    I<1>:$PIPETX04COMPLIANCE,
    I<32>:$PIPETX04DATA,
    I<1>:$PIPETX04DATAVALID,
    I<1>:$PIPETX04ELECIDLE,
    I<2>:$PIPETX04EQCONTROL,
    I<6>:$PIPETX04EQDEEMPH,
    I<2>:$PIPETX04POWERDOWN,
    I<1>:$PIPETX04STARTBLOCK,
    I<2>:$PIPETX04SYNCHEADER,
    I<2>:$PIPETX05CHARISK,
    I<1>:$PIPETX05COMPLIANCE,
    I<32>:$PIPETX05DATA,
    I<1>:$PIPETX05DATAVALID,
    I<1>:$PIPETX05ELECIDLE,
    I<2>:$PIPETX05EQCONTROL,
    I<6>:$PIPETX05EQDEEMPH,
    I<2>:$PIPETX05POWERDOWN,
    I<1>:$PIPETX05STARTBLOCK,
    I<2>:$PIPETX05SYNCHEADER,
    I<2>:$PIPETX06CHARISK,
    I<1>:$PIPETX06COMPLIANCE,
    I<32>:$PIPETX06DATA,
    I<1>:$PIPETX06DATAVALID,
    I<1>:$PIPETX06ELECIDLE,
    I<2>:$PIPETX06EQCONTROL,
    I<6>:$PIPETX06EQDEEMPH,
    I<2>:$PIPETX06POWERDOWN,
    I<1>:$PIPETX06STARTBLOCK,
    I<2>:$PIPETX06SYNCHEADER,
    I<2>:$PIPETX07CHARISK,
    I<1>:$PIPETX07COMPLIANCE,
    I<32>:$PIPETX07DATA,
    I<1>:$PIPETX07DATAVALID,
    I<1>:$PIPETX07ELECIDLE,
    I<2>:$PIPETX07EQCONTROL,
    I<6>:$PIPETX07EQDEEMPH,
    I<2>:$PIPETX07POWERDOWN,
    I<1>:$PIPETX07STARTBLOCK,
    I<2>:$PIPETX07SYNCHEADER,
    I<2>:$PIPETX08CHARISK,
    I<1>:$PIPETX08COMPLIANCE,
    I<32>:$PIPETX08DATA,
    I<1>:$PIPETX08DATAVALID,
    I<1>:$PIPETX08ELECIDLE,
    I<2>:$PIPETX08EQCONTROL,
    I<6>:$PIPETX08EQDEEMPH,
    I<2>:$PIPETX08POWERDOWN,
    I<1>:$PIPETX08STARTBLOCK,
    I<2>:$PIPETX08SYNCHEADER,
    I<2>:$PIPETX09CHARISK,
    I<1>:$PIPETX09COMPLIANCE,
    I<32>:$PIPETX09DATA,
    I<1>:$PIPETX09DATAVALID,
    I<1>:$PIPETX09ELECIDLE,
    I<2>:$PIPETX09EQCONTROL,
    I<6>:$PIPETX09EQDEEMPH,
    I<2>:$PIPETX09POWERDOWN,
    I<1>:$PIPETX09STARTBLOCK,
    I<2>:$PIPETX09SYNCHEADER,
    I<2>:$PIPETX10CHARISK,
    I<1>:$PIPETX10COMPLIANCE,
    I<32>:$PIPETX10DATA,
    I<1>:$PIPETX10DATAVALID,
    I<1>:$PIPETX10ELECIDLE,
    I<2>:$PIPETX10EQCONTROL,
    I<6>:$PIPETX10EQDEEMPH,
    I<2>:$PIPETX10POWERDOWN,
    I<1>:$PIPETX10STARTBLOCK,
    I<2>:$PIPETX10SYNCHEADER,
    I<2>:$PIPETX11CHARISK,
    I<1>:$PIPETX11COMPLIANCE,
    I<32>:$PIPETX11DATA,
    I<1>:$PIPETX11DATAVALID,
    I<1>:$PIPETX11ELECIDLE,
    I<2>:$PIPETX11EQCONTROL,
    I<6>:$PIPETX11EQDEEMPH,
    I<2>:$PIPETX11POWERDOWN,
    I<1>:$PIPETX11STARTBLOCK,
    I<2>:$PIPETX11SYNCHEADER,
    I<2>:$PIPETX12CHARISK,
    I<1>:$PIPETX12COMPLIANCE,
    I<32>:$PIPETX12DATA,
    I<1>:$PIPETX12DATAVALID,
    I<1>:$PIPETX12ELECIDLE,
    I<2>:$PIPETX12EQCONTROL,
    I<6>:$PIPETX12EQDEEMPH,
    I<2>:$PIPETX12POWERDOWN,
    I<1>:$PIPETX12STARTBLOCK,
    I<2>:$PIPETX12SYNCHEADER,
    I<2>:$PIPETX13CHARISK,
    I<1>:$PIPETX13COMPLIANCE,
    I<32>:$PIPETX13DATA,
    I<1>:$PIPETX13DATAVALID,
    I<1>:$PIPETX13ELECIDLE,
    I<2>:$PIPETX13EQCONTROL,
    I<6>:$PIPETX13EQDEEMPH,
    I<2>:$PIPETX13POWERDOWN,
    I<1>:$PIPETX13STARTBLOCK,
    I<2>:$PIPETX13SYNCHEADER,
    I<2>:$PIPETX14CHARISK,
    I<1>:$PIPETX14COMPLIANCE,
    I<32>:$PIPETX14DATA,
    I<1>:$PIPETX14DATAVALID,
    I<1>:$PIPETX14ELECIDLE,
    I<2>:$PIPETX14EQCONTROL,
    I<6>:$PIPETX14EQDEEMPH,
    I<2>:$PIPETX14POWERDOWN,
    I<1>:$PIPETX14STARTBLOCK,
    I<2>:$PIPETX14SYNCHEADER,
    I<2>:$PIPETX15CHARISK,
    I<1>:$PIPETX15COMPLIANCE,
    I<32>:$PIPETX15DATA,
    I<1>:$PIPETX15DATAVALID,
    I<1>:$PIPETX15ELECIDLE,
    I<2>:$PIPETX15EQCONTROL,
    I<6>:$PIPETX15EQDEEMPH,
    I<2>:$PIPETX15POWERDOWN,
    I<1>:$PIPETX15STARTBLOCK,
    I<2>:$PIPETX15SYNCHEADER,
    I<1>:$PIPETXDEEMPH,
    I<3>:$PIPETXMARGIN,
    I<2>:$PIPETXRATE,
    I<1>:$PIPETXRCVRDET,
    I<1>:$PIPETXRESET,
    I<1>:$PIPETXSWING,
    I<1>:$PLEQINPROGRESS,
    I<2>:$PLEQPHASE,
    I<1>:$PLGEN34EQMISMATCH,
    I<4>:$SAXISCCTREADY,
    I<4>:$SAXISRQTREADY,
    I<32>:$USERSPAREOUT
  );
}

def PCIE4CE4 : XilinxPrimitiveOp<"PCIE4CE4", []> {
  let summary = "PCIE4CE4 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<8>:$AXIUSERIN,
    I<1>:$CCIXOPTIMIZEDTLPTXANDRXENABLE,
    I<1>:$CCIXRXCORRECTABLEERRORDETECTED,
    I<1>:$CCIXRXFIFOOVERFLOW,
    I<1>:$CCIXRXTLPFORWARDED0,
    I<1>:$CCIXRXTLPFORWARDED1,
    I<6>:$CCIXRXTLPFORWARDEDLENGTH0,
    I<6>:$CCIXRXTLPFORWARDEDLENGTH1,
    I<1>:$CCIXRXUNCORRECTABLEERRORDETECTED,
    I<1>:$CFGCONFIGSPACEENABLE,
    I<16>:$CFGDEVIDPF0,
    I<16>:$CFGDEVIDPF1,
    I<16>:$CFGDEVIDPF2,
    I<16>:$CFGDEVIDPF3,
    I<8>:$CFGDSBUSNUMBER,
    I<5>:$CFGDSDEVICENUMBER,
    I<3>:$CFGDSFUNCTIONNUMBER,
    I<64>:$CFGDSN,
    I<8>:$CFGDSPORTNUMBER,
    I<1>:$CFGERRCORIN,
    I<1>:$CFGERRUNCORIN,
    I<32>:$CFGEXTREADDATA,
    I<1>:$CFGEXTREADDATAVALID,
    I<3>:$CFGFCSEL,
    I<1>:$CFGFCVCSEL,
    I<4>:$CFGFLRDONE,
    I<1>:$CFGHOTRESETIN,
    I<4>:$CFGINTERRUPTINT,
    I<3>:$CFGINTERRUPTMSIATTR,
    I<8>:$CFGINTERRUPTMSIFUNCTIONNUMBER,
    I<32>:$CFGINTERRUPTMSIINT,
    I<32>:$CFGINTERRUPTMSIPENDINGSTATUS,
    I<1>:$CFGINTERRUPTMSIPENDINGSTATUSDATAENABLE,
    I<2>:$CFGINTERRUPTMSIPENDINGSTATUSFUNCTIONNUM,
    I<2>:$CFGINTERRUPTMSISELECT,
    I<1>:$CFGINTERRUPTMSITPHPRESENT,
    I<8>:$CFGINTERRUPTMSITPHSTTAG,
    I<2>:$CFGINTERRUPTMSITPHTYPE,
    I<64>:$CFGINTERRUPTMSIXADDRESS,
    I<32>:$CFGINTERRUPTMSIXDATA,
    I<1>:$CFGINTERRUPTMSIXINT,
    I<2>:$CFGINTERRUPTMSIXVECPENDING,
    I<4>:$CFGINTERRUPTPENDING,
    I<1>:$CFGLINKTRAININGENABLE,
    I<10>:$CFGMGMTADDR,
    I<4>:$CFGMGMTBYTEENABLE,
    I<1>:$CFGMGMTDEBUGACCESS,
    I<8>:$CFGMGMTFUNCTIONNUMBER,
    I<1>:$CFGMGMTREAD,
    I<1>:$CFGMGMTWRITE,
    I<32>:$CFGMGMTWRITEDATA,
    I<1>:$CFGMSGTRANSMIT,
    I<32>:$CFGMSGTRANSMITDATA,
    I<3>:$CFGMSGTRANSMITTYPE,
    I<36>:$CFGMSIXRAMREADDATA,
    I<1>:$CFGPMASPML1ENTRYREJECT,
    I<1>:$CFGPMASPMTXL0SENTRYDISABLE,
    I<1>:$CFGPOWERSTATECHANGEACK,
    I<1>:$CFGREQPMTRANSITIONL23READY,
    I<8>:$CFGREVIDPF0,
    I<8>:$CFGREVIDPF1,
    I<8>:$CFGREVIDPF2,
    I<8>:$CFGREVIDPF3,
    I<16>:$CFGSUBSYSIDPF0,
    I<16>:$CFGSUBSYSIDPF1,
    I<16>:$CFGSUBSYSIDPF2,
    I<16>:$CFGSUBSYSIDPF3,
    I<16>:$CFGSUBSYSVENDID,
    I<36>:$CFGTPHRAMREADDATA,
    I<16>:$CFGVENDID,
    I<1>:$CFGVFFLRDONE,
    I<8>:$CFGVFFLRFUNCNUM,
    I<1>:$CONFMCAPREQUESTBYCONF,
    I<32>:$CONFREQDATA,
    I<4>:$CONFREQREGNUM,
    I<2>:$CONFREQTYPE,
    I<1>:$CONFREQVALID,
    I<1>:$CORECLK,
    I<1>:$CORECLKCCIX,
    I<1>:$CORECLKMIREPLAYRAM0,
    I<1>:$CORECLKMIREPLAYRAM1,
    I<1>:$CORECLKMIRXCOMPLETIONRAM0,
    I<1>:$CORECLKMIRXCOMPLETIONRAM1,
    I<1>:$CORECLKMIRXPOSTEDREQUESTRAM0,
    I<1>:$CORECLKMIRXPOSTEDREQUESTRAM1,
    I<6>:$DBGSEL0,
    I<6>:$DBGSEL1,
    I<10>:$DRPADDR,
    I<1>:$DRPCLK,
    I<16>:$DRPDI,
    I<1>:$DRPEN,
    I<1>:$DRPWE,
    I<22>:$MAXISCQTREADY,
    I<22>:$MAXISRCTREADY,
    I<1>:$MCAPCLK,
    I<1>:$MCAPPERST0B,
    I<1>:$MCAPPERST1B,
    I<1>:$MGMTRESETN,
    I<1>:$MGMTSTICKYRESETN,
    I<6>:$MIREPLAYRAMERRCOR,
    I<6>:$MIREPLAYRAMERRUNCOR,
    I<128>:$MIREPLAYRAMREADDATA0,
    I<128>:$MIREPLAYRAMREADDATA1,
    I<12>:$MIRXCOMPLETIONRAMERRCOR,
    I<12>:$MIRXCOMPLETIONRAMERRUNCOR,
    I<144>:$MIRXCOMPLETIONRAMREADDATA0,
    I<144>:$MIRXCOMPLETIONRAMREADDATA1,
    I<6>:$MIRXPOSTEDREQUESTRAMERRCOR,
    I<6>:$MIRXPOSTEDREQUESTRAMERRUNCOR,
    I<144>:$MIRXPOSTEDREQUESTRAMREADDATA0,
    I<144>:$MIRXPOSTEDREQUESTRAMREADDATA1,
    I<2>:$PCIECOMPLDELIVERED,
    I<8>:$PCIECOMPLDELIVEREDTAG0,
    I<8>:$PCIECOMPLDELIVEREDTAG1,
    I<2>:$PCIECQNPREQ,
    I<1>:$PCIECQNPUSERCREDITRCVD,
    I<1>:$PCIECQPIPELINEEMPTY,
    I<1>:$PCIEPOSTEDREQDELIVERED,
    I<1>:$PIPECLK,
    I<1>:$PIPECLKEN,
    I<6>:$PIPEEQFS,
    I<6>:$PIPEEQLF,
    I<1>:$PIPERESETN,
    I<2>:$PIPERX00CHARISK,
    I<32>:$PIPERX00DATA,
    I<1>:$PIPERX00DATAVALID,
    I<1>:$PIPERX00ELECIDLE,
    I<1>:$PIPERX00EQDONE,
    I<1>:$PIPERX00EQLPADAPTDONE,
    I<1>:$PIPERX00EQLPLFFSSEL,
    I<18>:$PIPERX00EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX00PHYSTATUS,
    I<2>:$PIPERX00STARTBLOCK,
    I<3>:$PIPERX00STATUS,
    I<2>:$PIPERX00SYNCHEADER,
    I<1>:$PIPERX00VALID,
    I<2>:$PIPERX01CHARISK,
    I<32>:$PIPERX01DATA,
    I<1>:$PIPERX01DATAVALID,
    I<1>:$PIPERX01ELECIDLE,
    I<1>:$PIPERX01EQDONE,
    I<1>:$PIPERX01EQLPADAPTDONE,
    I<1>:$PIPERX01EQLPLFFSSEL,
    I<18>:$PIPERX01EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX01PHYSTATUS,
    I<2>:$PIPERX01STARTBLOCK,
    I<3>:$PIPERX01STATUS,
    I<2>:$PIPERX01SYNCHEADER,
    I<1>:$PIPERX01VALID,
    I<2>:$PIPERX02CHARISK,
    I<32>:$PIPERX02DATA,
    I<1>:$PIPERX02DATAVALID,
    I<1>:$PIPERX02ELECIDLE,
    I<1>:$PIPERX02EQDONE,
    I<1>:$PIPERX02EQLPADAPTDONE,
    I<1>:$PIPERX02EQLPLFFSSEL,
    I<18>:$PIPERX02EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX02PHYSTATUS,
    I<2>:$PIPERX02STARTBLOCK,
    I<3>:$PIPERX02STATUS,
    I<2>:$PIPERX02SYNCHEADER,
    I<1>:$PIPERX02VALID,
    I<2>:$PIPERX03CHARISK,
    I<32>:$PIPERX03DATA,
    I<1>:$PIPERX03DATAVALID,
    I<1>:$PIPERX03ELECIDLE,
    I<1>:$PIPERX03EQDONE,
    I<1>:$PIPERX03EQLPADAPTDONE,
    I<1>:$PIPERX03EQLPLFFSSEL,
    I<18>:$PIPERX03EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX03PHYSTATUS,
    I<2>:$PIPERX03STARTBLOCK,
    I<3>:$PIPERX03STATUS,
    I<2>:$PIPERX03SYNCHEADER,
    I<1>:$PIPERX03VALID,
    I<2>:$PIPERX04CHARISK,
    I<32>:$PIPERX04DATA,
    I<1>:$PIPERX04DATAVALID,
    I<1>:$PIPERX04ELECIDLE,
    I<1>:$PIPERX04EQDONE,
    I<1>:$PIPERX04EQLPADAPTDONE,
    I<1>:$PIPERX04EQLPLFFSSEL,
    I<18>:$PIPERX04EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX04PHYSTATUS,
    I<2>:$PIPERX04STARTBLOCK,
    I<3>:$PIPERX04STATUS,
    I<2>:$PIPERX04SYNCHEADER,
    I<1>:$PIPERX04VALID,
    I<2>:$PIPERX05CHARISK,
    I<32>:$PIPERX05DATA,
    I<1>:$PIPERX05DATAVALID,
    I<1>:$PIPERX05ELECIDLE,
    I<1>:$PIPERX05EQDONE,
    I<1>:$PIPERX05EQLPADAPTDONE,
    I<1>:$PIPERX05EQLPLFFSSEL,
    I<18>:$PIPERX05EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX05PHYSTATUS,
    I<2>:$PIPERX05STARTBLOCK,
    I<3>:$PIPERX05STATUS,
    I<2>:$PIPERX05SYNCHEADER,
    I<1>:$PIPERX05VALID,
    I<2>:$PIPERX06CHARISK,
    I<32>:$PIPERX06DATA,
    I<1>:$PIPERX06DATAVALID,
    I<1>:$PIPERX06ELECIDLE,
    I<1>:$PIPERX06EQDONE,
    I<1>:$PIPERX06EQLPADAPTDONE,
    I<1>:$PIPERX06EQLPLFFSSEL,
    I<18>:$PIPERX06EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX06PHYSTATUS,
    I<2>:$PIPERX06STARTBLOCK,
    I<3>:$PIPERX06STATUS,
    I<2>:$PIPERX06SYNCHEADER,
    I<1>:$PIPERX06VALID,
    I<2>:$PIPERX07CHARISK,
    I<32>:$PIPERX07DATA,
    I<1>:$PIPERX07DATAVALID,
    I<1>:$PIPERX07ELECIDLE,
    I<1>:$PIPERX07EQDONE,
    I<1>:$PIPERX07EQLPADAPTDONE,
    I<1>:$PIPERX07EQLPLFFSSEL,
    I<18>:$PIPERX07EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX07PHYSTATUS,
    I<2>:$PIPERX07STARTBLOCK,
    I<3>:$PIPERX07STATUS,
    I<2>:$PIPERX07SYNCHEADER,
    I<1>:$PIPERX07VALID,
    I<2>:$PIPERX08CHARISK,
    I<32>:$PIPERX08DATA,
    I<1>:$PIPERX08DATAVALID,
    I<1>:$PIPERX08ELECIDLE,
    I<1>:$PIPERX08EQDONE,
    I<1>:$PIPERX08EQLPADAPTDONE,
    I<1>:$PIPERX08EQLPLFFSSEL,
    I<18>:$PIPERX08EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX08PHYSTATUS,
    I<2>:$PIPERX08STARTBLOCK,
    I<3>:$PIPERX08STATUS,
    I<2>:$PIPERX08SYNCHEADER,
    I<1>:$PIPERX08VALID,
    I<2>:$PIPERX09CHARISK,
    I<32>:$PIPERX09DATA,
    I<1>:$PIPERX09DATAVALID,
    I<1>:$PIPERX09ELECIDLE,
    I<1>:$PIPERX09EQDONE,
    I<1>:$PIPERX09EQLPADAPTDONE,
    I<1>:$PIPERX09EQLPLFFSSEL,
    I<18>:$PIPERX09EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX09PHYSTATUS,
    I<2>:$PIPERX09STARTBLOCK,
    I<3>:$PIPERX09STATUS,
    I<2>:$PIPERX09SYNCHEADER,
    I<1>:$PIPERX09VALID,
    I<2>:$PIPERX10CHARISK,
    I<32>:$PIPERX10DATA,
    I<1>:$PIPERX10DATAVALID,
    I<1>:$PIPERX10ELECIDLE,
    I<1>:$PIPERX10EQDONE,
    I<1>:$PIPERX10EQLPADAPTDONE,
    I<1>:$PIPERX10EQLPLFFSSEL,
    I<18>:$PIPERX10EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX10PHYSTATUS,
    I<2>:$PIPERX10STARTBLOCK,
    I<3>:$PIPERX10STATUS,
    I<2>:$PIPERX10SYNCHEADER,
    I<1>:$PIPERX10VALID,
    I<2>:$PIPERX11CHARISK,
    I<32>:$PIPERX11DATA,
    I<1>:$PIPERX11DATAVALID,
    I<1>:$PIPERX11ELECIDLE,
    I<1>:$PIPERX11EQDONE,
    I<1>:$PIPERX11EQLPADAPTDONE,
    I<1>:$PIPERX11EQLPLFFSSEL,
    I<18>:$PIPERX11EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX11PHYSTATUS,
    I<2>:$PIPERX11STARTBLOCK,
    I<3>:$PIPERX11STATUS,
    I<2>:$PIPERX11SYNCHEADER,
    I<1>:$PIPERX11VALID,
    I<2>:$PIPERX12CHARISK,
    I<32>:$PIPERX12DATA,
    I<1>:$PIPERX12DATAVALID,
    I<1>:$PIPERX12ELECIDLE,
    I<1>:$PIPERX12EQDONE,
    I<1>:$PIPERX12EQLPADAPTDONE,
    I<1>:$PIPERX12EQLPLFFSSEL,
    I<18>:$PIPERX12EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX12PHYSTATUS,
    I<2>:$PIPERX12STARTBLOCK,
    I<3>:$PIPERX12STATUS,
    I<2>:$PIPERX12SYNCHEADER,
    I<1>:$PIPERX12VALID,
    I<2>:$PIPERX13CHARISK,
    I<32>:$PIPERX13DATA,
    I<1>:$PIPERX13DATAVALID,
    I<1>:$PIPERX13ELECIDLE,
    I<1>:$PIPERX13EQDONE,
    I<1>:$PIPERX13EQLPADAPTDONE,
    I<1>:$PIPERX13EQLPLFFSSEL,
    I<18>:$PIPERX13EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX13PHYSTATUS,
    I<2>:$PIPERX13STARTBLOCK,
    I<3>:$PIPERX13STATUS,
    I<2>:$PIPERX13SYNCHEADER,
    I<1>:$PIPERX13VALID,
    I<2>:$PIPERX14CHARISK,
    I<32>:$PIPERX14DATA,
    I<1>:$PIPERX14DATAVALID,
    I<1>:$PIPERX14ELECIDLE,
    I<1>:$PIPERX14EQDONE,
    I<1>:$PIPERX14EQLPADAPTDONE,
    I<1>:$PIPERX14EQLPLFFSSEL,
    I<18>:$PIPERX14EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX14PHYSTATUS,
    I<2>:$PIPERX14STARTBLOCK,
    I<3>:$PIPERX14STATUS,
    I<2>:$PIPERX14SYNCHEADER,
    I<1>:$PIPERX14VALID,
    I<2>:$PIPERX15CHARISK,
    I<32>:$PIPERX15DATA,
    I<1>:$PIPERX15DATAVALID,
    I<1>:$PIPERX15ELECIDLE,
    I<1>:$PIPERX15EQDONE,
    I<1>:$PIPERX15EQLPADAPTDONE,
    I<1>:$PIPERX15EQLPLFFSSEL,
    I<18>:$PIPERX15EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX15PHYSTATUS,
    I<2>:$PIPERX15STARTBLOCK,
    I<3>:$PIPERX15STATUS,
    I<2>:$PIPERX15SYNCHEADER,
    I<1>:$PIPERX15VALID,
    I<18>:$PIPETX00EQCOEFF,
    I<1>:$PIPETX00EQDONE,
    I<18>:$PIPETX01EQCOEFF,
    I<1>:$PIPETX01EQDONE,
    I<18>:$PIPETX02EQCOEFF,
    I<1>:$PIPETX02EQDONE,
    I<18>:$PIPETX03EQCOEFF,
    I<1>:$PIPETX03EQDONE,
    I<18>:$PIPETX04EQCOEFF,
    I<1>:$PIPETX04EQDONE,
    I<18>:$PIPETX05EQCOEFF,
    I<1>:$PIPETX05EQDONE,
    I<18>:$PIPETX06EQCOEFF,
    I<1>:$PIPETX06EQDONE,
    I<18>:$PIPETX07EQCOEFF,
    I<1>:$PIPETX07EQDONE,
    I<18>:$PIPETX08EQCOEFF,
    I<1>:$PIPETX08EQDONE,
    I<18>:$PIPETX09EQCOEFF,
    I<1>:$PIPETX09EQDONE,
    I<18>:$PIPETX10EQCOEFF,
    I<1>:$PIPETX10EQDONE,
    I<18>:$PIPETX11EQCOEFF,
    I<1>:$PIPETX11EQDONE,
    I<18>:$PIPETX12EQCOEFF,
    I<1>:$PIPETX12EQDONE,
    I<18>:$PIPETX13EQCOEFF,
    I<1>:$PIPETX13EQDONE,
    I<18>:$PIPETX14EQCOEFF,
    I<1>:$PIPETX14EQDONE,
    I<18>:$PIPETX15EQCOEFF,
    I<1>:$PIPETX15EQDONE,
    I<1>:$PLEQRESETEIEOSCOUNT,
    I<1>:$PLGEN2UPSTREAMPREFERDEEMPH,
    I<1>:$PLGEN34REDOEQSPEED,
    I<1>:$PLGEN34REDOEQUALIZATION,
    I<1>:$RESETN,
    I<256>:$SAXISCCIXTXTDATA,
    I<46>:$SAXISCCIXTXTUSER,
    I<1>:$SAXISCCIXTXTVALID,
    I<256>:$SAXISCCTDATA,
    I<8>:$SAXISCCTKEEP,
    I<1>:$SAXISCCTLAST,
    I<33>:$SAXISCCTUSER,
    I<1>:$SAXISCCTVALID,
    I<256>:$SAXISRQTDATA,
    I<8>:$SAXISRQTKEEP,
    I<1>:$SAXISRQTLAST,
    I<62>:$SAXISRQTUSER,
    I<1>:$SAXISRQTVALID,
    I<1>:$USERCLK,
    I<1>:$USERCLK2,
    I<1>:$USERCLKEN,
    I<32>:$USERSPAREIN,

    // PCIE4CE4 parameters follows
    StrAttr:$ARI_CAP_ENABLE,
    StrAttr:$AUTO_FLR_RESPONSE,
    APIntAttr<I<8>>:$AXISTEN_IF_CCIX_RX_CREDIT_LIMIT,
    APIntAttr<I<8>>:$AXISTEN_IF_CCIX_TX_CREDIT_LIMIT,
    StrAttr:$AXISTEN_IF_CCIX_TX_REGISTERED_TREADY,
    APIntAttr<I<2>>:$AXISTEN_IF_CC_ALIGNMENT_MODE,
    APIntAttr<I<24>>:$AXISTEN_IF_COMPL_TIMEOUT_REG0,
    APIntAttr<I<28>>:$AXISTEN_IF_COMPL_TIMEOUT_REG1,
    APIntAttr<I<2>>:$AXISTEN_IF_CQ_ALIGNMENT_MODE,
    StrAttr:$AXISTEN_IF_CQ_EN_POISONED_MEM_WR,
    StrAttr:$AXISTEN_IF_ENABLE_256_TAGS,
    StrAttr:$AXISTEN_IF_ENABLE_CLIENT_TAG,
    StrAttr:$AXISTEN_IF_ENABLE_INTERNAL_MSIX_TABLE,
    StrAttr:$AXISTEN_IF_ENABLE_MESSAGE_RID_CHECK,
    APIntAttr<I<18>>:$AXISTEN_IF_ENABLE_MSG_ROUTE,
    StrAttr:$AXISTEN_IF_ENABLE_RX_MSG_INTFC,
    StrAttr:$AXISTEN_IF_EXT_512,
    StrAttr:$AXISTEN_IF_EXT_512_CC_STRADDLE,
    StrAttr:$AXISTEN_IF_EXT_512_CQ_STRADDLE,
    StrAttr:$AXISTEN_IF_EXT_512_RC_STRADDLE,
    StrAttr:$AXISTEN_IF_EXT_512_RQ_STRADDLE,
    StrAttr:$AXISTEN_IF_LEGACY_MODE_ENABLE,
    StrAttr:$AXISTEN_IF_MSIX_FROM_RAM_PIPELINE,
    StrAttr:$AXISTEN_IF_MSIX_RX_PARITY_EN,
    StrAttr:$AXISTEN_IF_MSIX_TO_RAM_PIPELINE,
    APIntAttr<I<2>>:$AXISTEN_IF_RC_ALIGNMENT_MODE,
    StrAttr:$AXISTEN_IF_RC_STRADDLE,
    APIntAttr<I<2>>:$AXISTEN_IF_RQ_ALIGNMENT_MODE,
    StrAttr:$AXISTEN_IF_RX_PARITY_EN,
    StrAttr:$AXISTEN_IF_SIM_SHORT_CPL_TIMEOUT,
    StrAttr:$AXISTEN_IF_TX_PARITY_EN,
    APIntAttr<I<2>>:$AXISTEN_IF_WIDTH,
    StrAttr:$CCIX_DIRECT_ATTACH_MODE,
    StrAttr:$CCIX_ENABLE,
    APIntAttr<I<16>>:$CCIX_VENDOR_ID,
    StrAttr:$CFG_BYPASS_MODE_ENABLE,
    StrAttr:$CRM_CORE_CLK_FREQ_500,
    APIntAttr<I<2>>:$CRM_USER_CLK_FREQ,
    APIntAttr<I<16>>:$DEBUG_AXI4ST_SPARE,
    APIntAttr<I<8>>:$DEBUG_AXIST_DISABLE_FEATURE_BIT,
    APIntAttr<I<4>>:$DEBUG_CAR_SPARE,
    APIntAttr<I<16>>:$DEBUG_CFG_SPARE,
    APIntAttr<I<16>>:$DEBUG_LL_SPARE,
    StrAttr:$DEBUG_PL_DISABLE_LES_UPDATE_ON_DEFRAMER_ERROR,
    StrAttr:$DEBUG_PL_DISABLE_LES_UPDATE_ON_SKP_ERROR,
    StrAttr:$DEBUG_PL_DISABLE_LES_UPDATE_ON_SKP_PARITY_ERROR,
    StrAttr:$DEBUG_PL_DISABLE_REC_ENTRY_ON_DYNAMIC_DSKEW_FAIL,
    StrAttr:$DEBUG_PL_DISABLE_REC_ENTRY_ON_RX_BUFFER_UNDER_OVER_FLOW,
    StrAttr:$DEBUG_PL_DISABLE_SCRAMBLING,
    StrAttr:$DEBUG_PL_SIM_RESET_LFSR,
    APIntAttr<I<16>>:$DEBUG_PL_SPARE,
    StrAttr:$DEBUG_TL_DISABLE_FC_TIMEOUT,
    StrAttr:$DEBUG_TL_DISABLE_RX_TLP_ORDER_CHECKS,
    APIntAttr<I<16>>:$DEBUG_TL_SPARE,
    APIntAttr<I<8>>:$DNSTREAM_LINK_NUM,
    StrAttr:$DSN_CAP_ENABLE,
    StrAttr:$EXTENDED_CFG_EXTEND_INTERFACE_ENABLE,
    StrAttr:$HEADER_TYPE_OVERRIDE,
    StrAttr:$IS_SWITCH_PORT,
    StrAttr:$LEGACY_CFG_EXTEND_INTERFACE_ENABLE,
    APIntAttr<I<9>>:$LL_ACK_TIMEOUT,
    StrAttr:$LL_ACK_TIMEOUT_EN,
    SI64Attr:$LL_ACK_TIMEOUT_FUNC,
    StrAttr:$LL_DISABLE_SCHED_TX_NAK,
    StrAttr:$LL_REPLAY_FROM_RAM_PIPELINE,
    APIntAttr<I<9>>:$LL_REPLAY_TIMEOUT,
    StrAttr:$LL_REPLAY_TIMEOUT_EN,
    SI64Attr:$LL_REPLAY_TIMEOUT_FUNC,
    StrAttr:$LL_REPLAY_TO_RAM_PIPELINE,
    StrAttr:$LL_RX_TLP_PARITY_GEN,
    StrAttr:$LL_TX_TLP_PARITY_CHK,
    APIntAttr<I<16>>:$LL_USER_SPARE,
    APIntAttr<I<10>>:$LTR_TX_MESSAGE_MINIMUM_INTERVAL,
    StrAttr:$LTR_TX_MESSAGE_ON_FUNC_POWER_STATE_CHANGE,
    StrAttr:$LTR_TX_MESSAGE_ON_LTR_ENABLE,
    APIntAttr<I<12>>:$MCAP_CAP_NEXTPTR,
    StrAttr:$MCAP_CONFIGURE_OVERRIDE,
    StrAttr:$MCAP_ENABLE,
    StrAttr:$MCAP_EOS_DESIGN_SWITCH,
    APIntAttr<I<32>>:$MCAP_FPGA_BITSTREAM_VERSION,
    StrAttr:$MCAP_GATE_IO_ENABLE_DESIGN_SWITCH,
    StrAttr:$MCAP_GATE_MEM_ENABLE_DESIGN_SWITCH,
    StrAttr:$MCAP_INPUT_GATE_DESIGN_SWITCH,
    StrAttr:$MCAP_INTERRUPT_ON_MCAP_EOS,
    StrAttr:$MCAP_INTERRUPT_ON_MCAP_ERROR,
    APIntAttr<I<16>>:$MCAP_VSEC_ID,
    APIntAttr<I<12>>:$MCAP_VSEC_LEN,
    APIntAttr<I<4>>:$MCAP_VSEC_REV,
    StrAttr:$PF0_AER_CAP_ECRC_GEN_AND_CHECK_CAPABLE,
    APIntAttr<I<12>>:$PF0_AER_CAP_NEXTPTR,
    APIntAttr<I<12>>:$PF0_ARI_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF0_ARI_CAP_NEXT_FUNC,
    APIntAttr<I<4>>:$PF0_ARI_CAP_VER,
    APIntAttr<I<5>>:$PF0_ATS_CAP_INV_QUEUE_DEPTH,
    APIntAttr<I<12>>:$PF0_ATS_CAP_NEXTPTR,
    StrAttr:$PF0_ATS_CAP_ON,
    APIntAttr<I<6>>:$PF0_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF0_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR1_CONTROL,
    APIntAttr<I<6>>:$PF0_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF0_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR3_CONTROL,
    APIntAttr<I<6>>:$PF0_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF0_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR5_CONTROL,
    APIntAttr<I<8>>:$PF0_CAPABILITY_POINTER,
    APIntAttr<I<24>>:$PF0_CLASS_CODE,
    StrAttr:$PF0_DEV_CAP2_128B_CAS_ATOMIC_COMPLETER_SUPPORT,
    StrAttr:$PF0_DEV_CAP2_32B_ATOMIC_COMPLETER_SUPPORT,
    StrAttr:$PF0_DEV_CAP2_64B_ATOMIC_COMPLETER_SUPPORT,
    StrAttr:$PF0_DEV_CAP2_ARI_FORWARD_ENABLE,
    StrAttr:$PF0_DEV_CAP2_CPL_TIMEOUT_DISABLE,
    StrAttr:$PF0_DEV_CAP2_LTR_SUPPORT,
    APIntAttr<I<2>>:$PF0_DEV_CAP2_OBFF_SUPPORT,
    StrAttr:$PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT,
    SI64Attr:$PF0_DEV_CAP_ENDPOINT_L0S_LATENCY,
    SI64Attr:$PF0_DEV_CAP_ENDPOINT_L1_LATENCY,
    StrAttr:$PF0_DEV_CAP_EXT_TAG_SUPPORTED,
    StrAttr:$PF0_DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE,
    APIntAttr<I<3>>:$PF0_DEV_CAP_MAX_PAYLOAD_SIZE,
    APIntAttr<I<12>>:$PF0_DSN_CAP_NEXTPTR,
    APIntAttr<I<5>>:$PF0_EXPANSION_ROM_APERTURE_SIZE,
    StrAttr:$PF0_EXPANSION_ROM_ENABLE,
    APIntAttr<I<3>>:$PF0_INTERRUPT_PIN,
    SI64Attr:$PF0_LINK_CAP_ASPM_SUPPORT,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN1,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN2,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN3,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN4,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN1,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN2,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN3,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN4,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN1,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN2,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN3,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN4,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_GEN1,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_GEN2,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_GEN3,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_GEN4,
    APIntAttr<I<1>>:$PF0_LINK_CONTROL_RCB,
    StrAttr:$PF0_LINK_STATUS_SLOT_CLOCK_CONFIG,
    APIntAttr<I<10>>:$PF0_LTR_CAP_MAX_NOSNOOP_LAT,
    APIntAttr<I<10>>:$PF0_LTR_CAP_MAX_SNOOP_LAT,
    APIntAttr<I<12>>:$PF0_LTR_CAP_NEXTPTR,
    APIntAttr<I<4>>:$PF0_LTR_CAP_VER,
    APIntAttr<I<8>>:$PF0_MSIX_CAP_NEXTPTR,
    SI64Attr:$PF0_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$PF0_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$PF0_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$PF0_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$PF0_MSIX_CAP_TABLE_SIZE,
    APIntAttr<I<6>>:$PF0_MSIX_VECTOR_COUNT,
    SI64Attr:$PF0_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$PF0_MSI_CAP_NEXTPTR,
    StrAttr:$PF0_MSI_CAP_PERVECMASKCAP,
    APIntAttr<I<8>>:$PF0_PCIE_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF0_PM_CAP_ID,
    APIntAttr<I<8>>:$PF0_PM_CAP_NEXTPTR,
    StrAttr:$PF0_PM_CAP_PMESUPPORT_D0,
    StrAttr:$PF0_PM_CAP_PMESUPPORT_D1,
    StrAttr:$PF0_PM_CAP_PMESUPPORT_D3HOT,
    StrAttr:$PF0_PM_CAP_SUPP_D1_STATE,
    APIntAttr<I<3>>:$PF0_PM_CAP_VER_ID,
    StrAttr:$PF0_PM_CSR_NOSOFTRESET,
    APIntAttr<I<12>>:$PF0_PRI_CAP_NEXTPTR,
    StrAttr:$PF0_PRI_CAP_ON,
    APIntAttr<I<32>>:$PF0_PRI_OST_PR_CAPACITY,
    APIntAttr<I<12>>:$PF0_SECONDARY_PCIE_CAP_NEXTPTR,
    StrAttr:$PF0_SRIOV_ARI_CAPBL_HIER_PRESERVED,
    APIntAttr<I<6>>:$PF0_SRIOV_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF0_SRIOV_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR1_CONTROL,
    APIntAttr<I<6>>:$PF0_SRIOV_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF0_SRIOV_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR3_CONTROL,
    APIntAttr<I<6>>:$PF0_SRIOV_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF0_SRIOV_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR5_CONTROL,
    APIntAttr<I<16>>:$PF0_SRIOV_CAP_INITIAL_VF,
    APIntAttr<I<12>>:$PF0_SRIOV_CAP_NEXTPTR,
    APIntAttr<I<16>>:$PF0_SRIOV_CAP_TOTAL_VF,
    APIntAttr<I<4>>:$PF0_SRIOV_CAP_VER,
    APIntAttr<I<16>>:$PF0_SRIOV_FIRST_VF_OFFSET,
    APIntAttr<I<16>>:$PF0_SRIOV_FUNC_DEP_LINK,
    APIntAttr<I<32>>:$PF0_SRIOV_SUPPORTED_PAGE_SIZE,
    APIntAttr<I<16>>:$PF0_SRIOV_VF_DEVICE_ID,
    StrAttr:$PF0_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$PF0_TPHR_CAP_ENABLE,
    StrAttr:$PF0_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$PF0_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$PF0_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$PF0_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$PF0_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$PF0_TPHR_CAP_VER,
    APIntAttr<I<4>>:$PF0_VC_ARB_CAPABILITY,
    APIntAttr<I<8>>:$PF0_VC_ARB_TBL_OFFSET,
    StrAttr:$PF0_VC_CAP_ENABLE,
    APIntAttr<I<12>>:$PF0_VC_CAP_NEXTPTR,
    APIntAttr<I<4>>:$PF0_VC_CAP_VER,
    StrAttr:$PF0_VC_EXTENDED_COUNT,
    StrAttr:$PF0_VC_LOW_PRIORITY_EXTENDED_COUNT,
    APIntAttr<I<12>>:$PF1_AER_CAP_NEXTPTR,
    APIntAttr<I<12>>:$PF1_ARI_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF1_ARI_CAP_NEXT_FUNC,
    APIntAttr<I<5>>:$PF1_ATS_CAP_INV_QUEUE_DEPTH,
    APIntAttr<I<12>>:$PF1_ATS_CAP_NEXTPTR,
    StrAttr:$PF1_ATS_CAP_ON,
    APIntAttr<I<6>>:$PF1_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF1_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR1_CONTROL,
    APIntAttr<I<6>>:$PF1_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF1_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR3_CONTROL,
    APIntAttr<I<6>>:$PF1_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF1_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR5_CONTROL,
    APIntAttr<I<8>>:$PF1_CAPABILITY_POINTER,
    APIntAttr<I<24>>:$PF1_CLASS_CODE,
    APIntAttr<I<3>>:$PF1_DEV_CAP_MAX_PAYLOAD_SIZE,
    APIntAttr<I<12>>:$PF1_DSN_CAP_NEXTPTR,
    APIntAttr<I<5>>:$PF1_EXPANSION_ROM_APERTURE_SIZE,
    StrAttr:$PF1_EXPANSION_ROM_ENABLE,
    APIntAttr<I<3>>:$PF1_INTERRUPT_PIN,
    APIntAttr<I<8>>:$PF1_MSIX_CAP_NEXTPTR,
    SI64Attr:$PF1_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$PF1_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$PF1_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$PF1_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$PF1_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$PF1_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$PF1_MSI_CAP_NEXTPTR,
    StrAttr:$PF1_MSI_CAP_PERVECMASKCAP,
    APIntAttr<I<8>>:$PF1_PCIE_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF1_PM_CAP_NEXTPTR,
    APIntAttr<I<12>>:$PF1_PRI_CAP_NEXTPTR,
    StrAttr:$PF1_PRI_CAP_ON,
    APIntAttr<I<32>>:$PF1_PRI_OST_PR_CAPACITY,
    StrAttr:$PF1_SRIOV_ARI_CAPBL_HIER_PRESERVED,
    APIntAttr<I<6>>:$PF1_SRIOV_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF1_SRIOV_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR1_CONTROL,
    APIntAttr<I<6>>:$PF1_SRIOV_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF1_SRIOV_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR3_CONTROL,
    APIntAttr<I<6>>:$PF1_SRIOV_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF1_SRIOV_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR5_CONTROL,
    APIntAttr<I<16>>:$PF1_SRIOV_CAP_INITIAL_VF,
    APIntAttr<I<12>>:$PF1_SRIOV_CAP_NEXTPTR,
    APIntAttr<I<16>>:$PF1_SRIOV_CAP_TOTAL_VF,
    APIntAttr<I<4>>:$PF1_SRIOV_CAP_VER,
    APIntAttr<I<16>>:$PF1_SRIOV_FIRST_VF_OFFSET,
    APIntAttr<I<16>>:$PF1_SRIOV_FUNC_DEP_LINK,
    APIntAttr<I<32>>:$PF1_SRIOV_SUPPORTED_PAGE_SIZE,
    APIntAttr<I<16>>:$PF1_SRIOV_VF_DEVICE_ID,
    APIntAttr<I<12>>:$PF1_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$PF1_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<12>>:$PF2_AER_CAP_NEXTPTR,
    APIntAttr<I<12>>:$PF2_ARI_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF2_ARI_CAP_NEXT_FUNC,
    APIntAttr<I<5>>:$PF2_ATS_CAP_INV_QUEUE_DEPTH,
    APIntAttr<I<12>>:$PF2_ATS_CAP_NEXTPTR,
    StrAttr:$PF2_ATS_CAP_ON,
    APIntAttr<I<6>>:$PF2_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF2_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_BAR1_CONTROL,
    APIntAttr<I<6>>:$PF2_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF2_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_BAR3_CONTROL,
    APIntAttr<I<6>>:$PF2_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF2_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_BAR5_CONTROL,
    APIntAttr<I<8>>:$PF2_CAPABILITY_POINTER,
    APIntAttr<I<24>>:$PF2_CLASS_CODE,
    APIntAttr<I<3>>:$PF2_DEV_CAP_MAX_PAYLOAD_SIZE,
    APIntAttr<I<12>>:$PF2_DSN_CAP_NEXTPTR,
    APIntAttr<I<5>>:$PF2_EXPANSION_ROM_APERTURE_SIZE,
    StrAttr:$PF2_EXPANSION_ROM_ENABLE,
    APIntAttr<I<3>>:$PF2_INTERRUPT_PIN,
    APIntAttr<I<8>>:$PF2_MSIX_CAP_NEXTPTR,
    SI64Attr:$PF2_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$PF2_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$PF2_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$PF2_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$PF2_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$PF2_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$PF2_MSI_CAP_NEXTPTR,
    StrAttr:$PF2_MSI_CAP_PERVECMASKCAP,
    APIntAttr<I<8>>:$PF2_PCIE_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF2_PM_CAP_NEXTPTR,
    APIntAttr<I<12>>:$PF2_PRI_CAP_NEXTPTR,
    StrAttr:$PF2_PRI_CAP_ON,
    APIntAttr<I<32>>:$PF2_PRI_OST_PR_CAPACITY,
    StrAttr:$PF2_SRIOV_ARI_CAPBL_HIER_PRESERVED,
    APIntAttr<I<6>>:$PF2_SRIOV_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_SRIOV_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF2_SRIOV_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_SRIOV_BAR1_CONTROL,
    APIntAttr<I<6>>:$PF2_SRIOV_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_SRIOV_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF2_SRIOV_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_SRIOV_BAR3_CONTROL,
    APIntAttr<I<6>>:$PF2_SRIOV_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_SRIOV_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF2_SRIOV_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_SRIOV_BAR5_CONTROL,
    APIntAttr<I<16>>:$PF2_SRIOV_CAP_INITIAL_VF,
    APIntAttr<I<12>>:$PF2_SRIOV_CAP_NEXTPTR,
    APIntAttr<I<16>>:$PF2_SRIOV_CAP_TOTAL_VF,
    APIntAttr<I<4>>:$PF2_SRIOV_CAP_VER,
    APIntAttr<I<16>>:$PF2_SRIOV_FIRST_VF_OFFSET,
    APIntAttr<I<16>>:$PF2_SRIOV_FUNC_DEP_LINK,
    APIntAttr<I<32>>:$PF2_SRIOV_SUPPORTED_PAGE_SIZE,
    APIntAttr<I<16>>:$PF2_SRIOV_VF_DEVICE_ID,
    APIntAttr<I<12>>:$PF2_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$PF2_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<12>>:$PF3_AER_CAP_NEXTPTR,
    APIntAttr<I<12>>:$PF3_ARI_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF3_ARI_CAP_NEXT_FUNC,
    APIntAttr<I<5>>:$PF3_ATS_CAP_INV_QUEUE_DEPTH,
    APIntAttr<I<12>>:$PF3_ATS_CAP_NEXTPTR,
    StrAttr:$PF3_ATS_CAP_ON,
    APIntAttr<I<6>>:$PF3_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF3_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_BAR1_CONTROL,
    APIntAttr<I<6>>:$PF3_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF3_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_BAR3_CONTROL,
    APIntAttr<I<6>>:$PF3_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF3_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_BAR5_CONTROL,
    APIntAttr<I<8>>:$PF3_CAPABILITY_POINTER,
    APIntAttr<I<24>>:$PF3_CLASS_CODE,
    APIntAttr<I<3>>:$PF3_DEV_CAP_MAX_PAYLOAD_SIZE,
    APIntAttr<I<12>>:$PF3_DSN_CAP_NEXTPTR,
    APIntAttr<I<5>>:$PF3_EXPANSION_ROM_APERTURE_SIZE,
    StrAttr:$PF3_EXPANSION_ROM_ENABLE,
    APIntAttr<I<3>>:$PF3_INTERRUPT_PIN,
    APIntAttr<I<8>>:$PF3_MSIX_CAP_NEXTPTR,
    SI64Attr:$PF3_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$PF3_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$PF3_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$PF3_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$PF3_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$PF3_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$PF3_MSI_CAP_NEXTPTR,
    StrAttr:$PF3_MSI_CAP_PERVECMASKCAP,
    APIntAttr<I<8>>:$PF3_PCIE_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF3_PM_CAP_NEXTPTR,
    APIntAttr<I<12>>:$PF3_PRI_CAP_NEXTPTR,
    StrAttr:$PF3_PRI_CAP_ON,
    APIntAttr<I<32>>:$PF3_PRI_OST_PR_CAPACITY,
    StrAttr:$PF3_SRIOV_ARI_CAPBL_HIER_PRESERVED,
    APIntAttr<I<6>>:$PF3_SRIOV_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_SRIOV_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF3_SRIOV_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_SRIOV_BAR1_CONTROL,
    APIntAttr<I<6>>:$PF3_SRIOV_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_SRIOV_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF3_SRIOV_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_SRIOV_BAR3_CONTROL,
    APIntAttr<I<6>>:$PF3_SRIOV_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_SRIOV_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF3_SRIOV_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_SRIOV_BAR5_CONTROL,
    APIntAttr<I<16>>:$PF3_SRIOV_CAP_INITIAL_VF,
    APIntAttr<I<12>>:$PF3_SRIOV_CAP_NEXTPTR,
    APIntAttr<I<16>>:$PF3_SRIOV_CAP_TOTAL_VF,
    APIntAttr<I<4>>:$PF3_SRIOV_CAP_VER,
    APIntAttr<I<16>>:$PF3_SRIOV_FIRST_VF_OFFSET,
    APIntAttr<I<16>>:$PF3_SRIOV_FUNC_DEP_LINK,
    APIntAttr<I<32>>:$PF3_SRIOV_SUPPORTED_PAGE_SIZE,
    APIntAttr<I<16>>:$PF3_SRIOV_VF_DEVICE_ID,
    APIntAttr<I<12>>:$PF3_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$PF3_TPHR_CAP_ST_MODE_SEL,
    StrAttr:$PL_CFG_STATE_ROBUSTNESS_ENABLE,
    StrAttr:$PL_CTRL_SKP_GEN_ENABLE,
    StrAttr:$PL_CTRL_SKP_PARITY_AND_CRC_CHECK_DISABLE,
    StrAttr:$PL_DEEMPH_SOURCE_SELECT,
    StrAttr:$PL_DESKEW_ON_SKIP_IN_GEN12,
    StrAttr:$PL_DISABLE_AUTO_EQ_SPEED_CHANGE_TO_GEN3,
    StrAttr:$PL_DISABLE_AUTO_EQ_SPEED_CHANGE_TO_GEN4,
    StrAttr:$PL_DISABLE_AUTO_SPEED_CHANGE_TO_GEN2,
    StrAttr:$PL_DISABLE_DC_BALANCE,
    StrAttr:$PL_DISABLE_EI_INFER_IN_L0,
    StrAttr:$PL_DISABLE_LANE_REVERSAL,
    APIntAttr<I<2>>:$PL_DISABLE_LFSR_UPDATE_ON_SKP,
    StrAttr:$PL_DISABLE_RETRAIN_ON_EB_ERROR,
    StrAttr:$PL_DISABLE_RETRAIN_ON_FRAMING_ERROR,
    APIntAttr<I<16>>:$PL_DISABLE_RETRAIN_ON_SPECIFIC_FRAMING_ERROR,
    StrAttr:$PL_DISABLE_UPCONFIG_CAPABLE,
    APIntAttr<I<2>>:$PL_EQ_ADAPT_DISABLE_COEFF_CHECK,
    APIntAttr<I<2>>:$PL_EQ_ADAPT_DISABLE_PRESET_CHECK,
    APIntAttr<I<5>>:$PL_EQ_ADAPT_ITER_COUNT,
    APIntAttr<I<2>>:$PL_EQ_ADAPT_REJECT_RETRY_COUNT,
    APIntAttr<I<2>>:$PL_EQ_BYPASS_PHASE23,
    APIntAttr<I<6>>:$PL_EQ_DEFAULT_RX_PRESET_HINT,
    APIntAttr<I<8>>:$PL_EQ_DEFAULT_TX_PRESET,
    StrAttr:$PL_EQ_DISABLE_MISMATCH_CHECK,
    APIntAttr<I<2>>:$PL_EQ_RX_ADAPT_EQ_PHASE0,
    APIntAttr<I<2>>:$PL_EQ_RX_ADAPT_EQ_PHASE1,
    StrAttr:$PL_EQ_SHORT_ADAPT_PHASE,
    StrAttr:$PL_EQ_TX_8G_EQ_TS2_ENABLE,
    StrAttr:$PL_EXIT_LOOPBACK_ON_EI_ENTRY,
    StrAttr:$PL_INFER_EI_DISABLE_LPBK_ACTIVE,
    StrAttr:$PL_INFER_EI_DISABLE_REC_RC,
    StrAttr:$PL_INFER_EI_DISABLE_REC_SPD,
    APIntAttr<I<32>>:$PL_LANE0_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE10_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE11_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE12_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE13_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE14_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE15_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE1_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE2_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE3_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE4_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE5_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE6_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE7_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE8_EQ_CONTROL,
    APIntAttr<I<32>>:$PL_LANE9_EQ_CONTROL,
    APIntAttr<I<4>>:$PL_LINK_CAP_MAX_LINK_SPEED,
    APIntAttr<I<5>>:$PL_LINK_CAP_MAX_LINK_WIDTH,
    SI64Attr:$PL_N_FTS,
    StrAttr:$PL_QUIESCE_GUARANTEE_DISABLE,
    StrAttr:$PL_REDO_EQ_SOURCE_SELECT,
    APIntAttr<I<8>>:$PL_REPORT_ALL_PHY_ERRORS,
    APIntAttr<I<2>>:$PL_RX_ADAPT_TIMER_CLWS_CLOBBER_TX_TS,
    APIntAttr<I<4>>:$PL_RX_ADAPT_TIMER_CLWS_GEN3,
    APIntAttr<I<4>>:$PL_RX_ADAPT_TIMER_CLWS_GEN4,
    APIntAttr<I<2>>:$PL_RX_ADAPT_TIMER_RRL_CLOBBER_TX_TS,
    APIntAttr<I<4>>:$PL_RX_ADAPT_TIMER_RRL_GEN3,
    APIntAttr<I<4>>:$PL_RX_ADAPT_TIMER_RRL_GEN4,
    APIntAttr<I<2>>:$PL_RX_L0S_EXIT_TO_RECOVERY,
    APIntAttr<I<2>>:$PL_SIM_FAST_LINK_TRAINING,
    StrAttr:$PL_SRIS_ENABLE,
    APIntAttr<I<7>>:$PL_SRIS_SKPOS_GEN_SPD_VEC,
    APIntAttr<I<7>>:$PL_SRIS_SKPOS_REC_SPD_VEC,
    StrAttr:$PL_UPSTREAM_FACING,
    APIntAttr<I<16>>:$PL_USER_SPARE,
    APIntAttr<I<16>>:$PL_USER_SPARE2,
    APIntAttr<I<16>>:$PM_ASPML0S_TIMEOUT,
    APIntAttr<I<20>>:$PM_ASPML1_ENTRY_DELAY,
    StrAttr:$PM_ENABLE_L23_ENTRY,
    StrAttr:$PM_ENABLE_SLOT_POWER_CAPTURE,
    APIntAttr<I<32>>:$PM_L1_REENTRY_DELAY,
    APIntAttr<I<20>>:$PM_PME_SERVICE_TIMEOUT_DELAY,
    APIntAttr<I<16>>:$PM_PME_TURNOFF_ACK_DELAY,
    StrAttr:$SIM_DEVICE,
    APIntAttr<I<32>>:$SIM_JTAG_IDCODE,
    StrAttr:$SIM_VERSION,
    StrAttr:$SPARE_BIT0,
    SI64Attr:$SPARE_BIT1,
    SI64Attr:$SPARE_BIT2,
    StrAttr:$SPARE_BIT3,
    SI64Attr:$SPARE_BIT4,
    SI64Attr:$SPARE_BIT5,
    SI64Attr:$SPARE_BIT6,
    SI64Attr:$SPARE_BIT7,
    SI64Attr:$SPARE_BIT8,
    APIntAttr<I<8>>:$SPARE_BYTE0,
    APIntAttr<I<8>>:$SPARE_BYTE1,
    APIntAttr<I<8>>:$SPARE_BYTE2,
    APIntAttr<I<8>>:$SPARE_BYTE3,
    APIntAttr<I<32>>:$SPARE_WORD0,
    APIntAttr<I<32>>:$SPARE_WORD1,
    APIntAttr<I<32>>:$SPARE_WORD2,
    APIntAttr<I<32>>:$SPARE_WORD3,
    APIntAttr<I<4>>:$SRIOV_CAP_ENABLE,
    StrAttr:$TL2CFG_IF_PARITY_CHK,
    APIntAttr<I<2>>:$TL_COMPLETION_RAM_NUM_TLPS,
    APIntAttr<I<2>>:$TL_COMPLETION_RAM_SIZE,
    APIntAttr<I<12>>:$TL_CREDITS_CD,
    APIntAttr<I<12>>:$TL_CREDITS_CD_VC1,
    APIntAttr<I<8>>:$TL_CREDITS_CH,
    APIntAttr<I<8>>:$TL_CREDITS_CH_VC1,
    APIntAttr<I<12>>:$TL_CREDITS_NPD,
    APIntAttr<I<12>>:$TL_CREDITS_NPD_VC1,
    APIntAttr<I<8>>:$TL_CREDITS_NPH,
    APIntAttr<I<8>>:$TL_CREDITS_NPH_VC1,
    APIntAttr<I<12>>:$TL_CREDITS_PD,
    APIntAttr<I<12>>:$TL_CREDITS_PD_VC1,
    APIntAttr<I<8>>:$TL_CREDITS_PH,
    APIntAttr<I<8>>:$TL_CREDITS_PH_VC1,
    APIntAttr<I<5>>:$TL_FC_UPDATE_MIN_INTERVAL_TIME,
    APIntAttr<I<5>>:$TL_FC_UPDATE_MIN_INTERVAL_TIME_VC1,
    APIntAttr<I<5>>:$TL_FC_UPDATE_MIN_INTERVAL_TLP_COUNT,
    APIntAttr<I<5>>:$TL_FC_UPDATE_MIN_INTERVAL_TLP_COUNT_VC1,
    StrAttr:$TL_FEATURE_ENABLE_FC_SCALING,
    APIntAttr<I<2>>:$TL_PF_ENABLE_REG,
    APIntAttr<I<1>>:$TL_POSTED_RAM_SIZE,
    StrAttr:$TL_RX_COMPLETION_FROM_RAM_READ_PIPELINE,
    StrAttr:$TL_RX_COMPLETION_TO_RAM_READ_PIPELINE,
    StrAttr:$TL_RX_COMPLETION_TO_RAM_WRITE_PIPELINE,
    StrAttr:$TL_RX_POSTED_FROM_RAM_READ_PIPELINE,
    StrAttr:$TL_RX_POSTED_TO_RAM_READ_PIPELINE,
    StrAttr:$TL_RX_POSTED_TO_RAM_WRITE_PIPELINE,
    StrAttr:$TL_TX_MUX_STRICT_PRIORITY,
    StrAttr:$TL_TX_TLP_STRADDLE_ENABLE,
    StrAttr:$TL_TX_TLP_TERMINATE_PARITY,
    APIntAttr<I<16>>:$TL_USER_SPARE,
    StrAttr:$TPH_FROM_RAM_PIPELINE,
    StrAttr:$TPH_TO_RAM_PIPELINE,
    APIntAttr<I<8>>:$VF0_CAPABILITY_POINTER,
    APIntAttr<I<12>>:$VFG0_ARI_CAP_NEXTPTR,
    APIntAttr<I<5>>:$VFG0_ATS_CAP_INV_QUEUE_DEPTH,
    APIntAttr<I<12>>:$VFG0_ATS_CAP_NEXTPTR,
    StrAttr:$VFG0_ATS_CAP_ON,
    APIntAttr<I<8>>:$VFG0_MSIX_CAP_NEXTPTR,
    SI64Attr:$VFG0_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VFG0_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VFG0_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VFG0_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VFG0_MSIX_CAP_TABLE_SIZE,
    APIntAttr<I<8>>:$VFG0_PCIE_CAP_NEXTPTR,
    APIntAttr<I<12>>:$VFG0_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VFG0_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<12>>:$VFG1_ARI_CAP_NEXTPTR,
    APIntAttr<I<5>>:$VFG1_ATS_CAP_INV_QUEUE_DEPTH,
    APIntAttr<I<12>>:$VFG1_ATS_CAP_NEXTPTR,
    StrAttr:$VFG1_ATS_CAP_ON,
    APIntAttr<I<8>>:$VFG1_MSIX_CAP_NEXTPTR,
    SI64Attr:$VFG1_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VFG1_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VFG1_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VFG1_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VFG1_MSIX_CAP_TABLE_SIZE,
    APIntAttr<I<8>>:$VFG1_PCIE_CAP_NEXTPTR,
    APIntAttr<I<12>>:$VFG1_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VFG1_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<12>>:$VFG2_ARI_CAP_NEXTPTR,
    APIntAttr<I<5>>:$VFG2_ATS_CAP_INV_QUEUE_DEPTH,
    APIntAttr<I<12>>:$VFG2_ATS_CAP_NEXTPTR,
    StrAttr:$VFG2_ATS_CAP_ON,
    APIntAttr<I<8>>:$VFG2_MSIX_CAP_NEXTPTR,
    SI64Attr:$VFG2_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VFG2_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VFG2_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VFG2_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VFG2_MSIX_CAP_TABLE_SIZE,
    APIntAttr<I<8>>:$VFG2_PCIE_CAP_NEXTPTR,
    APIntAttr<I<12>>:$VFG2_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VFG2_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<12>>:$VFG3_ARI_CAP_NEXTPTR,
    APIntAttr<I<5>>:$VFG3_ATS_CAP_INV_QUEUE_DEPTH,
    APIntAttr<I<12>>:$VFG3_ATS_CAP_NEXTPTR,
    StrAttr:$VFG3_ATS_CAP_ON,
    APIntAttr<I<8>>:$VFG3_MSIX_CAP_NEXTPTR,
    SI64Attr:$VFG3_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VFG3_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VFG3_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VFG3_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VFG3_MSIX_CAP_TABLE_SIZE,
    APIntAttr<I<8>>:$VFG3_PCIE_CAP_NEXTPTR,
    APIntAttr<I<12>>:$VFG3_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VFG3_TPHR_CAP_ST_MODE_SEL
  );

  let results = (outs
    I<8>:$AXIUSEROUT,
    I<1>:$CCIXTXCREDIT,
    I<8>:$CFGBUSNUMBER,
    I<2>:$CFGCURRENTSPEED,
    I<1>:$CFGERRCOROUT,
    I<1>:$CFGERRFATALOUT,
    I<1>:$CFGERRNONFATALOUT,
    I<8>:$CFGEXTFUNCTIONNUMBER,
    I<1>:$CFGEXTREADRECEIVED,
    I<10>:$CFGEXTREGISTERNUMBER,
    I<4>:$CFGEXTWRITEBYTEENABLE,
    I<32>:$CFGEXTWRITEDATA,
    I<1>:$CFGEXTWRITERECEIVED,
    I<12>:$CFGFCCPLD,
    I<8>:$CFGFCCPLH,
    I<12>:$CFGFCNPD,
    I<8>:$CFGFCNPH,
    I<12>:$CFGFCPD,
    I<8>:$CFGFCPH,
    I<4>:$CFGFLRINPROCESS,
    I<12>:$CFGFUNCTIONPOWERSTATE,
    I<16>:$CFGFUNCTIONSTATUS,
    I<1>:$CFGHOTRESETOUT,
    I<32>:$CFGINTERRUPTMSIDATA,
    I<4>:$CFGINTERRUPTMSIENABLE,
    I<1>:$CFGINTERRUPTMSIFAIL,
    I<1>:$CFGINTERRUPTMSIMASKUPDATE,
    I<12>:$CFGINTERRUPTMSIMMENABLE,
    I<1>:$CFGINTERRUPTMSISENT,
    I<4>:$CFGINTERRUPTMSIXENABLE,
    I<4>:$CFGINTERRUPTMSIXMASK,
    I<1>:$CFGINTERRUPTMSIXVECPENDINGSTATUS,
    I<1>:$CFGINTERRUPTSENT,
    I<2>:$CFGLINKPOWERSTATE,
    I<5>:$CFGLOCALERROROUT,
    I<1>:$CFGLOCALERRORVALID,
    I<1>:$CFGLTRENABLE,
    I<6>:$CFGLTSSMSTATE,
    I<2>:$CFGMAXPAYLOAD,
    I<3>:$CFGMAXREADREQ,
    I<32>:$CFGMGMTREADDATA,
    I<1>:$CFGMGMTREADWRITEDONE,
    I<1>:$CFGMSGRECEIVED,
    I<8>:$CFGMSGRECEIVEDDATA,
    I<5>:$CFGMSGRECEIVEDTYPE,
    I<1>:$CFGMSGTRANSMITDONE,
    I<13>:$CFGMSIXRAMADDRESS,
    I<1>:$CFGMSIXRAMREADENABLE,
    I<4>:$CFGMSIXRAMWRITEBYTEENABLE,
    I<36>:$CFGMSIXRAMWRITEDATA,
    I<3>:$CFGNEGOTIATEDWIDTH,
    I<2>:$CFGOBFFENABLE,
    I<1>:$CFGPHYLINKDOWN,
    I<2>:$CFGPHYLINKSTATUS,
    I<1>:$CFGPLSTATUSCHANGE,
    I<1>:$CFGPOWERSTATECHANGEINTERRUPT,
    I<4>:$CFGRCBSTATUS,
    I<2>:$CFGRXPMSTATE,
    I<12>:$CFGTPHRAMADDRESS,
    I<1>:$CFGTPHRAMREADENABLE,
    I<4>:$CFGTPHRAMWRITEBYTEENABLE,
    I<36>:$CFGTPHRAMWRITEDATA,
    I<4>:$CFGTPHREQUESTERENABLE,
    I<12>:$CFGTPHSTMODE,
    I<2>:$CFGTXPMSTATE,
    I<1>:$CFGVC1ENABLE,
    I<1>:$CFGVC1NEGOTIATIONPENDING,
    I<1>:$CONFMCAPDESIGNSWITCH,
    I<1>:$CONFMCAPEOS,
    I<1>:$CONFMCAPINUSEBYPCIE,
    I<1>:$CONFREQREADY,
    I<32>:$CONFRESPRDATA,
    I<1>:$CONFRESPVALID,
    I<130>:$DBGCCIXOUT,
    I<32>:$DBGCTRL0OUT,
    I<32>:$DBGCTRL1OUT,
    I<256>:$DBGDATA0OUT,
    I<256>:$DBGDATA1OUT,
    I<16>:$DRPDO,
    I<1>:$DRPRDY,
    I<46>:$MAXISCCIXRXTUSER,
    I<1>:$MAXISCCIXRXTVALID,
    I<256>:$MAXISCQTDATA,
    I<8>:$MAXISCQTKEEP,
    I<1>:$MAXISCQTLAST,
    I<88>:$MAXISCQTUSER,
    I<1>:$MAXISCQTVALID,
    I<256>:$MAXISRCTDATA,
    I<8>:$MAXISRCTKEEP,
    I<1>:$MAXISRCTLAST,
    I<75>:$MAXISRCTUSER,
    I<1>:$MAXISRCTVALID,
    I<9>:$MIREPLAYRAMADDRESS0,
    I<9>:$MIREPLAYRAMADDRESS1,
    I<1>:$MIREPLAYRAMREADENABLE0,
    I<1>:$MIREPLAYRAMREADENABLE1,
    I<128>:$MIREPLAYRAMWRITEDATA0,
    I<128>:$MIREPLAYRAMWRITEDATA1,
    I<1>:$MIREPLAYRAMWRITEENABLE0,
    I<1>:$MIREPLAYRAMWRITEENABLE1,
    I<9>:$MIRXCOMPLETIONRAMREADADDRESS0,
    I<9>:$MIRXCOMPLETIONRAMREADADDRESS1,
    I<2>:$MIRXCOMPLETIONRAMREADENABLE0,
    I<2>:$MIRXCOMPLETIONRAMREADENABLE1,
    I<9>:$MIRXCOMPLETIONRAMWRITEADDRESS0,
    I<9>:$MIRXCOMPLETIONRAMWRITEADDRESS1,
    I<144>:$MIRXCOMPLETIONRAMWRITEDATA0,
    I<144>:$MIRXCOMPLETIONRAMWRITEDATA1,
    I<2>:$MIRXCOMPLETIONRAMWRITEENABLE0,
    I<2>:$MIRXCOMPLETIONRAMWRITEENABLE1,
    I<9>:$MIRXPOSTEDREQUESTRAMREADADDRESS0,
    I<9>:$MIRXPOSTEDREQUESTRAMREADADDRESS1,
    I<1>:$MIRXPOSTEDREQUESTRAMREADENABLE0,
    I<1>:$MIRXPOSTEDREQUESTRAMREADENABLE1,
    I<9>:$MIRXPOSTEDREQUESTRAMWRITEADDRESS0,
    I<9>:$MIRXPOSTEDREQUESTRAMWRITEADDRESS1,
    I<144>:$MIRXPOSTEDREQUESTRAMWRITEDATA0,
    I<144>:$MIRXPOSTEDREQUESTRAMWRITEDATA1,
    I<1>:$MIRXPOSTEDREQUESTRAMWRITEENABLE0,
    I<1>:$MIRXPOSTEDREQUESTRAMWRITEENABLE1,
    I<6>:$PCIECQNPREQCOUNT,
    I<1>:$PCIEPERST0B,
    I<1>:$PCIEPERST1B,
    I<6>:$PCIERQSEQNUM0,
    I<6>:$PCIERQSEQNUM1,
    I<1>:$PCIERQSEQNUMVLD0,
    I<1>:$PCIERQSEQNUMVLD1,
    I<8>:$PCIERQTAG0,
    I<8>:$PCIERQTAG1,
    I<4>:$PCIERQTAGAV,
    I<1>:$PCIERQTAGVLD0,
    I<1>:$PCIERQTAGVLD1,
    I<4>:$PCIETFCNPDAV,
    I<4>:$PCIETFCNPHAV,
    I<2>:$PIPERX00EQCONTROL,
    I<1>:$PIPERX00POLARITY,
    I<2>:$PIPERX01EQCONTROL,
    I<1>:$PIPERX01POLARITY,
    I<2>:$PIPERX02EQCONTROL,
    I<1>:$PIPERX02POLARITY,
    I<2>:$PIPERX03EQCONTROL,
    I<1>:$PIPERX03POLARITY,
    I<2>:$PIPERX04EQCONTROL,
    I<1>:$PIPERX04POLARITY,
    I<2>:$PIPERX05EQCONTROL,
    I<1>:$PIPERX05POLARITY,
    I<2>:$PIPERX06EQCONTROL,
    I<1>:$PIPERX06POLARITY,
    I<2>:$PIPERX07EQCONTROL,
    I<1>:$PIPERX07POLARITY,
    I<2>:$PIPERX08EQCONTROL,
    I<1>:$PIPERX08POLARITY,
    I<2>:$PIPERX09EQCONTROL,
    I<1>:$PIPERX09POLARITY,
    I<2>:$PIPERX10EQCONTROL,
    I<1>:$PIPERX10POLARITY,
    I<2>:$PIPERX11EQCONTROL,
    I<1>:$PIPERX11POLARITY,
    I<2>:$PIPERX12EQCONTROL,
    I<1>:$PIPERX12POLARITY,
    I<2>:$PIPERX13EQCONTROL,
    I<1>:$PIPERX13POLARITY,
    I<2>:$PIPERX14EQCONTROL,
    I<1>:$PIPERX14POLARITY,
    I<2>:$PIPERX15EQCONTROL,
    I<1>:$PIPERX15POLARITY,
    I<6>:$PIPERXEQLPLFFS,
    I<4>:$PIPERXEQLPTXPRESET,
    I<2>:$PIPETX00CHARISK,
    I<1>:$PIPETX00COMPLIANCE,
    I<32>:$PIPETX00DATA,
    I<1>:$PIPETX00DATAVALID,
    I<1>:$PIPETX00ELECIDLE,
    I<2>:$PIPETX00EQCONTROL,
    I<6>:$PIPETX00EQDEEMPH,
    I<2>:$PIPETX00POWERDOWN,
    I<1>:$PIPETX00STARTBLOCK,
    I<2>:$PIPETX00SYNCHEADER,
    I<2>:$PIPETX01CHARISK,
    I<1>:$PIPETX01COMPLIANCE,
    I<32>:$PIPETX01DATA,
    I<1>:$PIPETX01DATAVALID,
    I<1>:$PIPETX01ELECIDLE,
    I<2>:$PIPETX01EQCONTROL,
    I<6>:$PIPETX01EQDEEMPH,
    I<2>:$PIPETX01POWERDOWN,
    I<1>:$PIPETX01STARTBLOCK,
    I<2>:$PIPETX01SYNCHEADER,
    I<2>:$PIPETX02CHARISK,
    I<1>:$PIPETX02COMPLIANCE,
    I<32>:$PIPETX02DATA,
    I<1>:$PIPETX02DATAVALID,
    I<1>:$PIPETX02ELECIDLE,
    I<2>:$PIPETX02EQCONTROL,
    I<6>:$PIPETX02EQDEEMPH,
    I<2>:$PIPETX02POWERDOWN,
    I<1>:$PIPETX02STARTBLOCK,
    I<2>:$PIPETX02SYNCHEADER,
    I<2>:$PIPETX03CHARISK,
    I<1>:$PIPETX03COMPLIANCE,
    I<32>:$PIPETX03DATA,
    I<1>:$PIPETX03DATAVALID,
    I<1>:$PIPETX03ELECIDLE,
    I<2>:$PIPETX03EQCONTROL,
    I<6>:$PIPETX03EQDEEMPH,
    I<2>:$PIPETX03POWERDOWN,
    I<1>:$PIPETX03STARTBLOCK,
    I<2>:$PIPETX03SYNCHEADER,
    I<2>:$PIPETX04CHARISK,
    I<1>:$PIPETX04COMPLIANCE,
    I<32>:$PIPETX04DATA,
    I<1>:$PIPETX04DATAVALID,
    I<1>:$PIPETX04ELECIDLE,
    I<2>:$PIPETX04EQCONTROL,
    I<6>:$PIPETX04EQDEEMPH,
    I<2>:$PIPETX04POWERDOWN,
    I<1>:$PIPETX04STARTBLOCK,
    I<2>:$PIPETX04SYNCHEADER,
    I<2>:$PIPETX05CHARISK,
    I<1>:$PIPETX05COMPLIANCE,
    I<32>:$PIPETX05DATA,
    I<1>:$PIPETX05DATAVALID,
    I<1>:$PIPETX05ELECIDLE,
    I<2>:$PIPETX05EQCONTROL,
    I<6>:$PIPETX05EQDEEMPH,
    I<2>:$PIPETX05POWERDOWN,
    I<1>:$PIPETX05STARTBLOCK,
    I<2>:$PIPETX05SYNCHEADER,
    I<2>:$PIPETX06CHARISK,
    I<1>:$PIPETX06COMPLIANCE,
    I<32>:$PIPETX06DATA,
    I<1>:$PIPETX06DATAVALID,
    I<1>:$PIPETX06ELECIDLE,
    I<2>:$PIPETX06EQCONTROL,
    I<6>:$PIPETX06EQDEEMPH,
    I<2>:$PIPETX06POWERDOWN,
    I<1>:$PIPETX06STARTBLOCK,
    I<2>:$PIPETX06SYNCHEADER,
    I<2>:$PIPETX07CHARISK,
    I<1>:$PIPETX07COMPLIANCE,
    I<32>:$PIPETX07DATA,
    I<1>:$PIPETX07DATAVALID,
    I<1>:$PIPETX07ELECIDLE,
    I<2>:$PIPETX07EQCONTROL,
    I<6>:$PIPETX07EQDEEMPH,
    I<2>:$PIPETX07POWERDOWN,
    I<1>:$PIPETX07STARTBLOCK,
    I<2>:$PIPETX07SYNCHEADER,
    I<2>:$PIPETX08CHARISK,
    I<1>:$PIPETX08COMPLIANCE,
    I<32>:$PIPETX08DATA,
    I<1>:$PIPETX08DATAVALID,
    I<1>:$PIPETX08ELECIDLE,
    I<2>:$PIPETX08EQCONTROL,
    I<6>:$PIPETX08EQDEEMPH,
    I<2>:$PIPETX08POWERDOWN,
    I<1>:$PIPETX08STARTBLOCK,
    I<2>:$PIPETX08SYNCHEADER,
    I<2>:$PIPETX09CHARISK,
    I<1>:$PIPETX09COMPLIANCE,
    I<32>:$PIPETX09DATA,
    I<1>:$PIPETX09DATAVALID,
    I<1>:$PIPETX09ELECIDLE,
    I<2>:$PIPETX09EQCONTROL,
    I<6>:$PIPETX09EQDEEMPH,
    I<2>:$PIPETX09POWERDOWN,
    I<1>:$PIPETX09STARTBLOCK,
    I<2>:$PIPETX09SYNCHEADER,
    I<2>:$PIPETX10CHARISK,
    I<1>:$PIPETX10COMPLIANCE,
    I<32>:$PIPETX10DATA,
    I<1>:$PIPETX10DATAVALID,
    I<1>:$PIPETX10ELECIDLE,
    I<2>:$PIPETX10EQCONTROL,
    I<6>:$PIPETX10EQDEEMPH,
    I<2>:$PIPETX10POWERDOWN,
    I<1>:$PIPETX10STARTBLOCK,
    I<2>:$PIPETX10SYNCHEADER,
    I<2>:$PIPETX11CHARISK,
    I<1>:$PIPETX11COMPLIANCE,
    I<32>:$PIPETX11DATA,
    I<1>:$PIPETX11DATAVALID,
    I<1>:$PIPETX11ELECIDLE,
    I<2>:$PIPETX11EQCONTROL,
    I<6>:$PIPETX11EQDEEMPH,
    I<2>:$PIPETX11POWERDOWN,
    I<1>:$PIPETX11STARTBLOCK,
    I<2>:$PIPETX11SYNCHEADER,
    I<2>:$PIPETX12CHARISK,
    I<1>:$PIPETX12COMPLIANCE,
    I<32>:$PIPETX12DATA,
    I<1>:$PIPETX12DATAVALID,
    I<1>:$PIPETX12ELECIDLE,
    I<2>:$PIPETX12EQCONTROL,
    I<6>:$PIPETX12EQDEEMPH,
    I<2>:$PIPETX12POWERDOWN,
    I<1>:$PIPETX12STARTBLOCK,
    I<2>:$PIPETX12SYNCHEADER,
    I<2>:$PIPETX13CHARISK,
    I<1>:$PIPETX13COMPLIANCE,
    I<32>:$PIPETX13DATA,
    I<1>:$PIPETX13DATAVALID,
    I<1>:$PIPETX13ELECIDLE,
    I<2>:$PIPETX13EQCONTROL,
    I<6>:$PIPETX13EQDEEMPH,
    I<2>:$PIPETX13POWERDOWN,
    I<1>:$PIPETX13STARTBLOCK,
    I<2>:$PIPETX13SYNCHEADER,
    I<2>:$PIPETX14CHARISK,
    I<1>:$PIPETX14COMPLIANCE,
    I<32>:$PIPETX14DATA,
    I<1>:$PIPETX14DATAVALID,
    I<1>:$PIPETX14ELECIDLE,
    I<2>:$PIPETX14EQCONTROL,
    I<6>:$PIPETX14EQDEEMPH,
    I<2>:$PIPETX14POWERDOWN,
    I<1>:$PIPETX14STARTBLOCK,
    I<2>:$PIPETX14SYNCHEADER,
    I<2>:$PIPETX15CHARISK,
    I<1>:$PIPETX15COMPLIANCE,
    I<32>:$PIPETX15DATA,
    I<1>:$PIPETX15DATAVALID,
    I<1>:$PIPETX15ELECIDLE,
    I<2>:$PIPETX15EQCONTROL,
    I<6>:$PIPETX15EQDEEMPH,
    I<2>:$PIPETX15POWERDOWN,
    I<1>:$PIPETX15STARTBLOCK,
    I<2>:$PIPETX15SYNCHEADER,
    I<1>:$PIPETXDEEMPH,
    I<3>:$PIPETXMARGIN,
    I<2>:$PIPETXRATE,
    I<1>:$PIPETXRCVRDET,
    I<1>:$PIPETXRESET,
    I<1>:$PIPETXSWING,
    I<1>:$PLEQINPROGRESS,
    I<2>:$PLEQPHASE,
    I<1>:$PLGEN34EQMISMATCH,
    I<4>:$SAXISCCTREADY,
    I<4>:$SAXISRQTREADY,
    I<24>:$USERSPAREOUT
  );
}

def PCIEu3u0 : XilinxPrimitiveOp<"PCIE_3_0", []> {
  let summary = "PCIE_3_0 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CFGCONFIGSPACEENABLE,
    I<1>:$CFGERRCORIN,
    I<1>:$CFGERRUNCORIN,
    I<1>:$CFGEXTREADDATAVALID,
    I<1>:$CFGHOTRESETIN,
    I<1>:$CFGINPUTUPDATEREQUEST,
    I<1>:$CFGINTERRUPTMSITPHPRESENT,
    I<1>:$CFGINTERRUPTMSIXINT,
    I<1>:$CFGLINKTRAININGENABLE,
    I<1>:$CFGMCUPDATEREQUEST,
    I<1>:$CFGMGMTREAD,
    I<1>:$CFGMGMTTYPE1CFGREGACCESS,
    I<1>:$CFGMGMTWRITE,
    I<1>:$CFGMSGTRANSMIT,
    I<1>:$CFGPERFUNCTIONOUTPUTREQUEST,
    I<1>:$CFGPOWERSTATECHANGEACK,
    I<1>:$CFGREQPMTRANSITIONL23READY,
    I<1>:$CFGTPHSTTREADDATAVALID,
    I<1>:$CORECLK,
    I<1>:$CORECLKMICOMPLETIONRAML,
    I<1>:$CORECLKMICOMPLETIONRAMU,
    I<1>:$CORECLKMIREPLAYRAM,
    I<1>:$CORECLKMIREQUESTRAM,
    I<1>:$DRPCLK,
    I<1>:$DRPEN,
    I<1>:$DRPWE,
    I<1>:$MGMTRESETN,
    I<1>:$MGMTSTICKYRESETN,
    I<1>:$PCIECQNPREQ,
    I<1>:$PIPECLK,
    I<1>:$PIPERESETN,
    I<1>:$PIPERX0DATAVALID,
    I<1>:$PIPERX0ELECIDLE,
    I<1>:$PIPERX0EQDONE,
    I<1>:$PIPERX0EQLPADAPTDONE,
    I<1>:$PIPERX0EQLPLFFSSEL,
    I<1>:$PIPERX0PHYSTATUS,
    I<1>:$PIPERX0STARTBLOCK,
    I<1>:$PIPERX0VALID,
    I<1>:$PIPERX1DATAVALID,
    I<1>:$PIPERX1ELECIDLE,
    I<1>:$PIPERX1EQDONE,
    I<1>:$PIPERX1EQLPADAPTDONE,
    I<1>:$PIPERX1EQLPLFFSSEL,
    I<1>:$PIPERX1PHYSTATUS,
    I<1>:$PIPERX1STARTBLOCK,
    I<1>:$PIPERX1VALID,
    I<1>:$PIPERX2DATAVALID,
    I<1>:$PIPERX2ELECIDLE,
    I<1>:$PIPERX2EQDONE,
    I<1>:$PIPERX2EQLPADAPTDONE,
    I<1>:$PIPERX2EQLPLFFSSEL,
    I<1>:$PIPERX2PHYSTATUS,
    I<1>:$PIPERX2STARTBLOCK,
    I<1>:$PIPERX2VALID,
    I<1>:$PIPERX3DATAVALID,
    I<1>:$PIPERX3ELECIDLE,
    I<1>:$PIPERX3EQDONE,
    I<1>:$PIPERX3EQLPADAPTDONE,
    I<1>:$PIPERX3EQLPLFFSSEL,
    I<1>:$PIPERX3PHYSTATUS,
    I<1>:$PIPERX3STARTBLOCK,
    I<1>:$PIPERX3VALID,
    I<1>:$PIPERX4DATAVALID,
    I<1>:$PIPERX4ELECIDLE,
    I<1>:$PIPERX4EQDONE,
    I<1>:$PIPERX4EQLPADAPTDONE,
    I<1>:$PIPERX4EQLPLFFSSEL,
    I<1>:$PIPERX4PHYSTATUS,
    I<1>:$PIPERX4STARTBLOCK,
    I<1>:$PIPERX4VALID,
    I<1>:$PIPERX5DATAVALID,
    I<1>:$PIPERX5ELECIDLE,
    I<1>:$PIPERX5EQDONE,
    I<1>:$PIPERX5EQLPADAPTDONE,
    I<1>:$PIPERX5EQLPLFFSSEL,
    I<1>:$PIPERX5PHYSTATUS,
    I<1>:$PIPERX5STARTBLOCK,
    I<1>:$PIPERX5VALID,
    I<1>:$PIPERX6DATAVALID,
    I<1>:$PIPERX6ELECIDLE,
    I<1>:$PIPERX6EQDONE,
    I<1>:$PIPERX6EQLPADAPTDONE,
    I<1>:$PIPERX6EQLPLFFSSEL,
    I<1>:$PIPERX6PHYSTATUS,
    I<1>:$PIPERX6STARTBLOCK,
    I<1>:$PIPERX6VALID,
    I<1>:$PIPERX7DATAVALID,
    I<1>:$PIPERX7ELECIDLE,
    I<1>:$PIPERX7EQDONE,
    I<1>:$PIPERX7EQLPADAPTDONE,
    I<1>:$PIPERX7EQLPLFFSSEL,
    I<1>:$PIPERX7PHYSTATUS,
    I<1>:$PIPERX7STARTBLOCK,
    I<1>:$PIPERX7VALID,
    I<1>:$PIPETX0EQDONE,
    I<1>:$PIPETX1EQDONE,
    I<1>:$PIPETX2EQDONE,
    I<1>:$PIPETX3EQDONE,
    I<1>:$PIPETX4EQDONE,
    I<1>:$PIPETX5EQDONE,
    I<1>:$PIPETX6EQDONE,
    I<1>:$PIPETX7EQDONE,
    I<1>:$PLDISABLESCRAMBLER,
    I<1>:$PLEQRESETEIEOSCOUNT,
    I<1>:$PLGEN3PCSDISABLE,
    I<1>:$RECCLK,
    I<1>:$RESETN,
    I<1>:$SAXISCCTLAST,
    I<1>:$SAXISCCTVALID,
    I<1>:$SAXISRQTLAST,
    I<1>:$SAXISRQTVALID,
    I<1>:$USERCLK,
    I<11>:$DRPADDR,
    I<144>:$MICOMPLETIONRAMREADDATA,
    I<144>:$MIREPLAYRAMREADDATA,
    I<144>:$MIREQUESTRAMREADDATA,
    I<16>:$CFGDEVID,
    I<16>:$CFGSUBSYSID,
    I<16>:$CFGSUBSYSVENDID,
    I<16>:$CFGVENDID,
    I<16>:$DRPDI,
    I<18>:$PIPERX0EQLPNEWTXCOEFFORPRESET,
    I<18>:$PIPERX1EQLPNEWTXCOEFFORPRESET,
    I<18>:$PIPERX2EQLPNEWTXCOEFFORPRESET,
    I<18>:$PIPERX3EQLPNEWTXCOEFFORPRESET,
    I<18>:$PIPERX4EQLPNEWTXCOEFFORPRESET,
    I<18>:$PIPERX5EQLPNEWTXCOEFFORPRESET,
    I<18>:$PIPERX6EQLPNEWTXCOEFFORPRESET,
    I<18>:$PIPERX7EQLPNEWTXCOEFFORPRESET,
    I<18>:$PIPETX0EQCOEFF,
    I<18>:$PIPETX1EQCOEFF,
    I<18>:$PIPETX2EQCOEFF,
    I<18>:$PIPETX3EQCOEFF,
    I<18>:$PIPETX4EQCOEFF,
    I<18>:$PIPETX5EQCOEFF,
    I<18>:$PIPETX6EQCOEFF,
    I<18>:$PIPETX7EQCOEFF,
    I<19>:$CFGMGMTADDR,
    I<2>:$CFGFLRDONE,
    I<2>:$CFGINTERRUPTMSITPHTYPE,
    I<2>:$CFGINTERRUPTPENDING,
    I<2>:$PIPERX0CHARISK,
    I<2>:$PIPERX0SYNCHEADER,
    I<2>:$PIPERX1CHARISK,
    I<2>:$PIPERX1SYNCHEADER,
    I<2>:$PIPERX2CHARISK,
    I<2>:$PIPERX2SYNCHEADER,
    I<2>:$PIPERX3CHARISK,
    I<2>:$PIPERX3SYNCHEADER,
    I<2>:$PIPERX4CHARISK,
    I<2>:$PIPERX4SYNCHEADER,
    I<2>:$PIPERX5CHARISK,
    I<2>:$PIPERX5SYNCHEADER,
    I<2>:$PIPERX6CHARISK,
    I<2>:$PIPERX6SYNCHEADER,
    I<2>:$PIPERX7CHARISK,
    I<2>:$PIPERX7SYNCHEADER,
    I<22>:$MAXISCQTREADY,
    I<22>:$MAXISRCTREADY,
    I<256>:$SAXISCCTDATA,
    I<256>:$SAXISRQTDATA,
    I<3>:$CFGDSFUNCTIONNUMBER,
    I<3>:$CFGFCSEL,
    I<3>:$CFGINTERRUPTMSIATTR,
    I<3>:$CFGINTERRUPTMSIFUNCTIONNUMBER,
    I<3>:$CFGMSGTRANSMITTYPE,
    I<3>:$CFGPERFUNCSTATUSCONTROL,
    I<3>:$CFGPERFUNCTIONNUMBER,
    I<3>:$PIPERX0STATUS,
    I<3>:$PIPERX1STATUS,
    I<3>:$PIPERX2STATUS,
    I<3>:$PIPERX3STATUS,
    I<3>:$PIPERX4STATUS,
    I<3>:$PIPERX5STATUS,
    I<3>:$PIPERX6STATUS,
    I<3>:$PIPERX7STATUS,
    I<32>:$CFGEXTREADDATA,
    I<32>:$CFGINTERRUPTMSIINT,
    I<32>:$CFGINTERRUPTMSIXDATA,
    I<32>:$CFGMGMTWRITEDATA,
    I<32>:$CFGMSGTRANSMITDATA,
    I<32>:$CFGTPHSTTREADDATA,
    I<32>:$PIPERX0DATA,
    I<32>:$PIPERX1DATA,
    I<32>:$PIPERX2DATA,
    I<32>:$PIPERX3DATA,
    I<32>:$PIPERX4DATA,
    I<32>:$PIPERX5DATA,
    I<32>:$PIPERX6DATA,
    I<32>:$PIPERX7DATA,
    I<33>:$SAXISCCTUSER,
    I<4>:$CFGINTERRUPTINT,
    I<4>:$CFGINTERRUPTMSISELECT,
    I<4>:$CFGMGMTBYTEENABLE,
    I<5>:$CFGDSDEVICENUMBER,
    I<60>:$SAXISRQTUSER,
    I<6>:$CFGVFFLRDONE,
    I<6>:$PIPEEQFS,
    I<6>:$PIPEEQLF,
    I<64>:$CFGDSN,
    I<64>:$CFGINTERRUPTMSIPENDINGSTATUS,
    I<64>:$CFGINTERRUPTMSIXADDRESS,
    I<8>:$CFGDSBUSNUMBER,
    I<8>:$CFGDSPORTNUMBER,
    I<8>:$CFGREVID,
    I<8>:$PLGEN3PCSRXSYNCDONE,
    I<8>:$SAXISCCTKEEP,
    I<8>:$SAXISRQTKEEP,
    I<9>:$CFGINTERRUPTMSITPHSTTAG,

    // PCIE_3_0 parameters follows
    StrAttr:$LOC,
    StrAttr:$ARI_CAP_ENABLE,
    StrAttr:$AXISTEN_IF_CC_ALIGNMENT_MODE,
    StrAttr:$AXISTEN_IF_CC_PARITY_CHK,
    StrAttr:$AXISTEN_IF_CQ_ALIGNMENT_MODE,
    StrAttr:$AXISTEN_IF_ENABLE_CLIENT_TAG,
    APIntAttr<I<18>>:$AXISTEN_IF_ENABLE_MSG_ROUTE,
    StrAttr:$AXISTEN_IF_ENABLE_RX_MSG_INTFC,
    StrAttr:$AXISTEN_IF_RC_ALIGNMENT_MODE,
    StrAttr:$AXISTEN_IF_RC_STRADDLE,
    StrAttr:$AXISTEN_IF_RQ_ALIGNMENT_MODE,
    StrAttr:$AXISTEN_IF_RQ_PARITY_CHK,
    APIntAttr<I<2>>:$AXISTEN_IF_WIDTH,
    StrAttr:$CRM_CORE_CLK_FREQ_500,
    APIntAttr<I<2>>:$CRM_USER_CLK_FREQ,
    APIntAttr<I<8>>:$DNSTREAM_LINK_NUM,
    APIntAttr<I<2>>:$GEN3_PCS_AUTO_REALIGN,
    StrAttr:$GEN3_PCS_RX_ELECIDLE_INTERNAL,
    APIntAttr<I<9>>:$LL_ACK_TIMEOUT,
    StrAttr:$LL_ACK_TIMEOUT_EN,
    SI64Attr:$LL_ACK_TIMEOUT_FUNC,
    APIntAttr<I<16>>:$LL_CPL_FC_UPDATE_TIMER,
    StrAttr:$LL_CPL_FC_UPDATE_TIMER_OVERRIDE,
    APIntAttr<I<16>>:$LL_FC_UPDATE_TIMER,
    StrAttr:$LL_FC_UPDATE_TIMER_OVERRIDE,
    APIntAttr<I<16>>:$LL_NP_FC_UPDATE_TIMER,
    StrAttr:$LL_NP_FC_UPDATE_TIMER_OVERRIDE,
    APIntAttr<I<16>>:$LL_P_FC_UPDATE_TIMER,
    StrAttr:$LL_P_FC_UPDATE_TIMER_OVERRIDE,
    APIntAttr<I<9>>:$LL_REPLAY_TIMEOUT,
    StrAttr:$LL_REPLAY_TIMEOUT_EN,
    SI64Attr:$LL_REPLAY_TIMEOUT_FUNC,
    APIntAttr<I<10>>:$LTR_TX_MESSAGE_MINIMUM_INTERVAL,
    StrAttr:$LTR_TX_MESSAGE_ON_FUNC_POWER_STATE_CHANGE,
    StrAttr:$LTR_TX_MESSAGE_ON_LTR_ENABLE,
    StrAttr:$PF0_AER_CAP_ECRC_CHECK_CAPABLE,
    StrAttr:$PF0_AER_CAP_ECRC_GEN_CAPABLE,
    APIntAttr<I<12>>:$PF0_AER_CAP_NEXTPTR,
    APIntAttr<I<12>>:$PF0_ARI_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF0_ARI_CAP_NEXT_FUNC,
    APIntAttr<I<4>>:$PF0_ARI_CAP_VER,
    APIntAttr<I<5>>:$PF0_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF0_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR1_CONTROL,
    APIntAttr<I<5>>:$PF0_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF0_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR3_CONTROL,
    APIntAttr<I<5>>:$PF0_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF0_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR5_CONTROL,
    APIntAttr<I<8>>:$PF0_BIST_REGISTER,
    APIntAttr<I<8>>:$PF0_CAPABILITY_POINTER,
    APIntAttr<I<24>>:$PF0_CLASS_CODE,
    APIntAttr<I<16>>:$PF0_DEVICE_ID,
    StrAttr:$PF0_DEV_CAP2_128B_CAS_ATOMIC_COMPLETER_SUPPORT,
    StrAttr:$PF0_DEV_CAP2_32B_ATOMIC_COMPLETER_SUPPORT,
    StrAttr:$PF0_DEV_CAP2_64B_ATOMIC_COMPLETER_SUPPORT,
    StrAttr:$PF0_DEV_CAP2_CPL_TIMEOUT_DISABLE,
    StrAttr:$PF0_DEV_CAP2_LTR_SUPPORT,
    APIntAttr<I<2>>:$PF0_DEV_CAP2_OBFF_SUPPORT,
    StrAttr:$PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT,
    SI64Attr:$PF0_DEV_CAP_ENDPOINT_L0S_LATENCY,
    SI64Attr:$PF0_DEV_CAP_ENDPOINT_L1_LATENCY,
    StrAttr:$PF0_DEV_CAP_EXT_TAG_SUPPORTED,
    StrAttr:$PF0_DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE,
    APIntAttr<I<3>>:$PF0_DEV_CAP_MAX_PAYLOAD_SIZE,
    APIntAttr<I<12>>:$PF0_DPA_CAP_NEXTPTR,
    APIntAttr<I<5>>:$PF0_DPA_CAP_SUB_STATE_CONTROL,
    StrAttr:$PF0_DPA_CAP_SUB_STATE_CONTROL_EN,
    APIntAttr<I<8>>:$PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION0,
    APIntAttr<I<8>>:$PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION1,
    APIntAttr<I<8>>:$PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION2,
    APIntAttr<I<8>>:$PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION3,
    APIntAttr<I<8>>:$PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION4,
    APIntAttr<I<8>>:$PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION5,
    APIntAttr<I<8>>:$PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION6,
    APIntAttr<I<8>>:$PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION7,
    APIntAttr<I<4>>:$PF0_DPA_CAP_VER,
    APIntAttr<I<12>>:$PF0_DSN_CAP_NEXTPTR,
    APIntAttr<I<5>>:$PF0_EXPANSION_ROM_APERTURE_SIZE,
    StrAttr:$PF0_EXPANSION_ROM_ENABLE,
    APIntAttr<I<8>>:$PF0_INTERRUPT_LINE,
    APIntAttr<I<3>>:$PF0_INTERRUPT_PIN,
    SI64Attr:$PF0_LINK_CAP_ASPM_SUPPORT,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN1,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN2,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN3,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN1,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN2,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN3,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN1,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN2,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN3,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_GEN1,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_GEN2,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_GEN3,
    StrAttr:$PF0_LINK_STATUS_SLOT_CLOCK_CONFIG,
    APIntAttr<I<10>>:$PF0_LTR_CAP_MAX_NOSNOOP_LAT,
    APIntAttr<I<10>>:$PF0_LTR_CAP_MAX_SNOOP_LAT,
    APIntAttr<I<12>>:$PF0_LTR_CAP_NEXTPTR,
    APIntAttr<I<4>>:$PF0_LTR_CAP_VER,
    APIntAttr<I<8>>:$PF0_MSIX_CAP_NEXTPTR,
    SI64Attr:$PF0_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$PF0_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$PF0_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$PF0_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$PF0_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$PF0_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$PF0_MSI_CAP_NEXTPTR,
    APIntAttr<I<12>>:$PF0_PB_CAP_NEXTPTR,
    StrAttr:$PF0_PB_CAP_SYSTEM_ALLOCATED,
    APIntAttr<I<4>>:$PF0_PB_CAP_VER,
    APIntAttr<I<8>>:$PF0_PM_CAP_ID,
    APIntAttr<I<8>>:$PF0_PM_CAP_NEXTPTR,
    StrAttr:$PF0_PM_CAP_PMESUPPORT_D0,
    StrAttr:$PF0_PM_CAP_PMESUPPORT_D1,
    StrAttr:$PF0_PM_CAP_PMESUPPORT_D3HOT,
    StrAttr:$PF0_PM_CAP_SUPP_D1_STATE,
    APIntAttr<I<3>>:$PF0_PM_CAP_VER_ID,
    StrAttr:$PF0_PM_CSR_NOSOFTRESET,
    StrAttr:$PF0_RBAR_CAP_ENABLE,
    APIntAttr<I<3>>:$PF0_RBAR_CAP_INDEX0,
    APIntAttr<I<3>>:$PF0_RBAR_CAP_INDEX1,
    APIntAttr<I<3>>:$PF0_RBAR_CAP_INDEX2,
    APIntAttr<I<12>>:$PF0_RBAR_CAP_NEXTPTR,
    APIntAttr<I<20>>:$PF0_RBAR_CAP_SIZE0,
    APIntAttr<I<20>>:$PF0_RBAR_CAP_SIZE1,
    APIntAttr<I<20>>:$PF0_RBAR_CAP_SIZE2,
    APIntAttr<I<4>>:$PF0_RBAR_CAP_VER,
    APIntAttr<I<3>>:$PF0_RBAR_NUM,
    APIntAttr<I<8>>:$PF0_REVISION_ID,
    APIntAttr<I<5>>:$PF0_SRIOV_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF0_SRIOV_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR1_CONTROL,
    APIntAttr<I<5>>:$PF0_SRIOV_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF0_SRIOV_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR3_CONTROL,
    APIntAttr<I<5>>:$PF0_SRIOV_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF0_SRIOV_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR5_CONTROL,
    APIntAttr<I<16>>:$PF0_SRIOV_CAP_INITIAL_VF,
    APIntAttr<I<12>>:$PF0_SRIOV_CAP_NEXTPTR,
    APIntAttr<I<16>>:$PF0_SRIOV_CAP_TOTAL_VF,
    APIntAttr<I<4>>:$PF0_SRIOV_CAP_VER,
    APIntAttr<I<16>>:$PF0_SRIOV_FIRST_VF_OFFSET,
    APIntAttr<I<16>>:$PF0_SRIOV_FUNC_DEP_LINK,
    APIntAttr<I<32>>:$PF0_SRIOV_SUPPORTED_PAGE_SIZE,
    APIntAttr<I<16>>:$PF0_SRIOV_VF_DEVICE_ID,
    APIntAttr<I<16>>:$PF0_SUBSYSTEM_ID,
    StrAttr:$PF0_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$PF0_TPHR_CAP_ENABLE,
    StrAttr:$PF0_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$PF0_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$PF0_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$PF0_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$PF0_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$PF0_TPHR_CAP_VER,
    APIntAttr<I<12>>:$PF0_VC_CAP_NEXTPTR,
    APIntAttr<I<4>>:$PF0_VC_CAP_VER,
    StrAttr:$PF1_AER_CAP_ECRC_CHECK_CAPABLE,
    StrAttr:$PF1_AER_CAP_ECRC_GEN_CAPABLE,
    APIntAttr<I<12>>:$PF1_AER_CAP_NEXTPTR,
    APIntAttr<I<12>>:$PF1_ARI_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF1_ARI_CAP_NEXT_FUNC,
    APIntAttr<I<5>>:$PF1_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF1_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR1_CONTROL,
    APIntAttr<I<5>>:$PF1_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF1_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR3_CONTROL,
    APIntAttr<I<5>>:$PF1_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF1_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR5_CONTROL,
    APIntAttr<I<8>>:$PF1_BIST_REGISTER,
    APIntAttr<I<8>>:$PF1_CAPABILITY_POINTER,
    APIntAttr<I<24>>:$PF1_CLASS_CODE,
    APIntAttr<I<16>>:$PF1_DEVICE_ID,
    APIntAttr<I<3>>:$PF1_DEV_CAP_MAX_PAYLOAD_SIZE,
    APIntAttr<I<12>>:$PF1_DPA_CAP_NEXTPTR,
    APIntAttr<I<5>>:$PF1_DPA_CAP_SUB_STATE_CONTROL,
    StrAttr:$PF1_DPA_CAP_SUB_STATE_CONTROL_EN,
    APIntAttr<I<8>>:$PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION0,
    APIntAttr<I<8>>:$PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION1,
    APIntAttr<I<8>>:$PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION2,
    APIntAttr<I<8>>:$PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION3,
    APIntAttr<I<8>>:$PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION4,
    APIntAttr<I<8>>:$PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION5,
    APIntAttr<I<8>>:$PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION6,
    APIntAttr<I<8>>:$PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION7,
    APIntAttr<I<4>>:$PF1_DPA_CAP_VER,
    APIntAttr<I<12>>:$PF1_DSN_CAP_NEXTPTR,
    APIntAttr<I<5>>:$PF1_EXPANSION_ROM_APERTURE_SIZE,
    StrAttr:$PF1_EXPANSION_ROM_ENABLE,
    APIntAttr<I<8>>:$PF1_INTERRUPT_LINE,
    APIntAttr<I<3>>:$PF1_INTERRUPT_PIN,
    APIntAttr<I<8>>:$PF1_MSIX_CAP_NEXTPTR,
    SI64Attr:$PF1_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$PF1_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$PF1_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$PF1_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$PF1_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$PF1_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$PF1_MSI_CAP_NEXTPTR,
    APIntAttr<I<12>>:$PF1_PB_CAP_NEXTPTR,
    StrAttr:$PF1_PB_CAP_SYSTEM_ALLOCATED,
    APIntAttr<I<4>>:$PF1_PB_CAP_VER,
    APIntAttr<I<8>>:$PF1_PM_CAP_ID,
    APIntAttr<I<8>>:$PF1_PM_CAP_NEXTPTR,
    APIntAttr<I<3>>:$PF1_PM_CAP_VER_ID,
    StrAttr:$PF1_RBAR_CAP_ENABLE,
    APIntAttr<I<3>>:$PF1_RBAR_CAP_INDEX0,
    APIntAttr<I<3>>:$PF1_RBAR_CAP_INDEX1,
    APIntAttr<I<3>>:$PF1_RBAR_CAP_INDEX2,
    APIntAttr<I<12>>:$PF1_RBAR_CAP_NEXTPTR,
    APIntAttr<I<20>>:$PF1_RBAR_CAP_SIZE0,
    APIntAttr<I<20>>:$PF1_RBAR_CAP_SIZE1,
    APIntAttr<I<20>>:$PF1_RBAR_CAP_SIZE2,
    APIntAttr<I<4>>:$PF1_RBAR_CAP_VER,
    APIntAttr<I<3>>:$PF1_RBAR_NUM,
    APIntAttr<I<8>>:$PF1_REVISION_ID,
    APIntAttr<I<5>>:$PF1_SRIOV_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF1_SRIOV_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR1_CONTROL,
    APIntAttr<I<5>>:$PF1_SRIOV_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF1_SRIOV_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR3_CONTROL,
    APIntAttr<I<5>>:$PF1_SRIOV_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF1_SRIOV_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR5_CONTROL,
    APIntAttr<I<16>>:$PF1_SRIOV_CAP_INITIAL_VF,
    APIntAttr<I<12>>:$PF1_SRIOV_CAP_NEXTPTR,
    APIntAttr<I<16>>:$PF1_SRIOV_CAP_TOTAL_VF,
    APIntAttr<I<4>>:$PF1_SRIOV_CAP_VER,
    APIntAttr<I<16>>:$PF1_SRIOV_FIRST_VF_OFFSET,
    APIntAttr<I<16>>:$PF1_SRIOV_FUNC_DEP_LINK,
    APIntAttr<I<32>>:$PF1_SRIOV_SUPPORTED_PAGE_SIZE,
    APIntAttr<I<16>>:$PF1_SRIOV_VF_DEVICE_ID,
    APIntAttr<I<16>>:$PF1_SUBSYSTEM_ID,
    StrAttr:$PF1_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$PF1_TPHR_CAP_ENABLE,
    StrAttr:$PF1_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$PF1_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$PF1_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$PF1_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$PF1_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$PF1_TPHR_CAP_VER,
    StrAttr:$PL_DISABLE_EI_INFER_IN_L0,
    StrAttr:$PL_DISABLE_GEN3_DC_BALANCE,
    StrAttr:$PL_DISABLE_SCRAMBLING,
    StrAttr:$PL_DISABLE_UPCONFIG_CAPABLE,
    StrAttr:$PL_EQ_ADAPT_DISABLE_COEFF_CHECK,
    StrAttr:$PL_EQ_ADAPT_DISABLE_PRESET_CHECK,
    APIntAttr<I<5>>:$PL_EQ_ADAPT_ITER_COUNT,
    APIntAttr<I<2>>:$PL_EQ_ADAPT_REJECT_RETRY_COUNT,
    StrAttr:$PL_EQ_BYPASS_PHASE23,
    StrAttr:$PL_EQ_SHORT_ADAPT_PHASE,
    APIntAttr<I<16>>:$PL_LANE0_EQ_CONTROL,
    APIntAttr<I<16>>:$PL_LANE1_EQ_CONTROL,
    APIntAttr<I<16>>:$PL_LANE2_EQ_CONTROL,
    APIntAttr<I<16>>:$PL_LANE3_EQ_CONTROL,
    APIntAttr<I<16>>:$PL_LANE4_EQ_CONTROL,
    APIntAttr<I<16>>:$PL_LANE5_EQ_CONTROL,
    APIntAttr<I<16>>:$PL_LANE6_EQ_CONTROL,
    APIntAttr<I<16>>:$PL_LANE7_EQ_CONTROL,
    APIntAttr<I<3>>:$PL_LINK_CAP_MAX_LINK_SPEED,
    APIntAttr<I<4>>:$PL_LINK_CAP_MAX_LINK_WIDTH,
    SI64Attr:$PL_N_FTS_COMCLK_GEN1,
    SI64Attr:$PL_N_FTS_COMCLK_GEN2,
    SI64Attr:$PL_N_FTS_COMCLK_GEN3,
    SI64Attr:$PL_N_FTS_GEN1,
    SI64Attr:$PL_N_FTS_GEN2,
    SI64Attr:$PL_N_FTS_GEN3,
    StrAttr:$PL_SIM_FAST_LINK_TRAINING,
    StrAttr:$PL_UPSTREAM_FACING,
    APIntAttr<I<16>>:$PM_ASPML0S_TIMEOUT,
    APIntAttr<I<20>>:$PM_ASPML1_ENTRY_DELAY,
    StrAttr:$PM_ENABLE_SLOT_POWER_CAPTURE,
    APIntAttr<I<32>>:$PM_L1_REENTRY_DELAY,
    APIntAttr<I<20>>:$PM_PME_SERVICE_TIMEOUT_DELAY,
    APIntAttr<I<16>>:$PM_PME_TURNOFF_ACK_DELAY,
    StrAttr:$SIM_VERSION,
    SI64Attr:$SPARE_BIT0,
    SI64Attr:$SPARE_BIT1,
    SI64Attr:$SPARE_BIT2,
    SI64Attr:$SPARE_BIT3,
    SI64Attr:$SPARE_BIT4,
    SI64Attr:$SPARE_BIT5,
    SI64Attr:$SPARE_BIT6,
    SI64Attr:$SPARE_BIT7,
    SI64Attr:$SPARE_BIT8,
    APIntAttr<I<8>>:$SPARE_BYTE0,
    APIntAttr<I<8>>:$SPARE_BYTE1,
    APIntAttr<I<8>>:$SPARE_BYTE2,
    APIntAttr<I<8>>:$SPARE_BYTE3,
    APIntAttr<I<32>>:$SPARE_WORD0,
    APIntAttr<I<32>>:$SPARE_WORD1,
    APIntAttr<I<32>>:$SPARE_WORD2,
    APIntAttr<I<32>>:$SPARE_WORD3,
    StrAttr:$SRIOV_CAP_ENABLE,
    APIntAttr<I<24>>:$TL_COMPL_TIMEOUT_REG0,
    APIntAttr<I<28>>:$TL_COMPL_TIMEOUT_REG1,
    APIntAttr<I<12>>:$TL_CREDITS_CD,
    APIntAttr<I<8>>:$TL_CREDITS_CH,
    APIntAttr<I<12>>:$TL_CREDITS_NPD,
    APIntAttr<I<8>>:$TL_CREDITS_NPH,
    APIntAttr<I<12>>:$TL_CREDITS_PD,
    APIntAttr<I<8>>:$TL_CREDITS_PH,
    StrAttr:$TL_ENABLE_MESSAGE_RID_CHECK_ENABLE,
    StrAttr:$TL_EXTENDED_CFG_EXTEND_INTERFACE_ENABLE,
    StrAttr:$TL_LEGACY_CFG_EXTEND_INTERFACE_ENABLE,
    StrAttr:$TL_LEGACY_MODE_ENABLE,
    StrAttr:$TL_PF_ENABLE_REG,
    StrAttr:$TL_TAG_MGMT_ENABLE,
    APIntAttr<I<12>>:$VF0_ARI_CAP_NEXTPTR,
    APIntAttr<I<8>>:$VF0_CAPABILITY_POINTER,
    SI64Attr:$VF0_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VF0_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VF0_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VF0_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VF0_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$VF0_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$VF0_PM_CAP_ID,
    APIntAttr<I<8>>:$VF0_PM_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF0_PM_CAP_VER_ID,
    StrAttr:$VF0_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$VF0_TPHR_CAP_ENABLE,
    StrAttr:$VF0_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$VF0_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF0_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$VF0_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$VF0_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$VF0_TPHR_CAP_VER,
    APIntAttr<I<12>>:$VF1_ARI_CAP_NEXTPTR,
    SI64Attr:$VF1_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VF1_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VF1_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VF1_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VF1_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$VF1_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$VF1_PM_CAP_ID,
    APIntAttr<I<8>>:$VF1_PM_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF1_PM_CAP_VER_ID,
    StrAttr:$VF1_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$VF1_TPHR_CAP_ENABLE,
    StrAttr:$VF1_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$VF1_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF1_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$VF1_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$VF1_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$VF1_TPHR_CAP_VER,
    APIntAttr<I<12>>:$VF2_ARI_CAP_NEXTPTR,
    SI64Attr:$VF2_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VF2_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VF2_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VF2_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VF2_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$VF2_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$VF2_PM_CAP_ID,
    APIntAttr<I<8>>:$VF2_PM_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF2_PM_CAP_VER_ID,
    StrAttr:$VF2_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$VF2_TPHR_CAP_ENABLE,
    StrAttr:$VF2_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$VF2_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF2_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$VF2_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$VF2_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$VF2_TPHR_CAP_VER,
    APIntAttr<I<12>>:$VF3_ARI_CAP_NEXTPTR,
    SI64Attr:$VF3_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VF3_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VF3_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VF3_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VF3_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$VF3_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$VF3_PM_CAP_ID,
    APIntAttr<I<8>>:$VF3_PM_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF3_PM_CAP_VER_ID,
    StrAttr:$VF3_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$VF3_TPHR_CAP_ENABLE,
    StrAttr:$VF3_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$VF3_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF3_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$VF3_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$VF3_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$VF3_TPHR_CAP_VER,
    APIntAttr<I<12>>:$VF4_ARI_CAP_NEXTPTR,
    SI64Attr:$VF4_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VF4_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VF4_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VF4_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VF4_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$VF4_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$VF4_PM_CAP_ID,
    APIntAttr<I<8>>:$VF4_PM_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF4_PM_CAP_VER_ID,
    StrAttr:$VF4_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$VF4_TPHR_CAP_ENABLE,
    StrAttr:$VF4_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$VF4_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF4_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$VF4_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$VF4_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$VF4_TPHR_CAP_VER,
    APIntAttr<I<12>>:$VF5_ARI_CAP_NEXTPTR,
    SI64Attr:$VF5_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VF5_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VF5_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VF5_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VF5_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$VF5_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$VF5_PM_CAP_ID,
    APIntAttr<I<8>>:$VF5_PM_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF5_PM_CAP_VER_ID,
    StrAttr:$VF5_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$VF5_TPHR_CAP_ENABLE,
    StrAttr:$VF5_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$VF5_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF5_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$VF5_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$VF5_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$VF5_TPHR_CAP_VER
  );

  let results = (outs
    I<1>:$CFGERRCOROUT,
    I<1>:$CFGERRFATALOUT,
    I<1>:$CFGERRNONFATALOUT,
    I<1>:$CFGEXTREADRECEIVED,
    I<1>:$CFGEXTWRITERECEIVED,
    I<1>:$CFGHOTRESETOUT,
    I<1>:$CFGINPUTUPDATEDONE,
    I<1>:$CFGINTERRUPTAOUTPUT,
    I<1>:$CFGINTERRUPTBOUTPUT,
    I<1>:$CFGINTERRUPTCOUTPUT,
    I<1>:$CFGINTERRUPTDOUTPUT,
    I<1>:$CFGINTERRUPTMSIFAIL,
    I<1>:$CFGINTERRUPTMSIMASKUPDATE,
    I<1>:$CFGINTERRUPTMSISENT,
    I<1>:$CFGINTERRUPTMSIXFAIL,
    I<1>:$CFGINTERRUPTMSIXSENT,
    I<1>:$CFGINTERRUPTSENT,
    I<1>:$CFGLOCALERROR,
    I<1>:$CFGLTRENABLE,
    I<1>:$CFGMCUPDATEDONE,
    I<1>:$CFGMGMTREADWRITEDONE,
    I<1>:$CFGMSGRECEIVED,
    I<1>:$CFGMSGTRANSMITDONE,
    I<1>:$CFGPERFUNCTIONUPDATEDONE,
    I<1>:$CFGPHYLINKDOWN,
    I<1>:$CFGPLSTATUSCHANGE,
    I<1>:$CFGPOWERSTATECHANGEINTERRUPT,
    I<1>:$CFGTPHSTTREADENABLE,
    I<1>:$CFGTPHSTTWRITEENABLE,
    I<1>:$DRPRDY,
    I<1>:$MAXISCQTLAST,
    I<1>:$MAXISCQTVALID,
    I<1>:$MAXISRCTLAST,
    I<1>:$MAXISRCTVALID,
    I<1>:$PCIERQSEQNUMVLD,
    I<1>:$PCIERQTAGVLD,
    I<1>:$PIPERX0POLARITY,
    I<1>:$PIPERX1POLARITY,
    I<1>:$PIPERX2POLARITY,
    I<1>:$PIPERX3POLARITY,
    I<1>:$PIPERX4POLARITY,
    I<1>:$PIPERX5POLARITY,
    I<1>:$PIPERX6POLARITY,
    I<1>:$PIPERX7POLARITY,
    I<1>:$PIPETX0COMPLIANCE,
    I<1>:$PIPETX0DATAVALID,
    I<1>:$PIPETX0ELECIDLE,
    I<1>:$PIPETX0STARTBLOCK,
    I<1>:$PIPETX1COMPLIANCE,
    I<1>:$PIPETX1DATAVALID,
    I<1>:$PIPETX1ELECIDLE,
    I<1>:$PIPETX1STARTBLOCK,
    I<1>:$PIPETX2COMPLIANCE,
    I<1>:$PIPETX2DATAVALID,
    I<1>:$PIPETX2ELECIDLE,
    I<1>:$PIPETX2STARTBLOCK,
    I<1>:$PIPETX3COMPLIANCE,
    I<1>:$PIPETX3DATAVALID,
    I<1>:$PIPETX3ELECIDLE,
    I<1>:$PIPETX3STARTBLOCK,
    I<1>:$PIPETX4COMPLIANCE,
    I<1>:$PIPETX4DATAVALID,
    I<1>:$PIPETX4ELECIDLE,
    I<1>:$PIPETX4STARTBLOCK,
    I<1>:$PIPETX5COMPLIANCE,
    I<1>:$PIPETX5DATAVALID,
    I<1>:$PIPETX5ELECIDLE,
    I<1>:$PIPETX5STARTBLOCK,
    I<1>:$PIPETX6COMPLIANCE,
    I<1>:$PIPETX6DATAVALID,
    I<1>:$PIPETX6ELECIDLE,
    I<1>:$PIPETX6STARTBLOCK,
    I<1>:$PIPETX7COMPLIANCE,
    I<1>:$PIPETX7DATAVALID,
    I<1>:$PIPETX7ELECIDLE,
    I<1>:$PIPETX7STARTBLOCK,
    I<1>:$PIPETXDEEMPH,
    I<1>:$PIPETXRCVRDET,
    I<1>:$PIPETXRESET,
    I<1>:$PIPETXSWING,
    I<1>:$PLEQINPROGRESS,
    I<12>:$CFGFCCPLD,
    I<12>:$CFGFCNPD,
    I<12>:$CFGFCPD,
    I<12>:$CFGVFSTATUS,
    I<144>:$MIREPLAYRAMWRITEDATA,
    I<144>:$MIREQUESTRAMWRITEDATA,
    I<16>:$CFGPERFUNCSTATUSDATA,
    I<16>:$DBGDATAOUT,
    I<16>:$DRPDO,
    I<18>:$CFGVFPOWERSTATE,
    I<18>:$CFGVFTPHSTMODE,
    I<2>:$CFGDPASUBSTATECHANGE,
    I<2>:$CFGFLRINPROCESS,
    I<2>:$CFGINTERRUPTMSIENABLE,
    I<2>:$CFGINTERRUPTMSIXENABLE,
    I<2>:$CFGINTERRUPTMSIXMASK,
    I<2>:$CFGLINKPOWERSTATE,
    I<2>:$CFGOBFFENABLE,
    I<2>:$CFGPHYLINKSTATUS,
    I<2>:$CFGRCBSTATUS,
    I<2>:$CFGTPHREQUESTERENABLE,
    I<2>:$MIREPLAYRAMREADENABLE,
    I<2>:$MIREPLAYRAMWRITEENABLE,
    I<2>:$PCIERQTAGAV,
    I<2>:$PCIETFCNPDAV,
    I<2>:$PCIETFCNPHAV,
    I<2>:$PIPERX0EQCONTROL,
    I<2>:$PIPERX1EQCONTROL,
    I<2>:$PIPERX2EQCONTROL,
    I<2>:$PIPERX3EQCONTROL,
    I<2>:$PIPERX4EQCONTROL,
    I<2>:$PIPERX5EQCONTROL,
    I<2>:$PIPERX6EQCONTROL,
    I<2>:$PIPERX7EQCONTROL,
    I<2>:$PIPETX0CHARISK,
    I<2>:$PIPETX0EQCONTROL,
    I<2>:$PIPETX0POWERDOWN,
    I<2>:$PIPETX0SYNCHEADER,
    I<2>:$PIPETX1CHARISK,
    I<2>:$PIPETX1EQCONTROL,
    I<2>:$PIPETX1POWERDOWN,
    I<2>:$PIPETX1SYNCHEADER,
    I<2>:$PIPETX2CHARISK,
    I<2>:$PIPETX2EQCONTROL,
    I<2>:$PIPETX2POWERDOWN,
    I<2>:$PIPETX2SYNCHEADER,
    I<2>:$PIPETX3CHARISK,
    I<2>:$PIPETX3EQCONTROL,
    I<2>:$PIPETX3POWERDOWN,
    I<2>:$PIPETX3SYNCHEADER,
    I<2>:$PIPETX4CHARISK,
    I<2>:$PIPETX4EQCONTROL,
    I<2>:$PIPETX4POWERDOWN,
    I<2>:$PIPETX4SYNCHEADER,
    I<2>:$PIPETX5CHARISK,
    I<2>:$PIPETX5EQCONTROL,
    I<2>:$PIPETX5POWERDOWN,
    I<2>:$PIPETX5SYNCHEADER,
    I<2>:$PIPETX6CHARISK,
    I<2>:$PIPETX6EQCONTROL,
    I<2>:$PIPETX6POWERDOWN,
    I<2>:$PIPETX6SYNCHEADER,
    I<2>:$PIPETX7CHARISK,
    I<2>:$PIPETX7EQCONTROL,
    I<2>:$PIPETX7POWERDOWN,
    I<2>:$PIPETX7SYNCHEADER,
    I<2>:$PIPETXRATE,
    I<2>:$PLEQPHASE,
    I<256>:$MAXISCQTDATA,
    I<256>:$MAXISRCTDATA,
    I<3>:$CFGCURRENTSPEED,
    I<3>:$CFGMAXPAYLOAD,
    I<3>:$CFGMAXREADREQ,
    I<3>:$CFGTPHFUNCTIONNUM,
    I<3>:$PIPERX0EQPRESET,
    I<3>:$PIPERX1EQPRESET,
    I<3>:$PIPERX2EQPRESET,
    I<3>:$PIPERX3EQPRESET,
    I<3>:$PIPERX4EQPRESET,
    I<3>:$PIPERX5EQPRESET,
    I<3>:$PIPERX6EQPRESET,
    I<3>:$PIPERX7EQPRESET,
    I<3>:$PIPETXMARGIN,
    I<32>:$CFGEXTWRITEDATA,
    I<32>:$CFGINTERRUPTMSIDATA,
    I<32>:$CFGMGMTREADDATA,
    I<32>:$CFGTPHSTTWRITEDATA,
    I<32>:$PIPETX0DATA,
    I<32>:$PIPETX1DATA,
    I<32>:$PIPETX2DATA,
    I<32>:$PIPETX3DATA,
    I<32>:$PIPETX4DATA,
    I<32>:$PIPETX5DATA,
    I<32>:$PIPETX6DATA,
    I<32>:$PIPETX7DATA,
    I<4>:$CFGEXTWRITEBYTEENABLE,
    I<4>:$CFGNEGOTIATEDWIDTH,
    I<4>:$CFGTPHSTTWRITEBYTEVALID,
    I<4>:$MICOMPLETIONRAMREADENABLEL,
    I<4>:$MICOMPLETIONRAMREADENABLEU,
    I<4>:$MICOMPLETIONRAMWRITEENABLEL,
    I<4>:$MICOMPLETIONRAMWRITEENABLEU,
    I<4>:$MIREQUESTRAMREADENABLE,
    I<4>:$MIREQUESTRAMWRITEENABLE,
    I<4>:$PCIERQSEQNUM,
    I<4>:$PIPERX0EQLPTXPRESET,
    I<4>:$PIPERX1EQLPTXPRESET,
    I<4>:$PIPERX2EQLPTXPRESET,
    I<4>:$PIPERX3EQLPTXPRESET,
    I<4>:$PIPERX4EQLPTXPRESET,
    I<4>:$PIPERX5EQLPTXPRESET,
    I<4>:$PIPERX6EQLPTXPRESET,
    I<4>:$PIPERX7EQLPTXPRESET,
    I<4>:$PIPETX0EQPRESET,
    I<4>:$PIPETX1EQPRESET,
    I<4>:$PIPETX2EQPRESET,
    I<4>:$PIPETX3EQPRESET,
    I<4>:$PIPETX4EQPRESET,
    I<4>:$PIPETX5EQPRESET,
    I<4>:$PIPETX6EQPRESET,
    I<4>:$PIPETX7EQPRESET,
    I<4>:$SAXISCCTREADY,
    I<4>:$SAXISRQTREADY,
    I<5>:$CFGMSGRECEIVEDTYPE,
    I<5>:$CFGTPHSTTADDRESS,
    I<6>:$CFGFUNCTIONPOWERSTATE,
    I<6>:$CFGINTERRUPTMSIMMENABLE,
    I<6>:$CFGINTERRUPTMSIVFENABLE,
    I<6>:$CFGINTERRUPTMSIXVFENABLE,
    I<6>:$CFGINTERRUPTMSIXVFMASK,
    I<6>:$CFGLTSSMSTATE,
    I<6>:$CFGTPHSTMODE,
    I<6>:$CFGVFFLRINPROCESS,
    I<6>:$CFGVFTPHREQUESTERENABLE,
    I<6>:$PCIECQNPREQCOUNT,
    I<6>:$PCIERQTAG,
    I<6>:$PIPERX0EQLPLFFS,
    I<6>:$PIPERX1EQLPLFFS,
    I<6>:$PIPERX2EQLPLFFS,
    I<6>:$PIPERX3EQLPLFFS,
    I<6>:$PIPERX4EQLPLFFS,
    I<6>:$PIPERX5EQLPLFFS,
    I<6>:$PIPERX6EQLPLFFS,
    I<6>:$PIPERX7EQLPLFFS,
    I<6>:$PIPETX0EQDEEMPH,
    I<6>:$PIPETX1EQDEEMPH,
    I<6>:$PIPETX2EQDEEMPH,
    I<6>:$PIPETX3EQDEEMPH,
    I<6>:$PIPETX4EQDEEMPH,
    I<6>:$PIPETX5EQDEEMPH,
    I<6>:$PIPETX6EQDEEMPH,
    I<6>:$PIPETX7EQDEEMPH,
    I<72>:$MICOMPLETIONRAMWRITEDATAL,
    I<72>:$MICOMPLETIONRAMWRITEDATAU,
    I<75>:$MAXISRCTUSER,
    I<8>:$CFGEXTFUNCTIONNUMBER,
    I<8>:$CFGFCCPLH,
    I<8>:$CFGFCNPH,
    I<8>:$CFGFCPH,
    I<8>:$CFGFUNCTIONSTATUS,
    I<8>:$CFGMSGRECEIVEDDATA,
    I<8>:$MAXISCQTKEEP,
    I<8>:$MAXISRCTKEEP,
    I<8>:$PLGEN3PCSRXSLIDE,
    I<85>:$MAXISCQTUSER,
    I<9>:$MIREPLAYRAMADDRESS,
    I<9>:$MIREQUESTRAMREADADDRESSA,
    I<9>:$MIREQUESTRAMREADADDRESSB,
    I<9>:$MIREQUESTRAMWRITEADDRESSA,
    I<9>:$MIREQUESTRAMWRITEADDRESSB,
    I<10>:$CFGEXTREGISTERNUMBER,
    I<10>:$MICOMPLETIONRAMREADADDRESSAL,
    I<10>:$MICOMPLETIONRAMREADADDRESSAU,
    I<10>:$MICOMPLETIONRAMREADADDRESSBL,
    I<10>:$MICOMPLETIONRAMREADADDRESSBU,
    I<10>:$MICOMPLETIONRAMWRITEADDRESSAL,
    I<10>:$MICOMPLETIONRAMWRITEADDRESSAU,
    I<10>:$MICOMPLETIONRAMWRITEADDRESSBL,
    I<10>:$MICOMPLETIONRAMWRITEADDRESSBU
  );
}

def PCIEu3u1 : XilinxPrimitiveOp<"PCIE_3_1", []> {
  let summary = "PCIE_3_1 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CFGCONFIGSPACEENABLE,
    I<16>:$CFGDEVID,
    I<8>:$CFGDSBUSNUMBER,
    I<5>:$CFGDSDEVICENUMBER,
    I<3>:$CFGDSFUNCTIONNUMBER,
    I<64>:$CFGDSN,
    I<8>:$CFGDSPORTNUMBER,
    I<1>:$CFGERRCORIN,
    I<1>:$CFGERRUNCORIN,
    I<32>:$CFGEXTREADDATA,
    I<1>:$CFGEXTREADDATAVALID,
    I<3>:$CFGFCSEL,
    I<4>:$CFGFLRDONE,
    I<1>:$CFGHOTRESETIN,
    I<4>:$CFGINTERRUPTINT,
    I<3>:$CFGINTERRUPTMSIATTR,
    I<4>:$CFGINTERRUPTMSIFUNCTIONNUMBER,
    I<32>:$CFGINTERRUPTMSIINT,
    I<32>:$CFGINTERRUPTMSIPENDINGSTATUS,
    I<1>:$CFGINTERRUPTMSIPENDINGSTATUSDATAENABLE,
    I<4>:$CFGINTERRUPTMSIPENDINGSTATUSFUNCTIONNUM,
    I<4>:$CFGINTERRUPTMSISELECT,
    I<1>:$CFGINTERRUPTMSITPHPRESENT,
    I<9>:$CFGINTERRUPTMSITPHSTTAG,
    I<2>:$CFGINTERRUPTMSITPHTYPE,
    I<64>:$CFGINTERRUPTMSIXADDRESS,
    I<32>:$CFGINTERRUPTMSIXDATA,
    I<1>:$CFGINTERRUPTMSIXINT,
    I<4>:$CFGINTERRUPTPENDING,
    I<1>:$CFGLINKTRAININGENABLE,
    I<19>:$CFGMGMTADDR,
    I<4>:$CFGMGMTBYTEENABLE,
    I<1>:$CFGMGMTREAD,
    I<1>:$CFGMGMTTYPE1CFGREGACCESS,
    I<1>:$CFGMGMTWRITE,
    I<32>:$CFGMGMTWRITEDATA,
    I<1>:$CFGMSGTRANSMIT,
    I<32>:$CFGMSGTRANSMITDATA,
    I<3>:$CFGMSGTRANSMITTYPE,
    I<3>:$CFGPERFUNCSTATUSCONTROL,
    I<4>:$CFGPERFUNCTIONNUMBER,
    I<1>:$CFGPERFUNCTIONOUTPUTREQUEST,
    I<1>:$CFGPOWERSTATECHANGEACK,
    I<1>:$CFGREQPMTRANSITIONL23READY,
    I<8>:$CFGREVID,
    I<16>:$CFGSUBSYSID,
    I<16>:$CFGSUBSYSVENDID,
    I<32>:$CFGTPHSTTREADDATA,
    I<1>:$CFGTPHSTTREADDATAVALID,
    I<16>:$CFGVENDID,
    I<8>:$CFGVFFLRDONE,
    I<1>:$CONFMCAPREQUESTBYCONF,
    I<32>:$CONFREQDATA,
    I<4>:$CONFREQREGNUM,
    I<2>:$CONFREQTYPE,
    I<1>:$CONFREQVALID,
    I<1>:$CORECLK,
    I<1>:$CORECLKMICOMPLETIONRAML,
    I<1>:$CORECLKMICOMPLETIONRAMU,
    I<1>:$CORECLKMIREPLAYRAM,
    I<1>:$CORECLKMIREQUESTRAM,
    I<1>:$DBGCFGLOCALMGMTREGOVERRIDE,
    I<4>:$DBGDATASEL,
    I<10>:$DRPADDR,
    I<1>:$DRPCLK,
    I<16>:$DRPDI,
    I<1>:$DRPEN,
    I<1>:$DRPWE,
    I<14>:$LL2LMSAXISTXTUSER,
    I<1>:$LL2LMSAXISTXTVALID,
    I<4>:$LL2LMTXTLPID0,
    I<4>:$LL2LMTXTLPID1,
    I<22>:$MAXISCQTREADY,
    I<22>:$MAXISRCTREADY,
    I<1>:$MCAPCLK,
    I<1>:$MCAPPERST0B,
    I<1>:$MCAPPERST1B,
    I<1>:$MGMTRESETN,
    I<1>:$MGMTSTICKYRESETN,
    I<144>:$MICOMPLETIONRAMREADDATA,
    I<144>:$MIREPLAYRAMREADDATA,
    I<144>:$MIREQUESTRAMREADDATA,
    I<1>:$PCIECQNPREQ,
    I<1>:$PIPECLK,
    I<6>:$PIPEEQFS,
    I<6>:$PIPEEQLF,
    I<1>:$PIPERESETN,
    I<2>:$PIPERX0CHARISK,
    I<32>:$PIPERX0DATA,
    I<1>:$PIPERX0DATAVALID,
    I<1>:$PIPERX0ELECIDLE,
    I<1>:$PIPERX0EQDONE,
    I<1>:$PIPERX0EQLPADAPTDONE,
    I<1>:$PIPERX0EQLPLFFSSEL,
    I<18>:$PIPERX0EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX0PHYSTATUS,
    I<1>:$PIPERX0STARTBLOCK,
    I<3>:$PIPERX0STATUS,
    I<2>:$PIPERX0SYNCHEADER,
    I<1>:$PIPERX0VALID,
    I<2>:$PIPERX1CHARISK,
    I<32>:$PIPERX1DATA,
    I<1>:$PIPERX1DATAVALID,
    I<1>:$PIPERX1ELECIDLE,
    I<1>:$PIPERX1EQDONE,
    I<1>:$PIPERX1EQLPADAPTDONE,
    I<1>:$PIPERX1EQLPLFFSSEL,
    I<18>:$PIPERX1EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX1PHYSTATUS,
    I<1>:$PIPERX1STARTBLOCK,
    I<3>:$PIPERX1STATUS,
    I<2>:$PIPERX1SYNCHEADER,
    I<1>:$PIPERX1VALID,
    I<2>:$PIPERX2CHARISK,
    I<32>:$PIPERX2DATA,
    I<1>:$PIPERX2DATAVALID,
    I<1>:$PIPERX2ELECIDLE,
    I<1>:$PIPERX2EQDONE,
    I<1>:$PIPERX2EQLPADAPTDONE,
    I<1>:$PIPERX2EQLPLFFSSEL,
    I<18>:$PIPERX2EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX2PHYSTATUS,
    I<1>:$PIPERX2STARTBLOCK,
    I<3>:$PIPERX2STATUS,
    I<2>:$PIPERX2SYNCHEADER,
    I<1>:$PIPERX2VALID,
    I<2>:$PIPERX3CHARISK,
    I<32>:$PIPERX3DATA,
    I<1>:$PIPERX3DATAVALID,
    I<1>:$PIPERX3ELECIDLE,
    I<1>:$PIPERX3EQDONE,
    I<1>:$PIPERX3EQLPADAPTDONE,
    I<1>:$PIPERX3EQLPLFFSSEL,
    I<18>:$PIPERX3EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX3PHYSTATUS,
    I<1>:$PIPERX3STARTBLOCK,
    I<3>:$PIPERX3STATUS,
    I<2>:$PIPERX3SYNCHEADER,
    I<1>:$PIPERX3VALID,
    I<2>:$PIPERX4CHARISK,
    I<32>:$PIPERX4DATA,
    I<1>:$PIPERX4DATAVALID,
    I<1>:$PIPERX4ELECIDLE,
    I<1>:$PIPERX4EQDONE,
    I<1>:$PIPERX4EQLPADAPTDONE,
    I<1>:$PIPERX4EQLPLFFSSEL,
    I<18>:$PIPERX4EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX4PHYSTATUS,
    I<1>:$PIPERX4STARTBLOCK,
    I<3>:$PIPERX4STATUS,
    I<2>:$PIPERX4SYNCHEADER,
    I<1>:$PIPERX4VALID,
    I<2>:$PIPERX5CHARISK,
    I<32>:$PIPERX5DATA,
    I<1>:$PIPERX5DATAVALID,
    I<1>:$PIPERX5ELECIDLE,
    I<1>:$PIPERX5EQDONE,
    I<1>:$PIPERX5EQLPADAPTDONE,
    I<1>:$PIPERX5EQLPLFFSSEL,
    I<18>:$PIPERX5EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX5PHYSTATUS,
    I<1>:$PIPERX5STARTBLOCK,
    I<3>:$PIPERX5STATUS,
    I<2>:$PIPERX5SYNCHEADER,
    I<1>:$PIPERX5VALID,
    I<2>:$PIPERX6CHARISK,
    I<32>:$PIPERX6DATA,
    I<1>:$PIPERX6DATAVALID,
    I<1>:$PIPERX6ELECIDLE,
    I<1>:$PIPERX6EQDONE,
    I<1>:$PIPERX6EQLPADAPTDONE,
    I<1>:$PIPERX6EQLPLFFSSEL,
    I<18>:$PIPERX6EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX6PHYSTATUS,
    I<1>:$PIPERX6STARTBLOCK,
    I<3>:$PIPERX6STATUS,
    I<2>:$PIPERX6SYNCHEADER,
    I<1>:$PIPERX6VALID,
    I<2>:$PIPERX7CHARISK,
    I<32>:$PIPERX7DATA,
    I<1>:$PIPERX7DATAVALID,
    I<1>:$PIPERX7ELECIDLE,
    I<1>:$PIPERX7EQDONE,
    I<1>:$PIPERX7EQLPADAPTDONE,
    I<1>:$PIPERX7EQLPLFFSSEL,
    I<18>:$PIPERX7EQLPNEWTXCOEFFORPRESET,
    I<1>:$PIPERX7PHYSTATUS,
    I<1>:$PIPERX7STARTBLOCK,
    I<3>:$PIPERX7STATUS,
    I<2>:$PIPERX7SYNCHEADER,
    I<1>:$PIPERX7VALID,
    I<18>:$PIPETX0EQCOEFF,
    I<1>:$PIPETX0EQDONE,
    I<18>:$PIPETX1EQCOEFF,
    I<1>:$PIPETX1EQDONE,
    I<18>:$PIPETX2EQCOEFF,
    I<1>:$PIPETX2EQDONE,
    I<18>:$PIPETX3EQCOEFF,
    I<1>:$PIPETX3EQDONE,
    I<18>:$PIPETX4EQCOEFF,
    I<1>:$PIPETX4EQDONE,
    I<18>:$PIPETX5EQCOEFF,
    I<1>:$PIPETX5EQDONE,
    I<18>:$PIPETX6EQCOEFF,
    I<1>:$PIPETX6EQDONE,
    I<18>:$PIPETX7EQCOEFF,
    I<1>:$PIPETX7EQDONE,
    I<1>:$PLEQRESETEIEOSCOUNT,
    I<1>:$PLGEN2UPSTREAMPREFERDEEMPH,
    I<1>:$RESETN,
    I<256>:$SAXISCCTDATA,
    I<8>:$SAXISCCTKEEP,
    I<1>:$SAXISCCTLAST,
    I<33>:$SAXISCCTUSER,
    I<1>:$SAXISCCTVALID,
    I<256>:$SAXISRQTDATA,
    I<8>:$SAXISRQTKEEP,
    I<1>:$SAXISRQTLAST,
    I<60>:$SAXISRQTUSER,
    I<1>:$SAXISRQTVALID,
    I<32>:$SPAREIN,
    I<1>:$USERCLK,

    // PCIE_3_1 parameters follows
    StrAttr:$ARI_CAP_ENABLE,
    StrAttr:$AXISTEN_IF_CC_ALIGNMENT_MODE,
    StrAttr:$AXISTEN_IF_CC_PARITY_CHK,
    StrAttr:$AXISTEN_IF_CQ_ALIGNMENT_MODE,
    StrAttr:$AXISTEN_IF_ENABLE_CLIENT_TAG,
    APIntAttr<I<18>>:$AXISTEN_IF_ENABLE_MSG_ROUTE,
    StrAttr:$AXISTEN_IF_ENABLE_RX_MSG_INTFC,
    StrAttr:$AXISTEN_IF_RC_ALIGNMENT_MODE,
    StrAttr:$AXISTEN_IF_RC_STRADDLE,
    StrAttr:$AXISTEN_IF_RQ_ALIGNMENT_MODE,
    StrAttr:$AXISTEN_IF_RQ_PARITY_CHK,
    APIntAttr<I<2>>:$AXISTEN_IF_WIDTH,
    StrAttr:$CRM_CORE_CLK_FREQ_500,
    APIntAttr<I<2>>:$CRM_USER_CLK_FREQ,
    StrAttr:$DEBUG_CFG_LOCAL_MGMT_REG_ACCESS_OVERRIDE,
    StrAttr:$DEBUG_PL_DISABLE_EI_INFER_IN_L0,
    StrAttr:$DEBUG_TL_DISABLE_RX_TLP_ORDER_CHECKS,
    APIntAttr<I<8>>:$DNSTREAM_LINK_NUM,
    APIntAttr<I<9>>:$LL_ACK_TIMEOUT,
    StrAttr:$LL_ACK_TIMEOUT_EN,
    SI64Attr:$LL_ACK_TIMEOUT_FUNC,
    APIntAttr<I<16>>:$LL_CPL_FC_UPDATE_TIMER,
    StrAttr:$LL_CPL_FC_UPDATE_TIMER_OVERRIDE,
    APIntAttr<I<16>>:$LL_FC_UPDATE_TIMER,
    StrAttr:$LL_FC_UPDATE_TIMER_OVERRIDE,
    APIntAttr<I<16>>:$LL_NP_FC_UPDATE_TIMER,
    StrAttr:$LL_NP_FC_UPDATE_TIMER_OVERRIDE,
    APIntAttr<I<16>>:$LL_P_FC_UPDATE_TIMER,
    StrAttr:$LL_P_FC_UPDATE_TIMER_OVERRIDE,
    APIntAttr<I<9>>:$LL_REPLAY_TIMEOUT,
    StrAttr:$LL_REPLAY_TIMEOUT_EN,
    SI64Attr:$LL_REPLAY_TIMEOUT_FUNC,
    APIntAttr<I<10>>:$LTR_TX_MESSAGE_MINIMUM_INTERVAL,
    StrAttr:$LTR_TX_MESSAGE_ON_FUNC_POWER_STATE_CHANGE,
    StrAttr:$LTR_TX_MESSAGE_ON_LTR_ENABLE,
    APIntAttr<I<12>>:$MCAP_CAP_NEXTPTR,
    StrAttr:$MCAP_CONFIGURE_OVERRIDE,
    StrAttr:$MCAP_ENABLE,
    StrAttr:$MCAP_EOS_DESIGN_SWITCH,
    APIntAttr<I<32>>:$MCAP_FPGA_BITSTREAM_VERSION,
    StrAttr:$MCAP_GATE_IO_ENABLE_DESIGN_SWITCH,
    StrAttr:$MCAP_GATE_MEM_ENABLE_DESIGN_SWITCH,
    StrAttr:$MCAP_INPUT_GATE_DESIGN_SWITCH,
    StrAttr:$MCAP_INTERRUPT_ON_MCAP_EOS,
    StrAttr:$MCAP_INTERRUPT_ON_MCAP_ERROR,
    APIntAttr<I<16>>:$MCAP_VSEC_ID,
    APIntAttr<I<12>>:$MCAP_VSEC_LEN,
    APIntAttr<I<4>>:$MCAP_VSEC_REV,
    StrAttr:$PF0_AER_CAP_ECRC_CHECK_CAPABLE,
    StrAttr:$PF0_AER_CAP_ECRC_GEN_CAPABLE,
    APIntAttr<I<12>>:$PF0_AER_CAP_NEXTPTR,
    APIntAttr<I<12>>:$PF0_ARI_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF0_ARI_CAP_NEXT_FUNC,
    APIntAttr<I<4>>:$PF0_ARI_CAP_VER,
    APIntAttr<I<6>>:$PF0_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR0_CONTROL,
    APIntAttr<I<6>>:$PF0_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR1_CONTROL,
    APIntAttr<I<5>>:$PF0_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF0_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR3_CONTROL,
    APIntAttr<I<5>>:$PF0_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF0_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_BAR5_CONTROL,
    APIntAttr<I<8>>:$PF0_BIST_REGISTER,
    APIntAttr<I<8>>:$PF0_CAPABILITY_POINTER,
    APIntAttr<I<24>>:$PF0_CLASS_CODE,
    APIntAttr<I<16>>:$PF0_DEVICE_ID,
    StrAttr:$PF0_DEV_CAP2_128B_CAS_ATOMIC_COMPLETER_SUPPORT,
    StrAttr:$PF0_DEV_CAP2_32B_ATOMIC_COMPLETER_SUPPORT,
    StrAttr:$PF0_DEV_CAP2_64B_ATOMIC_COMPLETER_SUPPORT,
    StrAttr:$PF0_DEV_CAP2_ARI_FORWARD_ENABLE,
    StrAttr:$PF0_DEV_CAP2_CPL_TIMEOUT_DISABLE,
    StrAttr:$PF0_DEV_CAP2_LTR_SUPPORT,
    APIntAttr<I<2>>:$PF0_DEV_CAP2_OBFF_SUPPORT,
    StrAttr:$PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT,
    SI64Attr:$PF0_DEV_CAP_ENDPOINT_L0S_LATENCY,
    SI64Attr:$PF0_DEV_CAP_ENDPOINT_L1_LATENCY,
    StrAttr:$PF0_DEV_CAP_EXT_TAG_SUPPORTED,
    StrAttr:$PF0_DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE,
    APIntAttr<I<3>>:$PF0_DEV_CAP_MAX_PAYLOAD_SIZE,
    APIntAttr<I<12>>:$PF0_DPA_CAP_NEXTPTR,
    APIntAttr<I<5>>:$PF0_DPA_CAP_SUB_STATE_CONTROL,
    StrAttr:$PF0_DPA_CAP_SUB_STATE_CONTROL_EN,
    APIntAttr<I<8>>:$PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION0,
    APIntAttr<I<8>>:$PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION1,
    APIntAttr<I<8>>:$PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION2,
    APIntAttr<I<8>>:$PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION3,
    APIntAttr<I<8>>:$PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION4,
    APIntAttr<I<8>>:$PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION5,
    APIntAttr<I<8>>:$PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION6,
    APIntAttr<I<8>>:$PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION7,
    APIntAttr<I<4>>:$PF0_DPA_CAP_VER,
    APIntAttr<I<12>>:$PF0_DSN_CAP_NEXTPTR,
    APIntAttr<I<5>>:$PF0_EXPANSION_ROM_APERTURE_SIZE,
    StrAttr:$PF0_EXPANSION_ROM_ENABLE,
    APIntAttr<I<8>>:$PF0_INTERRUPT_LINE,
    APIntAttr<I<3>>:$PF0_INTERRUPT_PIN,
    SI64Attr:$PF0_LINK_CAP_ASPM_SUPPORT,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN1,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN2,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN3,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN1,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN2,
    SI64Attr:$PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN3,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN1,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN2,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN3,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_GEN1,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_GEN2,
    SI64Attr:$PF0_LINK_CAP_L1_EXIT_LATENCY_GEN3,
    StrAttr:$PF0_LINK_STATUS_SLOT_CLOCK_CONFIG,
    APIntAttr<I<10>>:$PF0_LTR_CAP_MAX_NOSNOOP_LAT,
    APIntAttr<I<10>>:$PF0_LTR_CAP_MAX_SNOOP_LAT,
    APIntAttr<I<12>>:$PF0_LTR_CAP_NEXTPTR,
    APIntAttr<I<4>>:$PF0_LTR_CAP_VER,
    APIntAttr<I<8>>:$PF0_MSIX_CAP_NEXTPTR,
    SI64Attr:$PF0_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$PF0_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$PF0_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$PF0_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$PF0_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$PF0_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$PF0_MSI_CAP_NEXTPTR,
    StrAttr:$PF0_MSI_CAP_PERVECMASKCAP,
    APIntAttr<I<32>>:$PF0_PB_CAP_DATA_REG_D0,
    APIntAttr<I<32>>:$PF0_PB_CAP_DATA_REG_D0_SUSTAINED,
    APIntAttr<I<32>>:$PF0_PB_CAP_DATA_REG_D1,
    APIntAttr<I<32>>:$PF0_PB_CAP_DATA_REG_D3HOT,
    APIntAttr<I<12>>:$PF0_PB_CAP_NEXTPTR,
    StrAttr:$PF0_PB_CAP_SYSTEM_ALLOCATED,
    APIntAttr<I<4>>:$PF0_PB_CAP_VER,
    APIntAttr<I<8>>:$PF0_PM_CAP_ID,
    APIntAttr<I<8>>:$PF0_PM_CAP_NEXTPTR,
    StrAttr:$PF0_PM_CAP_PMESUPPORT_D0,
    StrAttr:$PF0_PM_CAP_PMESUPPORT_D1,
    StrAttr:$PF0_PM_CAP_PMESUPPORT_D3HOT,
    StrAttr:$PF0_PM_CAP_SUPP_D1_STATE,
    APIntAttr<I<3>>:$PF0_PM_CAP_VER_ID,
    StrAttr:$PF0_PM_CSR_NOSOFTRESET,
    StrAttr:$PF0_RBAR_CAP_ENABLE,
    APIntAttr<I<12>>:$PF0_RBAR_CAP_NEXTPTR,
    APIntAttr<I<20>>:$PF0_RBAR_CAP_SIZE0,
    APIntAttr<I<20>>:$PF0_RBAR_CAP_SIZE1,
    APIntAttr<I<20>>:$PF0_RBAR_CAP_SIZE2,
    APIntAttr<I<4>>:$PF0_RBAR_CAP_VER,
    APIntAttr<I<3>>:$PF0_RBAR_CONTROL_INDEX0,
    APIntAttr<I<3>>:$PF0_RBAR_CONTROL_INDEX1,
    APIntAttr<I<3>>:$PF0_RBAR_CONTROL_INDEX2,
    APIntAttr<I<5>>:$PF0_RBAR_CONTROL_SIZE0,
    APIntAttr<I<5>>:$PF0_RBAR_CONTROL_SIZE1,
    APIntAttr<I<5>>:$PF0_RBAR_CONTROL_SIZE2,
    APIntAttr<I<3>>:$PF0_RBAR_NUM,
    APIntAttr<I<8>>:$PF0_REVISION_ID,
    APIntAttr<I<12>>:$PF0_SECONDARY_PCIE_CAP_NEXTPTR,
    APIntAttr<I<5>>:$PF0_SRIOV_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF0_SRIOV_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR1_CONTROL,
    APIntAttr<I<5>>:$PF0_SRIOV_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF0_SRIOV_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR3_CONTROL,
    APIntAttr<I<5>>:$PF0_SRIOV_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF0_SRIOV_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF0_SRIOV_BAR5_CONTROL,
    APIntAttr<I<16>>:$PF0_SRIOV_CAP_INITIAL_VF,
    APIntAttr<I<12>>:$PF0_SRIOV_CAP_NEXTPTR,
    APIntAttr<I<16>>:$PF0_SRIOV_CAP_TOTAL_VF,
    APIntAttr<I<4>>:$PF0_SRIOV_CAP_VER,
    APIntAttr<I<16>>:$PF0_SRIOV_FIRST_VF_OFFSET,
    APIntAttr<I<16>>:$PF0_SRIOV_FUNC_DEP_LINK,
    APIntAttr<I<32>>:$PF0_SRIOV_SUPPORTED_PAGE_SIZE,
    APIntAttr<I<16>>:$PF0_SRIOV_VF_DEVICE_ID,
    APIntAttr<I<16>>:$PF0_SUBSYSTEM_ID,
    StrAttr:$PF0_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$PF0_TPHR_CAP_ENABLE,
    StrAttr:$PF0_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$PF0_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$PF0_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$PF0_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$PF0_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$PF0_TPHR_CAP_VER,
    StrAttr:$PF0_VC_CAP_ENABLE,
    APIntAttr<I<12>>:$PF0_VC_CAP_NEXTPTR,
    APIntAttr<I<4>>:$PF0_VC_CAP_VER,
    StrAttr:$PF1_AER_CAP_ECRC_CHECK_CAPABLE,
    StrAttr:$PF1_AER_CAP_ECRC_GEN_CAPABLE,
    APIntAttr<I<12>>:$PF1_AER_CAP_NEXTPTR,
    APIntAttr<I<12>>:$PF1_ARI_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF1_ARI_CAP_NEXT_FUNC,
    APIntAttr<I<6>>:$PF1_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR0_CONTROL,
    APIntAttr<I<6>>:$PF1_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR1_CONTROL,
    APIntAttr<I<5>>:$PF1_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF1_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR3_CONTROL,
    APIntAttr<I<5>>:$PF1_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF1_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_BAR5_CONTROL,
    APIntAttr<I<8>>:$PF1_BIST_REGISTER,
    APIntAttr<I<8>>:$PF1_CAPABILITY_POINTER,
    APIntAttr<I<24>>:$PF1_CLASS_CODE,
    APIntAttr<I<16>>:$PF1_DEVICE_ID,
    APIntAttr<I<3>>:$PF1_DEV_CAP_MAX_PAYLOAD_SIZE,
    APIntAttr<I<12>>:$PF1_DPA_CAP_NEXTPTR,
    APIntAttr<I<5>>:$PF1_DPA_CAP_SUB_STATE_CONTROL,
    StrAttr:$PF1_DPA_CAP_SUB_STATE_CONTROL_EN,
    APIntAttr<I<8>>:$PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION0,
    APIntAttr<I<8>>:$PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION1,
    APIntAttr<I<8>>:$PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION2,
    APIntAttr<I<8>>:$PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION3,
    APIntAttr<I<8>>:$PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION4,
    APIntAttr<I<8>>:$PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION5,
    APIntAttr<I<8>>:$PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION6,
    APIntAttr<I<8>>:$PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION7,
    APIntAttr<I<4>>:$PF1_DPA_CAP_VER,
    APIntAttr<I<12>>:$PF1_DSN_CAP_NEXTPTR,
    APIntAttr<I<5>>:$PF1_EXPANSION_ROM_APERTURE_SIZE,
    StrAttr:$PF1_EXPANSION_ROM_ENABLE,
    APIntAttr<I<8>>:$PF1_INTERRUPT_LINE,
    APIntAttr<I<3>>:$PF1_INTERRUPT_PIN,
    APIntAttr<I<8>>:$PF1_MSIX_CAP_NEXTPTR,
    SI64Attr:$PF1_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$PF1_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$PF1_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$PF1_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$PF1_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$PF1_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$PF1_MSI_CAP_NEXTPTR,
    StrAttr:$PF1_MSI_CAP_PERVECMASKCAP,
    APIntAttr<I<32>>:$PF1_PB_CAP_DATA_REG_D0,
    APIntAttr<I<32>>:$PF1_PB_CAP_DATA_REG_D0_SUSTAINED,
    APIntAttr<I<32>>:$PF1_PB_CAP_DATA_REG_D1,
    APIntAttr<I<32>>:$PF1_PB_CAP_DATA_REG_D3HOT,
    APIntAttr<I<12>>:$PF1_PB_CAP_NEXTPTR,
    StrAttr:$PF1_PB_CAP_SYSTEM_ALLOCATED,
    APIntAttr<I<4>>:$PF1_PB_CAP_VER,
    APIntAttr<I<8>>:$PF1_PM_CAP_ID,
    APIntAttr<I<8>>:$PF1_PM_CAP_NEXTPTR,
    APIntAttr<I<3>>:$PF1_PM_CAP_VER_ID,
    StrAttr:$PF1_RBAR_CAP_ENABLE,
    APIntAttr<I<12>>:$PF1_RBAR_CAP_NEXTPTR,
    APIntAttr<I<20>>:$PF1_RBAR_CAP_SIZE0,
    APIntAttr<I<20>>:$PF1_RBAR_CAP_SIZE1,
    APIntAttr<I<20>>:$PF1_RBAR_CAP_SIZE2,
    APIntAttr<I<4>>:$PF1_RBAR_CAP_VER,
    APIntAttr<I<3>>:$PF1_RBAR_CONTROL_INDEX0,
    APIntAttr<I<3>>:$PF1_RBAR_CONTROL_INDEX1,
    APIntAttr<I<3>>:$PF1_RBAR_CONTROL_INDEX2,
    APIntAttr<I<5>>:$PF1_RBAR_CONTROL_SIZE0,
    APIntAttr<I<5>>:$PF1_RBAR_CONTROL_SIZE1,
    APIntAttr<I<5>>:$PF1_RBAR_CONTROL_SIZE2,
    APIntAttr<I<3>>:$PF1_RBAR_NUM,
    APIntAttr<I<8>>:$PF1_REVISION_ID,
    APIntAttr<I<5>>:$PF1_SRIOV_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF1_SRIOV_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR1_CONTROL,
    APIntAttr<I<5>>:$PF1_SRIOV_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF1_SRIOV_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR3_CONTROL,
    APIntAttr<I<5>>:$PF1_SRIOV_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF1_SRIOV_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF1_SRIOV_BAR5_CONTROL,
    APIntAttr<I<16>>:$PF1_SRIOV_CAP_INITIAL_VF,
    APIntAttr<I<12>>:$PF1_SRIOV_CAP_NEXTPTR,
    APIntAttr<I<16>>:$PF1_SRIOV_CAP_TOTAL_VF,
    APIntAttr<I<4>>:$PF1_SRIOV_CAP_VER,
    APIntAttr<I<16>>:$PF1_SRIOV_FIRST_VF_OFFSET,
    APIntAttr<I<16>>:$PF1_SRIOV_FUNC_DEP_LINK,
    APIntAttr<I<32>>:$PF1_SRIOV_SUPPORTED_PAGE_SIZE,
    APIntAttr<I<16>>:$PF1_SRIOV_VF_DEVICE_ID,
    APIntAttr<I<16>>:$PF1_SUBSYSTEM_ID,
    StrAttr:$PF1_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$PF1_TPHR_CAP_ENABLE,
    StrAttr:$PF1_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$PF1_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$PF1_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$PF1_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$PF1_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$PF1_TPHR_CAP_VER,
    StrAttr:$PF2_AER_CAP_ECRC_CHECK_CAPABLE,
    StrAttr:$PF2_AER_CAP_ECRC_GEN_CAPABLE,
    APIntAttr<I<12>>:$PF2_AER_CAP_NEXTPTR,
    APIntAttr<I<12>>:$PF2_ARI_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF2_ARI_CAP_NEXT_FUNC,
    APIntAttr<I<6>>:$PF2_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_BAR0_CONTROL,
    APIntAttr<I<6>>:$PF2_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_BAR1_CONTROL,
    APIntAttr<I<5>>:$PF2_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF2_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_BAR3_CONTROL,
    APIntAttr<I<5>>:$PF2_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF2_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_BAR5_CONTROL,
    APIntAttr<I<8>>:$PF2_BIST_REGISTER,
    APIntAttr<I<8>>:$PF2_CAPABILITY_POINTER,
    APIntAttr<I<24>>:$PF2_CLASS_CODE,
    APIntAttr<I<16>>:$PF2_DEVICE_ID,
    APIntAttr<I<3>>:$PF2_DEV_CAP_MAX_PAYLOAD_SIZE,
    APIntAttr<I<12>>:$PF2_DPA_CAP_NEXTPTR,
    APIntAttr<I<5>>:$PF2_DPA_CAP_SUB_STATE_CONTROL,
    StrAttr:$PF2_DPA_CAP_SUB_STATE_CONTROL_EN,
    APIntAttr<I<8>>:$PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION0,
    APIntAttr<I<8>>:$PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION1,
    APIntAttr<I<8>>:$PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION2,
    APIntAttr<I<8>>:$PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION3,
    APIntAttr<I<8>>:$PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION4,
    APIntAttr<I<8>>:$PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION5,
    APIntAttr<I<8>>:$PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION6,
    APIntAttr<I<8>>:$PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION7,
    APIntAttr<I<4>>:$PF2_DPA_CAP_VER,
    APIntAttr<I<12>>:$PF2_DSN_CAP_NEXTPTR,
    APIntAttr<I<5>>:$PF2_EXPANSION_ROM_APERTURE_SIZE,
    StrAttr:$PF2_EXPANSION_ROM_ENABLE,
    APIntAttr<I<8>>:$PF2_INTERRUPT_LINE,
    APIntAttr<I<3>>:$PF2_INTERRUPT_PIN,
    APIntAttr<I<8>>:$PF2_MSIX_CAP_NEXTPTR,
    SI64Attr:$PF2_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$PF2_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$PF2_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$PF2_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$PF2_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$PF2_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$PF2_MSI_CAP_NEXTPTR,
    StrAttr:$PF2_MSI_CAP_PERVECMASKCAP,
    APIntAttr<I<32>>:$PF2_PB_CAP_DATA_REG_D0,
    APIntAttr<I<32>>:$PF2_PB_CAP_DATA_REG_D0_SUSTAINED,
    APIntAttr<I<32>>:$PF2_PB_CAP_DATA_REG_D1,
    APIntAttr<I<32>>:$PF2_PB_CAP_DATA_REG_D3HOT,
    APIntAttr<I<12>>:$PF2_PB_CAP_NEXTPTR,
    StrAttr:$PF2_PB_CAP_SYSTEM_ALLOCATED,
    APIntAttr<I<4>>:$PF2_PB_CAP_VER,
    APIntAttr<I<8>>:$PF2_PM_CAP_ID,
    APIntAttr<I<8>>:$PF2_PM_CAP_NEXTPTR,
    APIntAttr<I<3>>:$PF2_PM_CAP_VER_ID,
    StrAttr:$PF2_RBAR_CAP_ENABLE,
    APIntAttr<I<12>>:$PF2_RBAR_CAP_NEXTPTR,
    APIntAttr<I<20>>:$PF2_RBAR_CAP_SIZE0,
    APIntAttr<I<20>>:$PF2_RBAR_CAP_SIZE1,
    APIntAttr<I<20>>:$PF2_RBAR_CAP_SIZE2,
    APIntAttr<I<4>>:$PF2_RBAR_CAP_VER,
    APIntAttr<I<3>>:$PF2_RBAR_CONTROL_INDEX0,
    APIntAttr<I<3>>:$PF2_RBAR_CONTROL_INDEX1,
    APIntAttr<I<3>>:$PF2_RBAR_CONTROL_INDEX2,
    APIntAttr<I<5>>:$PF2_RBAR_CONTROL_SIZE0,
    APIntAttr<I<5>>:$PF2_RBAR_CONTROL_SIZE1,
    APIntAttr<I<5>>:$PF2_RBAR_CONTROL_SIZE2,
    APIntAttr<I<3>>:$PF2_RBAR_NUM,
    APIntAttr<I<8>>:$PF2_REVISION_ID,
    APIntAttr<I<5>>:$PF2_SRIOV_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_SRIOV_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF2_SRIOV_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_SRIOV_BAR1_CONTROL,
    APIntAttr<I<5>>:$PF2_SRIOV_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_SRIOV_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF2_SRIOV_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_SRIOV_BAR3_CONTROL,
    APIntAttr<I<5>>:$PF2_SRIOV_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_SRIOV_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF2_SRIOV_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF2_SRIOV_BAR5_CONTROL,
    APIntAttr<I<16>>:$PF2_SRIOV_CAP_INITIAL_VF,
    APIntAttr<I<12>>:$PF2_SRIOV_CAP_NEXTPTR,
    APIntAttr<I<16>>:$PF2_SRIOV_CAP_TOTAL_VF,
    APIntAttr<I<4>>:$PF2_SRIOV_CAP_VER,
    APIntAttr<I<16>>:$PF2_SRIOV_FIRST_VF_OFFSET,
    APIntAttr<I<16>>:$PF2_SRIOV_FUNC_DEP_LINK,
    APIntAttr<I<32>>:$PF2_SRIOV_SUPPORTED_PAGE_SIZE,
    APIntAttr<I<16>>:$PF2_SRIOV_VF_DEVICE_ID,
    APIntAttr<I<16>>:$PF2_SUBSYSTEM_ID,
    StrAttr:$PF2_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$PF2_TPHR_CAP_ENABLE,
    StrAttr:$PF2_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$PF2_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$PF2_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$PF2_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$PF2_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$PF2_TPHR_CAP_VER,
    StrAttr:$PF3_AER_CAP_ECRC_CHECK_CAPABLE,
    StrAttr:$PF3_AER_CAP_ECRC_GEN_CAPABLE,
    APIntAttr<I<12>>:$PF3_AER_CAP_NEXTPTR,
    APIntAttr<I<12>>:$PF3_ARI_CAP_NEXTPTR,
    APIntAttr<I<8>>:$PF3_ARI_CAP_NEXT_FUNC,
    APIntAttr<I<6>>:$PF3_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_BAR0_CONTROL,
    APIntAttr<I<6>>:$PF3_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_BAR1_CONTROL,
    APIntAttr<I<5>>:$PF3_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF3_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_BAR3_CONTROL,
    APIntAttr<I<5>>:$PF3_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF3_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_BAR5_CONTROL,
    APIntAttr<I<8>>:$PF3_BIST_REGISTER,
    APIntAttr<I<8>>:$PF3_CAPABILITY_POINTER,
    APIntAttr<I<24>>:$PF3_CLASS_CODE,
    APIntAttr<I<16>>:$PF3_DEVICE_ID,
    APIntAttr<I<3>>:$PF3_DEV_CAP_MAX_PAYLOAD_SIZE,
    APIntAttr<I<12>>:$PF3_DPA_CAP_NEXTPTR,
    APIntAttr<I<5>>:$PF3_DPA_CAP_SUB_STATE_CONTROL,
    StrAttr:$PF3_DPA_CAP_SUB_STATE_CONTROL_EN,
    APIntAttr<I<8>>:$PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION0,
    APIntAttr<I<8>>:$PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION1,
    APIntAttr<I<8>>:$PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION2,
    APIntAttr<I<8>>:$PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION3,
    APIntAttr<I<8>>:$PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION4,
    APIntAttr<I<8>>:$PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION5,
    APIntAttr<I<8>>:$PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION6,
    APIntAttr<I<8>>:$PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION7,
    APIntAttr<I<4>>:$PF3_DPA_CAP_VER,
    APIntAttr<I<12>>:$PF3_DSN_CAP_NEXTPTR,
    APIntAttr<I<5>>:$PF3_EXPANSION_ROM_APERTURE_SIZE,
    StrAttr:$PF3_EXPANSION_ROM_ENABLE,
    APIntAttr<I<8>>:$PF3_INTERRUPT_LINE,
    APIntAttr<I<3>>:$PF3_INTERRUPT_PIN,
    APIntAttr<I<8>>:$PF3_MSIX_CAP_NEXTPTR,
    SI64Attr:$PF3_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$PF3_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$PF3_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$PF3_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$PF3_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$PF3_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$PF3_MSI_CAP_NEXTPTR,
    StrAttr:$PF3_MSI_CAP_PERVECMASKCAP,
    APIntAttr<I<32>>:$PF3_PB_CAP_DATA_REG_D0,
    APIntAttr<I<32>>:$PF3_PB_CAP_DATA_REG_D0_SUSTAINED,
    APIntAttr<I<32>>:$PF3_PB_CAP_DATA_REG_D1,
    APIntAttr<I<32>>:$PF3_PB_CAP_DATA_REG_D3HOT,
    APIntAttr<I<12>>:$PF3_PB_CAP_NEXTPTR,
    StrAttr:$PF3_PB_CAP_SYSTEM_ALLOCATED,
    APIntAttr<I<4>>:$PF3_PB_CAP_VER,
    APIntAttr<I<8>>:$PF3_PM_CAP_ID,
    APIntAttr<I<8>>:$PF3_PM_CAP_NEXTPTR,
    APIntAttr<I<3>>:$PF3_PM_CAP_VER_ID,
    StrAttr:$PF3_RBAR_CAP_ENABLE,
    APIntAttr<I<12>>:$PF3_RBAR_CAP_NEXTPTR,
    APIntAttr<I<20>>:$PF3_RBAR_CAP_SIZE0,
    APIntAttr<I<20>>:$PF3_RBAR_CAP_SIZE1,
    APIntAttr<I<20>>:$PF3_RBAR_CAP_SIZE2,
    APIntAttr<I<4>>:$PF3_RBAR_CAP_VER,
    APIntAttr<I<3>>:$PF3_RBAR_CONTROL_INDEX0,
    APIntAttr<I<3>>:$PF3_RBAR_CONTROL_INDEX1,
    APIntAttr<I<3>>:$PF3_RBAR_CONTROL_INDEX2,
    APIntAttr<I<5>>:$PF3_RBAR_CONTROL_SIZE0,
    APIntAttr<I<5>>:$PF3_RBAR_CONTROL_SIZE1,
    APIntAttr<I<5>>:$PF3_RBAR_CONTROL_SIZE2,
    APIntAttr<I<3>>:$PF3_RBAR_NUM,
    APIntAttr<I<8>>:$PF3_REVISION_ID,
    APIntAttr<I<5>>:$PF3_SRIOV_BAR0_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_SRIOV_BAR0_CONTROL,
    APIntAttr<I<5>>:$PF3_SRIOV_BAR1_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_SRIOV_BAR1_CONTROL,
    APIntAttr<I<5>>:$PF3_SRIOV_BAR2_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_SRIOV_BAR2_CONTROL,
    APIntAttr<I<5>>:$PF3_SRIOV_BAR3_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_SRIOV_BAR3_CONTROL,
    APIntAttr<I<5>>:$PF3_SRIOV_BAR4_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_SRIOV_BAR4_CONTROL,
    APIntAttr<I<5>>:$PF3_SRIOV_BAR5_APERTURE_SIZE,
    APIntAttr<I<3>>:$PF3_SRIOV_BAR5_CONTROL,
    APIntAttr<I<16>>:$PF3_SRIOV_CAP_INITIAL_VF,
    APIntAttr<I<12>>:$PF3_SRIOV_CAP_NEXTPTR,
    APIntAttr<I<16>>:$PF3_SRIOV_CAP_TOTAL_VF,
    APIntAttr<I<4>>:$PF3_SRIOV_CAP_VER,
    APIntAttr<I<16>>:$PF3_SRIOV_FIRST_VF_OFFSET,
    APIntAttr<I<16>>:$PF3_SRIOV_FUNC_DEP_LINK,
    APIntAttr<I<32>>:$PF3_SRIOV_SUPPORTED_PAGE_SIZE,
    APIntAttr<I<16>>:$PF3_SRIOV_VF_DEVICE_ID,
    APIntAttr<I<16>>:$PF3_SUBSYSTEM_ID,
    StrAttr:$PF3_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$PF3_TPHR_CAP_ENABLE,
    StrAttr:$PF3_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$PF3_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$PF3_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$PF3_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$PF3_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$PF3_TPHR_CAP_VER,
    StrAttr:$PL_DISABLE_AUTO_EQ_SPEED_CHANGE_TO_GEN3,
    StrAttr:$PL_DISABLE_AUTO_SPEED_CHANGE_TO_GEN2,
    StrAttr:$PL_DISABLE_EI_INFER_IN_L0,
    StrAttr:$PL_DISABLE_GEN3_DC_BALANCE,
    StrAttr:$PL_DISABLE_GEN3_LFSR_UPDATE_ON_SKP,
    StrAttr:$PL_DISABLE_RETRAIN_ON_FRAMING_ERROR,
    StrAttr:$PL_DISABLE_SCRAMBLING,
    StrAttr:$PL_DISABLE_SYNC_HEADER_FRAMING_ERROR,
    StrAttr:$PL_DISABLE_UPCONFIG_CAPABLE,
    StrAttr:$PL_EQ_ADAPT_DISABLE_COEFF_CHECK,
    StrAttr:$PL_EQ_ADAPT_DISABLE_PRESET_CHECK,
    APIntAttr<I<5>>:$PL_EQ_ADAPT_ITER_COUNT,
    APIntAttr<I<2>>:$PL_EQ_ADAPT_REJECT_RETRY_COUNT,
    StrAttr:$PL_EQ_BYPASS_PHASE23,
    APIntAttr<I<3>>:$PL_EQ_DEFAULT_GEN3_RX_PRESET_HINT,
    APIntAttr<I<4>>:$PL_EQ_DEFAULT_GEN3_TX_PRESET,
    StrAttr:$PL_EQ_PHASE01_RX_ADAPT,
    StrAttr:$PL_EQ_SHORT_ADAPT_PHASE,
    APIntAttr<I<16>>:$PL_LANE0_EQ_CONTROL,
    APIntAttr<I<16>>:$PL_LANE1_EQ_CONTROL,
    APIntAttr<I<16>>:$PL_LANE2_EQ_CONTROL,
    APIntAttr<I<16>>:$PL_LANE3_EQ_CONTROL,
    APIntAttr<I<16>>:$PL_LANE4_EQ_CONTROL,
    APIntAttr<I<16>>:$PL_LANE5_EQ_CONTROL,
    APIntAttr<I<16>>:$PL_LANE6_EQ_CONTROL,
    APIntAttr<I<16>>:$PL_LANE7_EQ_CONTROL,
    APIntAttr<I<3>>:$PL_LINK_CAP_MAX_LINK_SPEED,
    APIntAttr<I<4>>:$PL_LINK_CAP_MAX_LINK_WIDTH,
    SI64Attr:$PL_N_FTS_COMCLK_GEN1,
    SI64Attr:$PL_N_FTS_COMCLK_GEN2,
    SI64Attr:$PL_N_FTS_COMCLK_GEN3,
    SI64Attr:$PL_N_FTS_GEN1,
    SI64Attr:$PL_N_FTS_GEN2,
    SI64Attr:$PL_N_FTS_GEN3,
    StrAttr:$PL_REPORT_ALL_PHY_ERRORS,
    StrAttr:$PL_SIM_FAST_LINK_TRAINING,
    StrAttr:$PL_UPSTREAM_FACING,
    APIntAttr<I<16>>:$PM_ASPML0S_TIMEOUT,
    APIntAttr<I<20>>:$PM_ASPML1_ENTRY_DELAY,
    StrAttr:$PM_ENABLE_L23_ENTRY,
    StrAttr:$PM_ENABLE_SLOT_POWER_CAPTURE,
    APIntAttr<I<32>>:$PM_L1_REENTRY_DELAY,
    APIntAttr<I<20>>:$PM_PME_SERVICE_TIMEOUT_DELAY,
    APIntAttr<I<16>>:$PM_PME_TURNOFF_ACK_DELAY,
    APIntAttr<I<32>>:$SIM_JTAG_IDCODE,
    StrAttr:$SIM_VERSION,
    SI64Attr:$SPARE_BIT0,
    SI64Attr:$SPARE_BIT1,
    SI64Attr:$SPARE_BIT2,
    SI64Attr:$SPARE_BIT3,
    SI64Attr:$SPARE_BIT4,
    SI64Attr:$SPARE_BIT5,
    SI64Attr:$SPARE_BIT6,
    SI64Attr:$SPARE_BIT7,
    SI64Attr:$SPARE_BIT8,
    APIntAttr<I<8>>:$SPARE_BYTE0,
    APIntAttr<I<8>>:$SPARE_BYTE1,
    APIntAttr<I<8>>:$SPARE_BYTE2,
    APIntAttr<I<8>>:$SPARE_BYTE3,
    APIntAttr<I<32>>:$SPARE_WORD0,
    APIntAttr<I<32>>:$SPARE_WORD1,
    APIntAttr<I<32>>:$SPARE_WORD2,
    APIntAttr<I<32>>:$SPARE_WORD3,
    StrAttr:$SRIOV_CAP_ENABLE,
    StrAttr:$TL_COMPLETION_RAM_SIZE_16K,
    APIntAttr<I<24>>:$TL_COMPL_TIMEOUT_REG0,
    APIntAttr<I<28>>:$TL_COMPL_TIMEOUT_REG1,
    APIntAttr<I<12>>:$TL_CREDITS_CD,
    APIntAttr<I<8>>:$TL_CREDITS_CH,
    APIntAttr<I<12>>:$TL_CREDITS_NPD,
    APIntAttr<I<8>>:$TL_CREDITS_NPH,
    APIntAttr<I<12>>:$TL_CREDITS_PD,
    APIntAttr<I<8>>:$TL_CREDITS_PH,
    StrAttr:$TL_ENABLE_MESSAGE_RID_CHECK_ENABLE,
    StrAttr:$TL_EXTENDED_CFG_EXTEND_INTERFACE_ENABLE,
    StrAttr:$TL_LEGACY_CFG_EXTEND_INTERFACE_ENABLE,
    StrAttr:$TL_LEGACY_MODE_ENABLE,
    APIntAttr<I<2>>:$TL_PF_ENABLE_REG,
    StrAttr:$TL_TX_MUX_STRICT_PRIORITY,
    StrAttr:$TWO_LAYER_MODE_DLCMSM_ENABLE,
    StrAttr:$TWO_LAYER_MODE_ENABLE,
    StrAttr:$TWO_LAYER_MODE_WIDTH_256,
    APIntAttr<I<12>>:$VF0_ARI_CAP_NEXTPTR,
    APIntAttr<I<8>>:$VF0_CAPABILITY_POINTER,
    SI64Attr:$VF0_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VF0_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VF0_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VF0_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VF0_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$VF0_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$VF0_PM_CAP_ID,
    APIntAttr<I<8>>:$VF0_PM_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF0_PM_CAP_VER_ID,
    StrAttr:$VF0_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$VF0_TPHR_CAP_ENABLE,
    StrAttr:$VF0_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$VF0_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF0_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$VF0_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$VF0_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$VF0_TPHR_CAP_VER,
    APIntAttr<I<12>>:$VF1_ARI_CAP_NEXTPTR,
    SI64Attr:$VF1_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VF1_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VF1_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VF1_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VF1_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$VF1_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$VF1_PM_CAP_ID,
    APIntAttr<I<8>>:$VF1_PM_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF1_PM_CAP_VER_ID,
    StrAttr:$VF1_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$VF1_TPHR_CAP_ENABLE,
    StrAttr:$VF1_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$VF1_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF1_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$VF1_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$VF1_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$VF1_TPHR_CAP_VER,
    APIntAttr<I<12>>:$VF2_ARI_CAP_NEXTPTR,
    SI64Attr:$VF2_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VF2_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VF2_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VF2_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VF2_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$VF2_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$VF2_PM_CAP_ID,
    APIntAttr<I<8>>:$VF2_PM_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF2_PM_CAP_VER_ID,
    StrAttr:$VF2_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$VF2_TPHR_CAP_ENABLE,
    StrAttr:$VF2_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$VF2_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF2_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$VF2_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$VF2_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$VF2_TPHR_CAP_VER,
    APIntAttr<I<12>>:$VF3_ARI_CAP_NEXTPTR,
    SI64Attr:$VF3_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VF3_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VF3_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VF3_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VF3_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$VF3_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$VF3_PM_CAP_ID,
    APIntAttr<I<8>>:$VF3_PM_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF3_PM_CAP_VER_ID,
    StrAttr:$VF3_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$VF3_TPHR_CAP_ENABLE,
    StrAttr:$VF3_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$VF3_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF3_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$VF3_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$VF3_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$VF3_TPHR_CAP_VER,
    APIntAttr<I<12>>:$VF4_ARI_CAP_NEXTPTR,
    SI64Attr:$VF4_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VF4_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VF4_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VF4_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VF4_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$VF4_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$VF4_PM_CAP_ID,
    APIntAttr<I<8>>:$VF4_PM_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF4_PM_CAP_VER_ID,
    StrAttr:$VF4_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$VF4_TPHR_CAP_ENABLE,
    StrAttr:$VF4_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$VF4_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF4_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$VF4_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$VF4_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$VF4_TPHR_CAP_VER,
    APIntAttr<I<12>>:$VF5_ARI_CAP_NEXTPTR,
    SI64Attr:$VF5_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VF5_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VF5_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VF5_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VF5_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$VF5_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$VF5_PM_CAP_ID,
    APIntAttr<I<8>>:$VF5_PM_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF5_PM_CAP_VER_ID,
    StrAttr:$VF5_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$VF5_TPHR_CAP_ENABLE,
    StrAttr:$VF5_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$VF5_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF5_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$VF5_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$VF5_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$VF5_TPHR_CAP_VER,
    APIntAttr<I<12>>:$VF6_ARI_CAP_NEXTPTR,
    SI64Attr:$VF6_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VF6_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VF6_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VF6_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VF6_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$VF6_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$VF6_PM_CAP_ID,
    APIntAttr<I<8>>:$VF6_PM_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF6_PM_CAP_VER_ID,
    StrAttr:$VF6_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$VF6_TPHR_CAP_ENABLE,
    StrAttr:$VF6_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$VF6_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF6_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$VF6_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$VF6_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$VF6_TPHR_CAP_VER,
    APIntAttr<I<12>>:$VF7_ARI_CAP_NEXTPTR,
    SI64Attr:$VF7_MSIX_CAP_PBA_BIR,
    APIntAttr<I<29>>:$VF7_MSIX_CAP_PBA_OFFSET,
    SI64Attr:$VF7_MSIX_CAP_TABLE_BIR,
    APIntAttr<I<29>>:$VF7_MSIX_CAP_TABLE_OFFSET,
    APIntAttr<I<11>>:$VF7_MSIX_CAP_TABLE_SIZE,
    SI64Attr:$VF7_MSI_CAP_MULTIMSGCAP,
    APIntAttr<I<8>>:$VF7_PM_CAP_ID,
    APIntAttr<I<8>>:$VF7_PM_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF7_PM_CAP_VER_ID,
    StrAttr:$VF7_TPHR_CAP_DEV_SPECIFIC_MODE,
    StrAttr:$VF7_TPHR_CAP_ENABLE,
    StrAttr:$VF7_TPHR_CAP_INT_VEC_MODE,
    APIntAttr<I<12>>:$VF7_TPHR_CAP_NEXTPTR,
    APIntAttr<I<3>>:$VF7_TPHR_CAP_ST_MODE_SEL,
    APIntAttr<I<2>>:$VF7_TPHR_CAP_ST_TABLE_LOC,
    APIntAttr<I<11>>:$VF7_TPHR_CAP_ST_TABLE_SIZE,
    APIntAttr<I<4>>:$VF7_TPHR_CAP_VER
  );

  let results = (outs
    I<3>:$CFGCURRENTSPEED,
    I<4>:$CFGDPASUBSTATECHANGE,
    I<1>:$CFGERRCOROUT,
    I<1>:$CFGERRFATALOUT,
    I<1>:$CFGERRNONFATALOUT,
    I<8>:$CFGEXTFUNCTIONNUMBER,
    I<1>:$CFGEXTREADRECEIVED,
    I<10>:$CFGEXTREGISTERNUMBER,
    I<4>:$CFGEXTWRITEBYTEENABLE,
    I<32>:$CFGEXTWRITEDATA,
    I<1>:$CFGEXTWRITERECEIVED,
    I<12>:$CFGFCCPLD,
    I<8>:$CFGFCCPLH,
    I<12>:$CFGFCNPD,
    I<8>:$CFGFCNPH,
    I<12>:$CFGFCPD,
    I<8>:$CFGFCPH,
    I<4>:$CFGFLRINPROCESS,
    I<12>:$CFGFUNCTIONPOWERSTATE,
    I<16>:$CFGFUNCTIONSTATUS,
    I<1>:$CFGHOTRESETOUT,
    I<32>:$CFGINTERRUPTMSIDATA,
    I<4>:$CFGINTERRUPTMSIENABLE,
    I<1>:$CFGINTERRUPTMSIFAIL,
    I<1>:$CFGINTERRUPTMSIMASKUPDATE,
    I<12>:$CFGINTERRUPTMSIMMENABLE,
    I<1>:$CFGINTERRUPTMSISENT,
    I<8>:$CFGINTERRUPTMSIVFENABLE,
    I<4>:$CFGINTERRUPTMSIXENABLE,
    I<1>:$CFGINTERRUPTMSIXFAIL,
    I<4>:$CFGINTERRUPTMSIXMASK,
    I<1>:$CFGINTERRUPTMSIXSENT,
    I<8>:$CFGINTERRUPTMSIXVFENABLE,
    I<8>:$CFGINTERRUPTMSIXVFMASK,
    I<1>:$CFGINTERRUPTSENT,
    I<2>:$CFGLINKPOWERSTATE,
    I<1>:$CFGLOCALERROR,
    I<1>:$CFGLTRENABLE,
    I<6>:$CFGLTSSMSTATE,
    I<3>:$CFGMAXPAYLOAD,
    I<3>:$CFGMAXREADREQ,
    I<32>:$CFGMGMTREADDATA,
    I<1>:$CFGMGMTREADWRITEDONE,
    I<1>:$CFGMSGRECEIVED,
    I<8>:$CFGMSGRECEIVEDDATA,
    I<5>:$CFGMSGRECEIVEDTYPE,
    I<1>:$CFGMSGTRANSMITDONE,
    I<4>:$CFGNEGOTIATEDWIDTH,
    I<2>:$CFGOBFFENABLE,
    I<16>:$CFGPERFUNCSTATUSDATA,
    I<1>:$CFGPERFUNCTIONUPDATEDONE,
    I<1>:$CFGPHYLINKDOWN,
    I<2>:$CFGPHYLINKSTATUS,
    I<1>:$CFGPLSTATUSCHANGE,
    I<1>:$CFGPOWERSTATECHANGEINTERRUPT,
    I<4>:$CFGRCBSTATUS,
    I<4>:$CFGTPHFUNCTIONNUM,
    I<4>:$CFGTPHREQUESTERENABLE,
    I<12>:$CFGTPHSTMODE,
    I<5>:$CFGTPHSTTADDRESS,
    I<1>:$CFGTPHSTTREADENABLE,
    I<4>:$CFGTPHSTTWRITEBYTEVALID,
    I<32>:$CFGTPHSTTWRITEDATA,
    I<1>:$CFGTPHSTTWRITEENABLE,
    I<8>:$CFGVFFLRINPROCESS,
    I<24>:$CFGVFPOWERSTATE,
    I<16>:$CFGVFSTATUS,
    I<8>:$CFGVFTPHREQUESTERENABLE,
    I<24>:$CFGVFTPHSTMODE,
    I<1>:$CONFMCAPDESIGNSWITCH,
    I<1>:$CONFMCAPEOS,
    I<1>:$CONFMCAPINUSEBYPCIE,
    I<1>:$CONFREQREADY,
    I<32>:$CONFRESPRDATA,
    I<1>:$CONFRESPVALID,
    I<16>:$DBGDATAOUT,
    I<1>:$DBGMCAPCSB,
    I<32>:$DBGMCAPDATA,
    I<1>:$DBGMCAPEOS,
    I<1>:$DBGMCAPERROR,
    I<1>:$DBGMCAPMODE,
    I<1>:$DBGMCAPRDATAVALID,
    I<1>:$DBGMCAPRDWRB,
    I<1>:$DBGMCAPRESET,
    I<1>:$DBGPLDATABLOCKRECEIVEDAFTEREDS,
    I<1>:$DBGPLGEN3FRAMINGERRORDETECTED,
    I<1>:$DBGPLGEN3SYNCHEADERERRORDETECTED,
    I<8>:$DBGPLINFERREDRXELECTRICALIDLE,
    I<16>:$DRPDO,
    I<1>:$DRPRDY,
    I<1>:$LL2LMMASTERTLPSENT0,
    I<1>:$LL2LMMASTERTLPSENT1,
    I<4>:$LL2LMMASTERTLPSENTTLPID0,
    I<4>:$LL2LMMASTERTLPSENTTLPID1,
    I<256>:$LL2LMMAXISRXTDATA,
    I<18>:$LL2LMMAXISRXTUSER,
    I<8>:$LL2LMMAXISRXTVALID,
    I<8>:$LL2LMSAXISTXTREADY,
    I<256>:$MAXISCQTDATA,
    I<8>:$MAXISCQTKEEP,
    I<1>:$MAXISCQTLAST,
    I<85>:$MAXISCQTUSER,
    I<1>:$MAXISCQTVALID,
    I<256>:$MAXISRCTDATA,
    I<8>:$MAXISRCTKEEP,
    I<1>:$MAXISRCTLAST,
    I<75>:$MAXISRCTUSER,
    I<1>:$MAXISRCTVALID,
    I<10>:$MICOMPLETIONRAMREADADDRESSAL,
    I<10>:$MICOMPLETIONRAMREADADDRESSAU,
    I<10>:$MICOMPLETIONRAMREADADDRESSBL,
    I<10>:$MICOMPLETIONRAMREADADDRESSBU,
    I<4>:$MICOMPLETIONRAMREADENABLEL,
    I<4>:$MICOMPLETIONRAMREADENABLEU,
    I<10>:$MICOMPLETIONRAMWRITEADDRESSAL,
    I<10>:$MICOMPLETIONRAMWRITEADDRESSAU,
    I<10>:$MICOMPLETIONRAMWRITEADDRESSBL,
    I<10>:$MICOMPLETIONRAMWRITEADDRESSBU,
    I<72>:$MICOMPLETIONRAMWRITEDATAL,
    I<72>:$MICOMPLETIONRAMWRITEDATAU,
    I<4>:$MICOMPLETIONRAMWRITEENABLEL,
    I<4>:$MICOMPLETIONRAMWRITEENABLEU,
    I<9>:$MIREPLAYRAMADDRESS,
    I<2>:$MIREPLAYRAMREADENABLE,
    I<144>:$MIREPLAYRAMWRITEDATA,
    I<2>:$MIREPLAYRAMWRITEENABLE,
    I<9>:$MIREQUESTRAMREADADDRESSA,
    I<9>:$MIREQUESTRAMREADADDRESSB,
    I<4>:$MIREQUESTRAMREADENABLE,
    I<9>:$MIREQUESTRAMWRITEADDRESSA,
    I<9>:$MIREQUESTRAMWRITEADDRESSB,
    I<144>:$MIREQUESTRAMWRITEDATA,
    I<4>:$MIREQUESTRAMWRITEENABLE,
    I<6>:$PCIECQNPREQCOUNT,
    I<1>:$PCIEPERST0B,
    I<1>:$PCIEPERST1B,
    I<4>:$PCIERQSEQNUM,
    I<1>:$PCIERQSEQNUMVLD,
    I<6>:$PCIERQTAG,
    I<2>:$PCIERQTAGAV,
    I<1>:$PCIERQTAGVLD,
    I<2>:$PCIETFCNPDAV,
    I<2>:$PCIETFCNPHAV,
    I<2>:$PIPERX0EQCONTROL,
    I<6>:$PIPERX0EQLPLFFS,
    I<4>:$PIPERX0EQLPTXPRESET,
    I<3>:$PIPERX0EQPRESET,
    I<1>:$PIPERX0POLARITY,
    I<2>:$PIPERX1EQCONTROL,
    I<6>:$PIPERX1EQLPLFFS,
    I<4>:$PIPERX1EQLPTXPRESET,
    I<3>:$PIPERX1EQPRESET,
    I<1>:$PIPERX1POLARITY,
    I<2>:$PIPERX2EQCONTROL,
    I<6>:$PIPERX2EQLPLFFS,
    I<4>:$PIPERX2EQLPTXPRESET,
    I<3>:$PIPERX2EQPRESET,
    I<1>:$PIPERX2POLARITY,
    I<2>:$PIPERX3EQCONTROL,
    I<6>:$PIPERX3EQLPLFFS,
    I<4>:$PIPERX3EQLPTXPRESET,
    I<3>:$PIPERX3EQPRESET,
    I<1>:$PIPERX3POLARITY,
    I<2>:$PIPERX4EQCONTROL,
    I<6>:$PIPERX4EQLPLFFS,
    I<4>:$PIPERX4EQLPTXPRESET,
    I<3>:$PIPERX4EQPRESET,
    I<1>:$PIPERX4POLARITY,
    I<2>:$PIPERX5EQCONTROL,
    I<6>:$PIPERX5EQLPLFFS,
    I<4>:$PIPERX5EQLPTXPRESET,
    I<3>:$PIPERX5EQPRESET,
    I<1>:$PIPERX5POLARITY,
    I<2>:$PIPERX6EQCONTROL,
    I<6>:$PIPERX6EQLPLFFS,
    I<4>:$PIPERX6EQLPTXPRESET,
    I<3>:$PIPERX6EQPRESET,
    I<1>:$PIPERX6POLARITY,
    I<2>:$PIPERX7EQCONTROL,
    I<6>:$PIPERX7EQLPLFFS,
    I<4>:$PIPERX7EQLPTXPRESET,
    I<3>:$PIPERX7EQPRESET,
    I<1>:$PIPERX7POLARITY,
    I<2>:$PIPETX0CHARISK,
    I<1>:$PIPETX0COMPLIANCE,
    I<32>:$PIPETX0DATA,
    I<1>:$PIPETX0DATAVALID,
    I<1>:$PIPETX0DEEMPH,
    I<1>:$PIPETX0ELECIDLE,
    I<2>:$PIPETX0EQCONTROL,
    I<6>:$PIPETX0EQDEEMPH,
    I<4>:$PIPETX0EQPRESET,
    I<3>:$PIPETX0MARGIN,
    I<2>:$PIPETX0POWERDOWN,
    I<2>:$PIPETX0RATE,
    I<1>:$PIPETX0RCVRDET,
    I<1>:$PIPETX0RESET,
    I<1>:$PIPETX0STARTBLOCK,
    I<1>:$PIPETX0SWING,
    I<2>:$PIPETX0SYNCHEADER,
    I<2>:$PIPETX1CHARISK,
    I<1>:$PIPETX1COMPLIANCE,
    I<32>:$PIPETX1DATA,
    I<1>:$PIPETX1DATAVALID,
    I<1>:$PIPETX1DEEMPH,
    I<1>:$PIPETX1ELECIDLE,
    I<2>:$PIPETX1EQCONTROL,
    I<6>:$PIPETX1EQDEEMPH,
    I<4>:$PIPETX1EQPRESET,
    I<3>:$PIPETX1MARGIN,
    I<2>:$PIPETX1POWERDOWN,
    I<2>:$PIPETX1RATE,
    I<1>:$PIPETX1RCVRDET,
    I<1>:$PIPETX1RESET,
    I<1>:$PIPETX1STARTBLOCK,
    I<1>:$PIPETX1SWING,
    I<2>:$PIPETX1SYNCHEADER,
    I<2>:$PIPETX2CHARISK,
    I<1>:$PIPETX2COMPLIANCE,
    I<32>:$PIPETX2DATA,
    I<1>:$PIPETX2DATAVALID,
    I<1>:$PIPETX2DEEMPH,
    I<1>:$PIPETX2ELECIDLE,
    I<2>:$PIPETX2EQCONTROL,
    I<6>:$PIPETX2EQDEEMPH,
    I<4>:$PIPETX2EQPRESET,
    I<3>:$PIPETX2MARGIN,
    I<2>:$PIPETX2POWERDOWN,
    I<2>:$PIPETX2RATE,
    I<1>:$PIPETX2RCVRDET,
    I<1>:$PIPETX2RESET,
    I<1>:$PIPETX2STARTBLOCK,
    I<1>:$PIPETX2SWING,
    I<2>:$PIPETX2SYNCHEADER,
    I<2>:$PIPETX3CHARISK,
    I<1>:$PIPETX3COMPLIANCE,
    I<32>:$PIPETX3DATA,
    I<1>:$PIPETX3DATAVALID,
    I<1>:$PIPETX3DEEMPH,
    I<1>:$PIPETX3ELECIDLE,
    I<2>:$PIPETX3EQCONTROL,
    I<6>:$PIPETX3EQDEEMPH,
    I<4>:$PIPETX3EQPRESET,
    I<3>:$PIPETX3MARGIN,
    I<2>:$PIPETX3POWERDOWN,
    I<2>:$PIPETX3RATE,
    I<1>:$PIPETX3RCVRDET,
    I<1>:$PIPETX3RESET,
    I<1>:$PIPETX3STARTBLOCK,
    I<1>:$PIPETX3SWING,
    I<2>:$PIPETX3SYNCHEADER,
    I<2>:$PIPETX4CHARISK,
    I<1>:$PIPETX4COMPLIANCE,
    I<32>:$PIPETX4DATA,
    I<1>:$PIPETX4DATAVALID,
    I<1>:$PIPETX4DEEMPH,
    I<1>:$PIPETX4ELECIDLE,
    I<2>:$PIPETX4EQCONTROL,
    I<6>:$PIPETX4EQDEEMPH,
    I<4>:$PIPETX4EQPRESET,
    I<3>:$PIPETX4MARGIN,
    I<2>:$PIPETX4POWERDOWN,
    I<2>:$PIPETX4RATE,
    I<1>:$PIPETX4RCVRDET,
    I<1>:$PIPETX4RESET,
    I<1>:$PIPETX4STARTBLOCK,
    I<1>:$PIPETX4SWING,
    I<2>:$PIPETX4SYNCHEADER,
    I<2>:$PIPETX5CHARISK,
    I<1>:$PIPETX5COMPLIANCE,
    I<32>:$PIPETX5DATA,
    I<1>:$PIPETX5DATAVALID,
    I<1>:$PIPETX5DEEMPH,
    I<1>:$PIPETX5ELECIDLE,
    I<2>:$PIPETX5EQCONTROL,
    I<6>:$PIPETX5EQDEEMPH,
    I<4>:$PIPETX5EQPRESET,
    I<3>:$PIPETX5MARGIN,
    I<2>:$PIPETX5POWERDOWN,
    I<2>:$PIPETX5RATE,
    I<1>:$PIPETX5RCVRDET,
    I<1>:$PIPETX5RESET,
    I<1>:$PIPETX5STARTBLOCK,
    I<1>:$PIPETX5SWING,
    I<2>:$PIPETX5SYNCHEADER,
    I<2>:$PIPETX6CHARISK,
    I<1>:$PIPETX6COMPLIANCE,
    I<32>:$PIPETX6DATA,
    I<1>:$PIPETX6DATAVALID,
    I<1>:$PIPETX6DEEMPH,
    I<1>:$PIPETX6ELECIDLE,
    I<2>:$PIPETX6EQCONTROL,
    I<6>:$PIPETX6EQDEEMPH,
    I<4>:$PIPETX6EQPRESET,
    I<3>:$PIPETX6MARGIN,
    I<2>:$PIPETX6POWERDOWN,
    I<2>:$PIPETX6RATE,
    I<1>:$PIPETX6RCVRDET,
    I<1>:$PIPETX6RESET,
    I<1>:$PIPETX6STARTBLOCK,
    I<1>:$PIPETX6SWING,
    I<2>:$PIPETX6SYNCHEADER,
    I<2>:$PIPETX7CHARISK,
    I<1>:$PIPETX7COMPLIANCE,
    I<32>:$PIPETX7DATA,
    I<1>:$PIPETX7DATAVALID,
    I<1>:$PIPETX7DEEMPH,
    I<1>:$PIPETX7ELECIDLE,
    I<2>:$PIPETX7EQCONTROL,
    I<6>:$PIPETX7EQDEEMPH,
    I<4>:$PIPETX7EQPRESET,
    I<3>:$PIPETX7MARGIN,
    I<2>:$PIPETX7POWERDOWN,
    I<2>:$PIPETX7RATE,
    I<1>:$PIPETX7RCVRDET,
    I<1>:$PIPETX7RESET,
    I<1>:$PIPETX7STARTBLOCK,
    I<1>:$PIPETX7SWING,
    I<2>:$PIPETX7SYNCHEADER,
    I<1>:$PLEQINPROGRESS,
    I<2>:$PLEQPHASE,
    I<4>:$SAXISCCTREADY,
    I<4>:$SAXISRQTREADY,
    I<32>:$SPAREOUT
  );
}

def PHASERuIN : XilinxPrimitiveOp<"PHASER_IN", []> {
  let summary = "PHASER_IN Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$COUNTERLOADEN,
    I<6>:$COUNTERLOADVAL,
    I<1>:$COUNTERREADEN,
    I<1>:$DIVIDERST,
    I<1>:$EDGEADV,
    I<1>:$FINEENABLE,
    I<1>:$FINEINC,
    I<1>:$FREQREFCLK,
    I<1>:$MEMREFCLK,
    I<1>:$PHASEREFCLK,
    I<2>:$RANKSEL,
    I<1>:$RST,
    I<1>:$SYNCIN,
    I<1>:$SYSCLK,

    // PHASER_IN parameters follows
    SI64Attr:$CLKOUT_DIV,
    StrAttr:$DQS_BIAS_MODE,
    StrAttr:$EN_ISERDES_RST,
    SI64Attr:$FINE_DELAY,
    StrAttr:$FREQ_REF_DIV,
    APIntAttr<I<1>>:$IS_RST_INVERTED,
    StrAttr:$MEMREFCLK_PERIOD,
    StrAttr:$OUTPUT_CLK_SRC,
    StrAttr:$PHASEREFCLK_PERIOD,
    StrAttr:$REFCLK_PERIOD,
    SI64Attr:$SEL_CLK_OFFSET,
    StrAttr:$SYNC_IN_DIV_RST
  );

  let results = (outs
    I<6>:$COUNTERREADVAL,
    I<1>:$FINEOVERFLOW,
    I<1>:$ICLK,
    I<1>:$ICLKDIV,
    I<1>:$ISERDESRST,
    I<1>:$RCLK
  );
}

def PHASERuINuPHY : XilinxPrimitiveOp<"PHASER_IN_PHY", []> {
  let summary = "PHASER_IN_PHY Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$BURSTPENDINGPHY,
    I<1>:$COUNTERLOADEN,
    I<6>:$COUNTERLOADVAL,
    I<1>:$COUNTERREADEN,
    I<2>:$ENCALIBPHY,
    I<1>:$FINEENABLE,
    I<1>:$FINEINC,
    I<1>:$FREQREFCLK,
    I<1>:$MEMREFCLK,
    I<1>:$PHASEREFCLK,
    I<2>:$RANKSELPHY,
    I<1>:$RST,
    I<1>:$RSTDQSFIND,
    I<1>:$SYNCIN,
    I<1>:$SYSCLK,

    // PHASER_IN_PHY parameters follows
    StrAttr:$BURST_MODE,
    SI64Attr:$CLKOUT_DIV,
    APIntAttr<I<1>>:$DQS_AUTO_RECAL,
    StrAttr:$DQS_BIAS_MODE,
    APIntAttr<I<3>>:$DQS_FIND_PATTERN,
    SI64Attr:$FINE_DELAY,
    StrAttr:$FREQ_REF_DIV,
    APIntAttr<I<1>>:$IS_RST_INVERTED,
    StrAttr:$MEMREFCLK_PERIOD,
    StrAttr:$OUTPUT_CLK_SRC,
    StrAttr:$PHASEREFCLK_PERIOD,
    StrAttr:$REFCLK_PERIOD,
    SI64Attr:$SEL_CLK_OFFSET,
    StrAttr:$SYNC_IN_DIV_RST,
    StrAttr:$WR_CYCLES
  );

  let results = (outs
    I<6>:$COUNTERREADVAL,
    I<1>:$DQSFOUND,
    I<1>:$DQSOUTOFRANGE,
    I<1>:$FINEOVERFLOW,
    I<1>:$ICLK,
    I<1>:$ICLKDIV,
    I<1>:$ISERDESRST,
    I<1>:$PHASELOCKED,
    I<1>:$RCLK,
    I<1>:$WRENABLE
  );
}

def PHASERuOUT : XilinxPrimitiveOp<"PHASER_OUT", []> {
  let summary = "PHASER_OUT Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$COARSEENABLE,
    I<1>:$COARSEINC,
    I<1>:$COUNTERLOADEN,
    I<1>:$COUNTERREADEN,
    I<1>:$DIVIDERST,
    I<1>:$EDGEADV,
    I<1>:$FINEENABLE,
    I<1>:$FINEINC,
    I<1>:$FREQREFCLK,
    I<1>:$MEMREFCLK,
    I<1>:$PHASEREFCLK,
    I<1>:$RST,
    I<1>:$SELFINEOCLKDELAY,
    I<1>:$SYNCIN,
    I<1>:$SYSCLK,
    I<9>:$COUNTERLOADVAL,

    // PHASER_OUT parameters follows
    StrAttr:$LOC,
    SI64Attr:$CLKOUT_DIV,
    StrAttr:$COARSE_BYPASS,
    SI64Attr:$COARSE_DELAY,
    StrAttr:$EN_OSERDES_RST,
    SI64Attr:$FINE_DELAY,
    APIntAttr<I<1>>:$IS_RST_INVERTED,
    StrAttr:$MEMREFCLK_PERIOD,
    StrAttr:$OCLKDELAY_INV,
    SI64Attr:$OCLK_DELAY,
    StrAttr:$OUTPUT_CLK_SRC,
    StrAttr:$PHASEREFCLK_PERIOD,
    APIntAttr<I<3>>:$PO,
    StrAttr:$REFCLK_PERIOD,
    StrAttr:$SYNC_IN_DIV_RST
  );

  let results = (outs
    I<1>:$COARSEOVERFLOW,
    I<1>:$FINEOVERFLOW,
    I<1>:$OCLK,
    I<1>:$OCLKDELAYED,
    I<1>:$OCLKDIV,
    I<1>:$OSERDESRST,
    I<9>:$COUNTERREADVAL
  );
}

def PHASERuOUTuPHY : XilinxPrimitiveOp<"PHASER_OUT_PHY", []> {
  let summary = "PHASER_OUT_PHY Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$BURSTPENDINGPHY,
    I<1>:$COARSEENABLE,
    I<1>:$COARSEINC,
    I<1>:$COUNTERLOADEN,
    I<1>:$COUNTERREADEN,
    I<1>:$FINEENABLE,
    I<1>:$FINEINC,
    I<1>:$FREQREFCLK,
    I<1>:$MEMREFCLK,
    I<1>:$PHASEREFCLK,
    I<1>:$RST,
    I<1>:$SELFINEOCLKDELAY,
    I<1>:$SYNCIN,
    I<1>:$SYSCLK,
    I<2>:$ENCALIBPHY,
    I<9>:$COUNTERLOADVAL,

    // PHASER_OUT_PHY parameters follows
    StrAttr:$LOC,
    SI64Attr:$CLKOUT_DIV,
    StrAttr:$COARSE_BYPASS,
    SI64Attr:$COARSE_DELAY,
    StrAttr:$DATA_CTL_N,
    StrAttr:$DATA_RD_CYCLES,
    SI64Attr:$FINE_DELAY,
    APIntAttr<I<1>>:$IS_RST_INVERTED,
    StrAttr:$MEMREFCLK_PERIOD,
    StrAttr:$OCLKDELAY_INV,
    SI64Attr:$OCLK_DELAY,
    StrAttr:$OUTPUT_CLK_SRC,
    StrAttr:$PHASEREFCLK_PERIOD,
    APIntAttr<I<3>>:$PO,
    StrAttr:$REFCLK_PERIOD,
    StrAttr:$SYNC_IN_DIV_RST
  );

  let results = (outs
    I<1>:$COARSEOVERFLOW,
    I<1>:$FINEOVERFLOW,
    I<1>:$OCLK,
    I<1>:$OCLKDELAYED,
    I<1>:$OCLKDIV,
    I<1>:$OSERDESRST,
    I<1>:$RDENABLE,
    I<2>:$CTSBUS,
    I<2>:$DQSBUS,
    I<2>:$DTSBUS,
    I<9>:$COUNTERREADVAL
  );
}

def PHASERuREF : XilinxPrimitiveOp<"PHASER_REF", []> {
  let summary = "PHASER_REF Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLKIN,
    I<1>:$PWRDWN,
    I<1>:$RST,

    // PHASER_REF parameters follows
    StrAttr:$LOC,
    APIntAttr<I<1>>:$IS_PWRDWN_INVERTED,
    APIntAttr<I<1>>:$IS_RST_INVERTED
  );

  let results = (outs
    I<1>:$LOCKED
  );
}

def PHYuCONTROL : XilinxPrimitiveOp<"PHY_CONTROL", []> {
  let summary = "PHY_CONTROL Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$MEMREFCLK,
    I<1>:$PHYCLK,
    I<1>:$PHYCTLMSTREMPTY,
    I<1>:$PHYCTLWRENABLE,
    I<1>:$PLLLOCK,
    I<1>:$READCALIBENABLE,
    I<1>:$REFDLLLOCK,
    I<1>:$RESET,
    I<1>:$SYNCIN,
    I<1>:$WRITECALIBENABLE,
    I<32>:$PHYCTLWD,

    // PHY_CONTROL parameters follows
    StrAttr:$LOC,
    SI64Attr:$AO_TOGGLE,
    APIntAttr<I<4>>:$AO_WRLVL_EN,
    StrAttr:$BURST_MODE,
    SI64Attr:$CLK_RATIO,
    SI64Attr:$CMD_OFFSET,
    SI64Attr:$CO_DURATION,
    StrAttr:$DATA_CTL_A_N,
    StrAttr:$DATA_CTL_B_N,
    StrAttr:$DATA_CTL_C_N,
    StrAttr:$DATA_CTL_D_N,
    StrAttr:$DISABLE_SEQ_MATCH,
    SI64Attr:$DI_DURATION,
    SI64Attr:$DO_DURATION,
    SI64Attr:$EVENTS_DELAY,
    SI64Attr:$FOUR_WINDOW_CLOCKS,
    StrAttr:$MULTI_REGION,
    StrAttr:$PHY_COUNT_ENABLE,
    SI64Attr:$RD_CMD_OFFSET_0,
    SI64Attr:$RD_CMD_OFFSET_1,
    SI64Attr:$RD_CMD_OFFSET_2,
    SI64Attr:$RD_CMD_OFFSET_3,
    SI64Attr:$RD_DURATION_0,
    SI64Attr:$RD_DURATION_1,
    SI64Attr:$RD_DURATION_2,
    SI64Attr:$RD_DURATION_3,
    StrAttr:$SYNC_MODE,
    SI64Attr:$WR_CMD_OFFSET_0,
    SI64Attr:$WR_CMD_OFFSET_1,
    SI64Attr:$WR_CMD_OFFSET_2,
    SI64Attr:$WR_CMD_OFFSET_3,
    SI64Attr:$WR_DURATION_0,
    SI64Attr:$WR_DURATION_1,
    SI64Attr:$WR_DURATION_2,
    SI64Attr:$WR_DURATION_3
  );

  let results = (outs
    I<1>:$PHYCTLALMOSTFULL,
    I<1>:$PHYCTLEMPTY,
    I<1>:$PHYCTLFULL,
    I<1>:$PHYCTLREADY,
    I<2>:$INRANKA,
    I<2>:$INRANKB,
    I<2>:$INRANKC,
    I<2>:$INRANKD,
    I<2>:$PCENABLECALIB,
    I<4>:$AUXOUTPUT,
    I<4>:$INBURSTPENDING,
    I<4>:$OUTBURSTPENDING
  );
}

def PLLE2uADV : XilinxPrimitiveOp<"PLLE2_ADV", []> {
  let summary = "PLLE2_ADV Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLKFBIN,
    I<1>:$CLKIN1,
    I<1>:$CLKIN2,
    I<1>:$CLKINSEL,
    I<7>:$DADDR,
    I<1>:$DCLK,
    I<1>:$DEN,
    I<16>:$DI,
    I<1>:$DWE,
    I<1>:$PWRDWN,
    I<1>:$RST,

    // PLLE2_ADV parameters follows
    StrAttr:$BANDWIDTH,
    SI64Attr:$CLKFBOUT_MULT,
    StrAttr:$CLKFBOUT_PHASE,
    StrAttr:$CLKIN1_PERIOD,
    StrAttr:$CLKIN2_PERIOD,
    SI64Attr:$CLKOUT0_DIVIDE,
    StrAttr:$CLKOUT0_DUTY_CYCLE,
    StrAttr:$CLKOUT0_PHASE,
    SI64Attr:$CLKOUT1_DIVIDE,
    StrAttr:$CLKOUT1_DUTY_CYCLE,
    StrAttr:$CLKOUT1_PHASE,
    SI64Attr:$CLKOUT2_DIVIDE,
    StrAttr:$CLKOUT2_DUTY_CYCLE,
    StrAttr:$CLKOUT2_PHASE,
    SI64Attr:$CLKOUT3_DIVIDE,
    StrAttr:$CLKOUT3_DUTY_CYCLE,
    StrAttr:$CLKOUT3_PHASE,
    SI64Attr:$CLKOUT4_DIVIDE,
    StrAttr:$CLKOUT4_DUTY_CYCLE,
    StrAttr:$CLKOUT4_PHASE,
    SI64Attr:$CLKOUT5_DIVIDE,
    StrAttr:$CLKOUT5_DUTY_CYCLE,
    StrAttr:$CLKOUT5_PHASE,
    StrAttr:$COMPENSATION,
    SI64Attr:$DIVCLK_DIVIDE,
    APIntAttr<I<1>>:$IS_CLKINSEL_INVERTED,
    APIntAttr<I<1>>:$IS_PWRDWN_INVERTED,
    APIntAttr<I<1>>:$IS_RST_INVERTED,
    StrAttr:$REF_JITTER1,
    StrAttr:$REF_JITTER2,
    StrAttr:$STARTUP_WAIT
  );

  let results = (outs
    I<1>:$CLKFBOUT,
    I<1>:$CLKOUT0,
    I<1>:$CLKOUT1,
    I<1>:$CLKOUT2,
    I<1>:$CLKOUT3,
    I<1>:$CLKOUT4,
    I<1>:$CLKOUT5,
    I<16>:$DO,
    I<1>:$DRDY,
    I<1>:$LOCKED
  );
}

def PLLE2uBASE : XilinxPrimitiveOp<"PLLE2_BASE", []> {
  let summary = "PLLE2_BASE Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLKFBIN,
    I<1>:$CLKIN1,
    I<1>:$PWRDWN,
    I<1>:$RST,

    // PLLE2_BASE parameters follows
    StrAttr:$BANDWIDTH,
    SI64Attr:$CLKFBOUT_MULT,
    StrAttr:$CLKFBOUT_PHASE,
    StrAttr:$CLKIN1_PERIOD,
    SI64Attr:$CLKOUT0_DIVIDE,
    StrAttr:$CLKOUT0_DUTY_CYCLE,
    StrAttr:$CLKOUT0_PHASE,
    SI64Attr:$CLKOUT1_DIVIDE,
    StrAttr:$CLKOUT1_DUTY_CYCLE,
    StrAttr:$CLKOUT1_PHASE,
    SI64Attr:$CLKOUT2_DIVIDE,
    StrAttr:$CLKOUT2_DUTY_CYCLE,
    StrAttr:$CLKOUT2_PHASE,
    SI64Attr:$CLKOUT3_DIVIDE,
    StrAttr:$CLKOUT3_DUTY_CYCLE,
    StrAttr:$CLKOUT3_PHASE,
    SI64Attr:$CLKOUT4_DIVIDE,
    StrAttr:$CLKOUT4_DUTY_CYCLE,
    StrAttr:$CLKOUT4_PHASE,
    SI64Attr:$CLKOUT5_DIVIDE,
    StrAttr:$CLKOUT5_DUTY_CYCLE,
    StrAttr:$CLKOUT5_PHASE,
    SI64Attr:$DIVCLK_DIVIDE,
    StrAttr:$REF_JITTER1,
    StrAttr:$STARTUP_WAIT,
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$CLKFBOUT,
    I<1>:$CLKOUT0,
    I<1>:$CLKOUT1,
    I<1>:$CLKOUT2,
    I<1>:$CLKOUT3,
    I<1>:$CLKOUT4,
    I<1>:$CLKOUT5,
    I<1>:$LOCKED
  );
}

def PLLE3uADV : XilinxPrimitiveOp<"PLLE3_ADV", []> {
  let summary = "PLLE3_ADV Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLKFBIN,
    I<1>:$CLKIN,
    I<1>:$CLKOUTPHYEN,
    I<7>:$DADDR,
    I<1>:$DCLK,
    I<1>:$DEN,
    I<16>:$DI,
    I<1>:$DWE,
    I<1>:$PWRDWN,
    I<1>:$RST,

    // PLLE3_ADV parameters follows
    SI64Attr:$CLKFBOUT_MULT,
    StrAttr:$CLKFBOUT_PHASE,
    StrAttr:$CLKIN_PERIOD,
    SI64Attr:$CLKOUT0_DIVIDE,
    StrAttr:$CLKOUT0_DUTY_CYCLE,
    StrAttr:$CLKOUT0_PHASE,
    SI64Attr:$CLKOUT1_DIVIDE,
    StrAttr:$CLKOUT1_DUTY_CYCLE,
    StrAttr:$CLKOUT1_PHASE,
    StrAttr:$CLKOUTPHY_MODE,
    StrAttr:$COMPENSATION,
    SI64Attr:$DIVCLK_DIVIDE,
    APIntAttr<I<1>>:$IS_CLKFBIN_INVERTED,
    APIntAttr<I<1>>:$IS_CLKIN_INVERTED,
    APIntAttr<I<1>>:$IS_PWRDWN_INVERTED,
    APIntAttr<I<1>>:$IS_RST_INVERTED,
    StrAttr:$REF_JITTER,
    StrAttr:$STARTUP_WAIT
  );

  let results = (outs
    I<1>:$CLKFBOUT,
    I<1>:$CLKOUT0,
    I<1>:$CLKOUT0B,
    I<1>:$CLKOUT1,
    I<1>:$CLKOUT1B,
    I<1>:$CLKOUTPHY,
    I<16>:$DO,
    I<1>:$DRDY,
    I<1>:$LOCKED
  );
}

def PLLE3uBASE : XilinxPrimitiveOp<"PLLE3_BASE", []> {
  let summary = "PLLE3_BASE Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLKFBIN,
    I<1>:$CLKIN,
    I<1>:$CLKOUTPHYEN,
    I<1>:$PWRDWN,
    I<1>:$RST,

    // PLLE3_BASE parameters follows
    SI64Attr:$CLKFBOUT_MULT,
    StrAttr:$CLKFBOUT_PHASE,
    StrAttr:$CLKIN_PERIOD,
    SI64Attr:$CLKOUT0_DIVIDE,
    StrAttr:$CLKOUT0_DUTY_CYCLE,
    StrAttr:$CLKOUT0_PHASE,
    SI64Attr:$CLKOUT1_DIVIDE,
    StrAttr:$CLKOUT1_DUTY_CYCLE,
    StrAttr:$CLKOUT1_PHASE,
    StrAttr:$CLKOUTPHY_MODE,
    SI64Attr:$DIVCLK_DIVIDE,
    APIntAttr<I<1>>:$IS_CLKFBIN_INVERTED,
    APIntAttr<I<1>>:$IS_CLKIN_INVERTED,
    APIntAttr<I<1>>:$IS_PWRDWN_INVERTED,
    APIntAttr<I<1>>:$IS_RST_INVERTED,
    StrAttr:$REF_JITTER,
    StrAttr:$STARTUP_WAIT
  );

  let results = (outs
    I<1>:$CLKFBOUT,
    I<1>:$CLKOUT0,
    I<1>:$CLKOUT0B,
    I<1>:$CLKOUT1,
    I<1>:$CLKOUT1B,
    I<1>:$CLKOUTPHY,
    I<1>:$LOCKED
  );
}

def PLLE4uADV : XilinxPrimitiveOp<"PLLE4_ADV", []> {
  let summary = "PLLE4_ADV Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLKFBIN,
    I<1>:$CLKIN,
    I<1>:$CLKOUTPHYEN,
    I<7>:$DADDR,
    I<1>:$DCLK,
    I<1>:$DEN,
    I<16>:$DI,
    I<1>:$DWE,
    I<1>:$PWRDWN,
    I<1>:$RST,

    // PLLE4_ADV parameters follows
    SI64Attr:$CLKFBOUT_MULT,
    StrAttr:$CLKFBOUT_PHASE,
    StrAttr:$CLKIN_PERIOD,
    SI64Attr:$CLKOUT0_DIVIDE,
    StrAttr:$CLKOUT0_DUTY_CYCLE,
    StrAttr:$CLKOUT0_PHASE,
    SI64Attr:$CLKOUT1_DIVIDE,
    StrAttr:$CLKOUT1_DUTY_CYCLE,
    StrAttr:$CLKOUT1_PHASE,
    StrAttr:$CLKOUTPHY_MODE,
    StrAttr:$COMPENSATION,
    SI64Attr:$DIVCLK_DIVIDE,
    APIntAttr<I<1>>:$IS_CLKFBIN_INVERTED,
    APIntAttr<I<1>>:$IS_CLKIN_INVERTED,
    APIntAttr<I<1>>:$IS_PWRDWN_INVERTED,
    APIntAttr<I<1>>:$IS_RST_INVERTED,
    StrAttr:$REF_JITTER,
    StrAttr:$STARTUP_WAIT
  );

  let results = (outs
    I<1>:$CLKFBOUT,
    I<1>:$CLKOUT0,
    I<1>:$CLKOUT0B,
    I<1>:$CLKOUT1,
    I<1>:$CLKOUT1B,
    I<1>:$CLKOUTPHY,
    I<16>:$DO,
    I<1>:$DRDY,
    I<1>:$LOCKED
  );
}

def PLLE4uBASE : XilinxPrimitiveOp<"PLLE4_BASE", []> {
  let summary = "PLLE4_BASE Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLKFBIN,
    I<1>:$CLKIN,
    I<1>:$CLKOUTPHYEN,
    I<1>:$PWRDWN,
    I<1>:$RST,

    // PLLE4_BASE parameters follows
    SI64Attr:$CLKFBOUT_MULT,
    StrAttr:$CLKFBOUT_PHASE,
    StrAttr:$CLKIN_PERIOD,
    SI64Attr:$CLKOUT0_DIVIDE,
    StrAttr:$CLKOUT0_DUTY_CYCLE,
    StrAttr:$CLKOUT0_PHASE,
    SI64Attr:$CLKOUT1_DIVIDE,
    StrAttr:$CLKOUT1_DUTY_CYCLE,
    StrAttr:$CLKOUT1_PHASE,
    StrAttr:$CLKOUTPHY_MODE,
    SI64Attr:$DIVCLK_DIVIDE,
    APIntAttr<I<1>>:$IS_CLKFBIN_INVERTED,
    APIntAttr<I<1>>:$IS_CLKIN_INVERTED,
    APIntAttr<I<1>>:$IS_PWRDWN_INVERTED,
    APIntAttr<I<1>>:$IS_RST_INVERTED,
    StrAttr:$REF_JITTER,
    StrAttr:$STARTUP_WAIT
  );

  let results = (outs
    I<1>:$CLKFBOUT,
    I<1>:$CLKOUT0,
    I<1>:$CLKOUT0B,
    I<1>:$CLKOUT1,
    I<1>:$CLKOUT1B,
    I<1>:$CLKOUTPHY,
    I<1>:$LOCKED
  );
}

def PS7 : XilinxPrimitiveOp<"PS7", []> {
  let summary = "PS7 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    InOut<15>:$DDRA,
    InOut<3>:$DDRBA,
    InOut<1>:$DDRCASB,
    InOut<1>:$DDRCKE,
    InOut<1>:$DDRCKN,
    InOut<1>:$DDRCKP,
    InOut<1>:$DDRCSB,
    InOut<4>:$DDRDM,
    InOut<32>:$DDRDQ,
    InOut<4>:$DDRDQSN,
    InOut<4>:$DDRDQSP,
    InOut<1>:$DDRDRSTB,
    InOut<1>:$DDRODT,
    InOut<1>:$DDRRASB,
    InOut<1>:$DDRVRN,
    InOut<1>:$DDRVRP,
    InOut<1>:$DDRWEB,
    InOut<54>:$MIO,
    InOut<1>:$PSCLK,
    InOut<1>:$PSPORB,
    InOut<1>:$PSSRSTB,
    I<4>:$DDRARB,
    I<1>:$DMA0ACLK,
    I<1>:$DMA0DAREADY,
    I<1>:$DMA0DRLAST,
    I<2>:$DMA0DRTYPE,
    I<1>:$DMA0DRVALID,
    I<1>:$DMA1ACLK,
    I<1>:$DMA1DAREADY,
    I<1>:$DMA1DRLAST,
    I<2>:$DMA1DRTYPE,
    I<1>:$DMA1DRVALID,
    I<1>:$DMA2ACLK,
    I<1>:$DMA2DAREADY,
    I<1>:$DMA2DRLAST,
    I<2>:$DMA2DRTYPE,
    I<1>:$DMA2DRVALID,
    I<1>:$DMA3ACLK,
    I<1>:$DMA3DAREADY,
    I<1>:$DMA3DRLAST,
    I<2>:$DMA3DRTYPE,
    I<1>:$DMA3DRVALID,
    I<1>:$EMIOCAN0PHYRX,
    I<1>:$EMIOCAN1PHYRX,
    I<1>:$EMIOENET0EXTINTIN,
    I<1>:$EMIOENET0GMIICOL,
    I<1>:$EMIOENET0GMIICRS,
    I<1>:$EMIOENET0GMIIRXCLK,
    I<8>:$EMIOENET0GMIIRXD,
    I<1>:$EMIOENET0GMIIRXDV,
    I<1>:$EMIOENET0GMIIRXER,
    I<1>:$EMIOENET0GMIITXCLK,
    I<1>:$EMIOENET0MDIOI,
    I<1>:$EMIOENET1EXTINTIN,
    I<1>:$EMIOENET1GMIICOL,
    I<1>:$EMIOENET1GMIICRS,
    I<1>:$EMIOENET1GMIIRXCLK,
    I<8>:$EMIOENET1GMIIRXD,
    I<1>:$EMIOENET1GMIIRXDV,
    I<1>:$EMIOENET1GMIIRXER,
    I<1>:$EMIOENET1GMIITXCLK,
    I<1>:$EMIOENET1MDIOI,
    I<64>:$EMIOGPIOI,
    I<1>:$EMIOI2C0SCLI,
    I<1>:$EMIOI2C0SDAI,
    I<1>:$EMIOI2C1SCLI,
    I<1>:$EMIOI2C1SDAI,
    I<1>:$EMIOPJTAGTCK,
    I<1>:$EMIOPJTAGTDI,
    I<1>:$EMIOPJTAGTMS,
    I<1>:$EMIOSDIO0CDN,
    I<1>:$EMIOSDIO0CLKFB,
    I<1>:$EMIOSDIO0CMDI,
    I<4>:$EMIOSDIO0DATAI,
    I<1>:$EMIOSDIO0WP,
    I<1>:$EMIOSDIO1CDN,
    I<1>:$EMIOSDIO1CLKFB,
    I<1>:$EMIOSDIO1CMDI,
    I<4>:$EMIOSDIO1DATAI,
    I<1>:$EMIOSDIO1WP,
    I<1>:$EMIOSPI0MI,
    I<1>:$EMIOSPI0SCLKI,
    I<1>:$EMIOSPI0SI,
    I<1>:$EMIOSPI0SSIN,
    I<1>:$EMIOSPI1MI,
    I<1>:$EMIOSPI1SCLKI,
    I<1>:$EMIOSPI1SI,
    I<1>:$EMIOSPI1SSIN,
    I<1>:$EMIOSRAMINTIN,
    I<1>:$EMIOTRACECLK,
    I<3>:$EMIOTTC0CLKI,
    I<3>:$EMIOTTC1CLKI,
    I<1>:$EMIOUART0CTSN,
    I<1>:$EMIOUART0DCDN,
    I<1>:$EMIOUART0DSRN,
    I<1>:$EMIOUART0RIN,
    I<1>:$EMIOUART0RX,
    I<1>:$EMIOUART1CTSN,
    I<1>:$EMIOUART1DCDN,
    I<1>:$EMIOUART1DSRN,
    I<1>:$EMIOUART1RIN,
    I<1>:$EMIOUART1RX,
    I<1>:$EMIOUSB0VBUSPWRFAULT,
    I<1>:$EMIOUSB1VBUSPWRFAULT,
    I<1>:$EMIOWDTCLKI,
    I<1>:$EVENTEVENTI,
    I<4>:$FCLKCLKTRIGN,
    I<1>:$FPGAIDLEN,
    I<4>:$FTMDTRACEINATID,
    I<1>:$FTMDTRACEINCLOCK,
    I<32>:$FTMDTRACEINDATA,
    I<1>:$FTMDTRACEINVALID,
    I<32>:$FTMTF2PDEBUG,
    I<4>:$FTMTF2PTRIG,
    I<4>:$FTMTP2FTRIGACK,
    I<20>:$IRQF2P,
    I<1>:$MAXIGP0ACLK,
    I<1>:$MAXIGP0ARREADY,
    I<1>:$MAXIGP0AWREADY,
    I<12>:$MAXIGP0BID,
    I<2>:$MAXIGP0BRESP,
    I<1>:$MAXIGP0BVALID,
    I<32>:$MAXIGP0RDATA,
    I<12>:$MAXIGP0RID,
    I<1>:$MAXIGP0RLAST,
    I<2>:$MAXIGP0RRESP,
    I<1>:$MAXIGP0RVALID,
    I<1>:$MAXIGP0WREADY,
    I<1>:$MAXIGP1ACLK,
    I<1>:$MAXIGP1ARREADY,
    I<1>:$MAXIGP1AWREADY,
    I<12>:$MAXIGP1BID,
    I<2>:$MAXIGP1BRESP,
    I<1>:$MAXIGP1BVALID,
    I<32>:$MAXIGP1RDATA,
    I<12>:$MAXIGP1RID,
    I<1>:$MAXIGP1RLAST,
    I<2>:$MAXIGP1RRESP,
    I<1>:$MAXIGP1RVALID,
    I<1>:$MAXIGP1WREADY,
    I<1>:$SAXIACPACLK,
    I<32>:$SAXIACPARADDR,
    I<2>:$SAXIACPARBURST,
    I<4>:$SAXIACPARCACHE,
    I<3>:$SAXIACPARID,
    I<4>:$SAXIACPARLEN,
    I<2>:$SAXIACPARLOCK,
    I<3>:$SAXIACPARPROT,
    I<4>:$SAXIACPARQOS,
    I<2>:$SAXIACPARSIZE,
    I<5>:$SAXIACPARUSER,
    I<1>:$SAXIACPARVALID,
    I<32>:$SAXIACPAWADDR,
    I<2>:$SAXIACPAWBURST,
    I<4>:$SAXIACPAWCACHE,
    I<3>:$SAXIACPAWID,
    I<4>:$SAXIACPAWLEN,
    I<2>:$SAXIACPAWLOCK,
    I<3>:$SAXIACPAWPROT,
    I<4>:$SAXIACPAWQOS,
    I<2>:$SAXIACPAWSIZE,
    I<5>:$SAXIACPAWUSER,
    I<1>:$SAXIACPAWVALID,
    I<1>:$SAXIACPBREADY,
    I<1>:$SAXIACPRREADY,
    I<64>:$SAXIACPWDATA,
    I<3>:$SAXIACPWID,
    I<1>:$SAXIACPWLAST,
    I<8>:$SAXIACPWSTRB,
    I<1>:$SAXIACPWVALID,
    I<1>:$SAXIGP0ACLK,
    I<32>:$SAXIGP0ARADDR,
    I<2>:$SAXIGP0ARBURST,
    I<4>:$SAXIGP0ARCACHE,
    I<6>:$SAXIGP0ARID,
    I<4>:$SAXIGP0ARLEN,
    I<2>:$SAXIGP0ARLOCK,
    I<3>:$SAXIGP0ARPROT,
    I<4>:$SAXIGP0ARQOS,
    I<2>:$SAXIGP0ARSIZE,
    I<1>:$SAXIGP0ARVALID,
    I<32>:$SAXIGP0AWADDR,
    I<2>:$SAXIGP0AWBURST,
    I<4>:$SAXIGP0AWCACHE,
    I<6>:$SAXIGP0AWID,
    I<4>:$SAXIGP0AWLEN,
    I<2>:$SAXIGP0AWLOCK,
    I<3>:$SAXIGP0AWPROT,
    I<4>:$SAXIGP0AWQOS,
    I<2>:$SAXIGP0AWSIZE,
    I<1>:$SAXIGP0AWVALID,
    I<1>:$SAXIGP0BREADY,
    I<1>:$SAXIGP0RREADY,
    I<32>:$SAXIGP0WDATA,
    I<6>:$SAXIGP0WID,
    I<1>:$SAXIGP0WLAST,
    I<4>:$SAXIGP0WSTRB,
    I<1>:$SAXIGP0WVALID,
    I<1>:$SAXIGP1ACLK,
    I<32>:$SAXIGP1ARADDR,
    I<2>:$SAXIGP1ARBURST,
    I<4>:$SAXIGP1ARCACHE,
    I<6>:$SAXIGP1ARID,
    I<4>:$SAXIGP1ARLEN,
    I<2>:$SAXIGP1ARLOCK,
    I<3>:$SAXIGP1ARPROT,
    I<4>:$SAXIGP1ARQOS,
    I<2>:$SAXIGP1ARSIZE,
    I<1>:$SAXIGP1ARVALID,
    I<32>:$SAXIGP1AWADDR,
    I<2>:$SAXIGP1AWBURST,
    I<4>:$SAXIGP1AWCACHE,
    I<6>:$SAXIGP1AWID,
    I<4>:$SAXIGP1AWLEN,
    I<2>:$SAXIGP1AWLOCK,
    I<3>:$SAXIGP1AWPROT,
    I<4>:$SAXIGP1AWQOS,
    I<2>:$SAXIGP1AWSIZE,
    I<1>:$SAXIGP1AWVALID,
    I<1>:$SAXIGP1BREADY,
    I<1>:$SAXIGP1RREADY,
    I<32>:$SAXIGP1WDATA,
    I<6>:$SAXIGP1WID,
    I<1>:$SAXIGP1WLAST,
    I<4>:$SAXIGP1WSTRB,
    I<1>:$SAXIGP1WVALID,
    I<1>:$SAXIHP0ACLK,
    I<32>:$SAXIHP0ARADDR,
    I<2>:$SAXIHP0ARBURST,
    I<4>:$SAXIHP0ARCACHE,
    I<6>:$SAXIHP0ARID,
    I<4>:$SAXIHP0ARLEN,
    I<2>:$SAXIHP0ARLOCK,
    I<3>:$SAXIHP0ARPROT,
    I<4>:$SAXIHP0ARQOS,
    I<2>:$SAXIHP0ARSIZE,
    I<1>:$SAXIHP0ARVALID,
    I<32>:$SAXIHP0AWADDR,
    I<2>:$SAXIHP0AWBURST,
    I<4>:$SAXIHP0AWCACHE,
    I<6>:$SAXIHP0AWID,
    I<4>:$SAXIHP0AWLEN,
    I<2>:$SAXIHP0AWLOCK,
    I<3>:$SAXIHP0AWPROT,
    I<4>:$SAXIHP0AWQOS,
    I<2>:$SAXIHP0AWSIZE,
    I<1>:$SAXIHP0AWVALID,
    I<1>:$SAXIHP0BREADY,
    I<1>:$SAXIHP0RDISSUECAP1EN,
    I<1>:$SAXIHP0RREADY,
    I<64>:$SAXIHP0WDATA,
    I<6>:$SAXIHP0WID,
    I<1>:$SAXIHP0WLAST,
    I<1>:$SAXIHP0WRISSUECAP1EN,
    I<8>:$SAXIHP0WSTRB,
    I<1>:$SAXIHP0WVALID,
    I<1>:$SAXIHP1ACLK,
    I<32>:$SAXIHP1ARADDR,
    I<2>:$SAXIHP1ARBURST,
    I<4>:$SAXIHP1ARCACHE,
    I<6>:$SAXIHP1ARID,
    I<4>:$SAXIHP1ARLEN,
    I<2>:$SAXIHP1ARLOCK,
    I<3>:$SAXIHP1ARPROT,
    I<4>:$SAXIHP1ARQOS,
    I<2>:$SAXIHP1ARSIZE,
    I<1>:$SAXIHP1ARVALID,
    I<32>:$SAXIHP1AWADDR,
    I<2>:$SAXIHP1AWBURST,
    I<4>:$SAXIHP1AWCACHE,
    I<6>:$SAXIHP1AWID,
    I<4>:$SAXIHP1AWLEN,
    I<2>:$SAXIHP1AWLOCK,
    I<3>:$SAXIHP1AWPROT,
    I<4>:$SAXIHP1AWQOS,
    I<2>:$SAXIHP1AWSIZE,
    I<1>:$SAXIHP1AWVALID,
    I<1>:$SAXIHP1BREADY,
    I<1>:$SAXIHP1RDISSUECAP1EN,
    I<1>:$SAXIHP1RREADY,
    I<64>:$SAXIHP1WDATA,
    I<6>:$SAXIHP1WID,
    I<1>:$SAXIHP1WLAST,
    I<1>:$SAXIHP1WRISSUECAP1EN,
    I<8>:$SAXIHP1WSTRB,
    I<1>:$SAXIHP1WVALID,
    I<1>:$SAXIHP2ACLK,
    I<32>:$SAXIHP2ARADDR,
    I<2>:$SAXIHP2ARBURST,
    I<4>:$SAXIHP2ARCACHE,
    I<6>:$SAXIHP2ARID,
    I<4>:$SAXIHP2ARLEN,
    I<2>:$SAXIHP2ARLOCK,
    I<3>:$SAXIHP2ARPROT,
    I<4>:$SAXIHP2ARQOS,
    I<2>:$SAXIHP2ARSIZE,
    I<1>:$SAXIHP2ARVALID,
    I<32>:$SAXIHP2AWADDR,
    I<2>:$SAXIHP2AWBURST,
    I<4>:$SAXIHP2AWCACHE,
    I<6>:$SAXIHP2AWID,
    I<4>:$SAXIHP2AWLEN,
    I<2>:$SAXIHP2AWLOCK,
    I<3>:$SAXIHP2AWPROT,
    I<4>:$SAXIHP2AWQOS,
    I<2>:$SAXIHP2AWSIZE,
    I<1>:$SAXIHP2AWVALID,
    I<1>:$SAXIHP2BREADY,
    I<1>:$SAXIHP2RDISSUECAP1EN,
    I<1>:$SAXIHP2RREADY,
    I<64>:$SAXIHP2WDATA,
    I<6>:$SAXIHP2WID,
    I<1>:$SAXIHP2WLAST,
    I<1>:$SAXIHP2WRISSUECAP1EN,
    I<8>:$SAXIHP2WSTRB,
    I<1>:$SAXIHP2WVALID,
    I<1>:$SAXIHP3ACLK,
    I<32>:$SAXIHP3ARADDR,
    I<2>:$SAXIHP3ARBURST,
    I<4>:$SAXIHP3ARCACHE,
    I<6>:$SAXIHP3ARID,
    I<4>:$SAXIHP3ARLEN,
    I<2>:$SAXIHP3ARLOCK,
    I<3>:$SAXIHP3ARPROT,
    I<4>:$SAXIHP3ARQOS,
    I<2>:$SAXIHP3ARSIZE,
    I<1>:$SAXIHP3ARVALID,
    I<32>:$SAXIHP3AWADDR,
    I<2>:$SAXIHP3AWBURST,
    I<4>:$SAXIHP3AWCACHE,
    I<6>:$SAXIHP3AWID,
    I<4>:$SAXIHP3AWLEN,
    I<2>:$SAXIHP3AWLOCK,
    I<3>:$SAXIHP3AWPROT,
    I<4>:$SAXIHP3AWQOS,
    I<2>:$SAXIHP3AWSIZE,
    I<1>:$SAXIHP3AWVALID,
    I<1>:$SAXIHP3BREADY,
    I<1>:$SAXIHP3RDISSUECAP1EN,
    I<1>:$SAXIHP3RREADY,
    I<64>:$SAXIHP3WDATA,
    I<6>:$SAXIHP3WID,
    I<1>:$SAXIHP3WLAST,
    I<1>:$SAXIHP3WRISSUECAP1EN,
    I<8>:$SAXIHP3WSTRB,
    I<1>:$SAXIHP3WVALID

    // PS7 does not contain any parameters
  );

  let results = (outs
    I<2>:$DMA0DATYPE,
    I<1>:$DMA0DAVALID,
    I<1>:$DMA0DRREADY,
    I<1>:$DMA0RSTN,
    I<2>:$DMA1DATYPE,
    I<1>:$DMA1DAVALID,
    I<1>:$DMA1DRREADY,
    I<1>:$DMA1RSTN,
    I<2>:$DMA2DATYPE,
    I<1>:$DMA2DAVALID,
    I<1>:$DMA2DRREADY,
    I<1>:$DMA2RSTN,
    I<2>:$DMA3DATYPE,
    I<1>:$DMA3DAVALID,
    I<1>:$DMA3DRREADY,
    I<1>:$DMA3RSTN,
    I<1>:$EMIOCAN0PHYTX,
    I<1>:$EMIOCAN1PHYTX,
    I<8>:$EMIOENET0GMIITXD,
    I<1>:$EMIOENET0GMIITXEN,
    I<1>:$EMIOENET0GMIITXER,
    I<1>:$EMIOENET0MDIOMDC,
    I<1>:$EMIOENET0MDIOO,
    I<1>:$EMIOENET0MDIOTN,
    I<1>:$EMIOENET0PTPDELAYREQRX,
    I<1>:$EMIOENET0PTPDELAYREQTX,
    I<1>:$EMIOENET0PTPPDELAYREQRX,
    I<1>:$EMIOENET0PTPPDELAYREQTX,
    I<1>:$EMIOENET0PTPPDELAYRESPRX,
    I<1>:$EMIOENET0PTPPDELAYRESPTX,
    I<1>:$EMIOENET0PTPSYNCFRAMERX,
    I<1>:$EMIOENET0PTPSYNCFRAMETX,
    I<1>:$EMIOENET0SOFRX,
    I<1>:$EMIOENET0SOFTX,
    I<8>:$EMIOENET1GMIITXD,
    I<1>:$EMIOENET1GMIITXEN,
    I<1>:$EMIOENET1GMIITXER,
    I<1>:$EMIOENET1MDIOMDC,
    I<1>:$EMIOENET1MDIOO,
    I<1>:$EMIOENET1MDIOTN,
    I<1>:$EMIOENET1PTPDELAYREQRX,
    I<1>:$EMIOENET1PTPDELAYREQTX,
    I<1>:$EMIOENET1PTPPDELAYREQRX,
    I<1>:$EMIOENET1PTPPDELAYREQTX,
    I<1>:$EMIOENET1PTPPDELAYRESPRX,
    I<1>:$EMIOENET1PTPPDELAYRESPTX,
    I<1>:$EMIOENET1PTPSYNCFRAMERX,
    I<1>:$EMIOENET1PTPSYNCFRAMETX,
    I<1>:$EMIOENET1SOFRX,
    I<1>:$EMIOENET1SOFTX,
    I<64>:$EMIOGPIOO,
    I<64>:$EMIOGPIOTN,
    I<1>:$EMIOI2C0SCLO,
    I<1>:$EMIOI2C0SCLTN,
    I<1>:$EMIOI2C0SDAO,
    I<1>:$EMIOI2C0SDATN,
    I<1>:$EMIOI2C1SCLO,
    I<1>:$EMIOI2C1SCLTN,
    I<1>:$EMIOI2C1SDAO,
    I<1>:$EMIOI2C1SDATN,
    I<1>:$EMIOPJTAGTDO,
    I<1>:$EMIOPJTAGTDTN,
    I<1>:$EMIOSDIO0BUSPOW,
    I<3>:$EMIOSDIO0BUSVOLT,
    I<1>:$EMIOSDIO0CLK,
    I<1>:$EMIOSDIO0CMDO,
    I<1>:$EMIOSDIO0CMDTN,
    I<4>:$EMIOSDIO0DATAO,
    I<4>:$EMIOSDIO0DATATN,
    I<1>:$EMIOSDIO0LED,
    I<1>:$EMIOSDIO1BUSPOW,
    I<3>:$EMIOSDIO1BUSVOLT,
    I<1>:$EMIOSDIO1CLK,
    I<1>:$EMIOSDIO1CMDO,
    I<1>:$EMIOSDIO1CMDTN,
    I<4>:$EMIOSDIO1DATAO,
    I<4>:$EMIOSDIO1DATATN,
    I<1>:$EMIOSDIO1LED,
    I<1>:$EMIOSPI0MO,
    I<1>:$EMIOSPI0MOTN,
    I<1>:$EMIOSPI0SCLKO,
    I<1>:$EMIOSPI0SCLKTN,
    I<1>:$EMIOSPI0SO,
    I<1>:$EMIOSPI0SSNTN,
    I<3>:$EMIOSPI0SSON,
    I<1>:$EMIOSPI0STN,
    I<1>:$EMIOSPI1MO,
    I<1>:$EMIOSPI1MOTN,
    I<1>:$EMIOSPI1SCLKO,
    I<1>:$EMIOSPI1SCLKTN,
    I<1>:$EMIOSPI1SO,
    I<1>:$EMIOSPI1SSNTN,
    I<3>:$EMIOSPI1SSON,
    I<1>:$EMIOSPI1STN,
    I<1>:$EMIOTRACECTL,
    I<32>:$EMIOTRACEDATA,
    I<3>:$EMIOTTC0WAVEO,
    I<3>:$EMIOTTC1WAVEO,
    I<1>:$EMIOUART0DTRN,
    I<1>:$EMIOUART0RTSN,
    I<1>:$EMIOUART0TX,
    I<1>:$EMIOUART1DTRN,
    I<1>:$EMIOUART1RTSN,
    I<1>:$EMIOUART1TX,
    I<2>:$EMIOUSB0PORTINDCTL,
    I<1>:$EMIOUSB0VBUSPWRSELECT,
    I<2>:$EMIOUSB1PORTINDCTL,
    I<1>:$EMIOUSB1VBUSPWRSELECT,
    I<1>:$EMIOWDTRSTO,
    I<1>:$EVENTEVENTO,
    I<2>:$EVENTSTANDBYWFE,
    I<2>:$EVENTSTANDBYWFI,
    I<4>:$FCLKCLK,
    I<4>:$FCLKRESETN,
    I<4>:$FTMTF2PTRIGACK,
    I<32>:$FTMTP2FDEBUG,
    I<4>:$FTMTP2FTRIG,
    I<29>:$IRQP2F,
    I<32>:$MAXIGP0ARADDR,
    I<2>:$MAXIGP0ARBURST,
    I<4>:$MAXIGP0ARCACHE,
    I<1>:$MAXIGP0ARESETN,
    I<12>:$MAXIGP0ARID,
    I<4>:$MAXIGP0ARLEN,
    I<2>:$MAXIGP0ARLOCK,
    I<3>:$MAXIGP0ARPROT,
    I<4>:$MAXIGP0ARQOS,
    I<2>:$MAXIGP0ARSIZE,
    I<1>:$MAXIGP0ARVALID,
    I<32>:$MAXIGP0AWADDR,
    I<2>:$MAXIGP0AWBURST,
    I<4>:$MAXIGP0AWCACHE,
    I<12>:$MAXIGP0AWID,
    I<4>:$MAXIGP0AWLEN,
    I<2>:$MAXIGP0AWLOCK,
    I<3>:$MAXIGP0AWPROT,
    I<4>:$MAXIGP0AWQOS,
    I<2>:$MAXIGP0AWSIZE,
    I<1>:$MAXIGP0AWVALID,
    I<1>:$MAXIGP0BREADY,
    I<1>:$MAXIGP0RREADY,
    I<32>:$MAXIGP0WDATA,
    I<12>:$MAXIGP0WID,
    I<1>:$MAXIGP0WLAST,
    I<4>:$MAXIGP0WSTRB,
    I<1>:$MAXIGP0WVALID,
    I<32>:$MAXIGP1ARADDR,
    I<2>:$MAXIGP1ARBURST,
    I<4>:$MAXIGP1ARCACHE,
    I<1>:$MAXIGP1ARESETN,
    I<12>:$MAXIGP1ARID,
    I<4>:$MAXIGP1ARLEN,
    I<2>:$MAXIGP1ARLOCK,
    I<3>:$MAXIGP1ARPROT,
    I<4>:$MAXIGP1ARQOS,
    I<2>:$MAXIGP1ARSIZE,
    I<1>:$MAXIGP1ARVALID,
    I<32>:$MAXIGP1AWADDR,
    I<2>:$MAXIGP1AWBURST,
    I<4>:$MAXIGP1AWCACHE,
    I<12>:$MAXIGP1AWID,
    I<4>:$MAXIGP1AWLEN,
    I<2>:$MAXIGP1AWLOCK,
    I<3>:$MAXIGP1AWPROT,
    I<4>:$MAXIGP1AWQOS,
    I<2>:$MAXIGP1AWSIZE,
    I<1>:$MAXIGP1AWVALID,
    I<1>:$MAXIGP1BREADY,
    I<1>:$MAXIGP1RREADY,
    I<32>:$MAXIGP1WDATA,
    I<12>:$MAXIGP1WID,
    I<1>:$MAXIGP1WLAST,
    I<4>:$MAXIGP1WSTRB,
    I<1>:$MAXIGP1WVALID,
    I<1>:$SAXIACPARESETN,
    I<1>:$SAXIACPARREADY,
    I<1>:$SAXIACPAWREADY,
    I<3>:$SAXIACPBID,
    I<2>:$SAXIACPBRESP,
    I<1>:$SAXIACPBVALID,
    I<64>:$SAXIACPRDATA,
    I<3>:$SAXIACPRID,
    I<1>:$SAXIACPRLAST,
    I<2>:$SAXIACPRRESP,
    I<1>:$SAXIACPRVALID,
    I<1>:$SAXIACPWREADY,
    I<1>:$SAXIGP0ARESETN,
    I<1>:$SAXIGP0ARREADY,
    I<1>:$SAXIGP0AWREADY,
    I<6>:$SAXIGP0BID,
    I<2>:$SAXIGP0BRESP,
    I<1>:$SAXIGP0BVALID,
    I<32>:$SAXIGP0RDATA,
    I<6>:$SAXIGP0RID,
    I<1>:$SAXIGP0RLAST,
    I<2>:$SAXIGP0RRESP,
    I<1>:$SAXIGP0RVALID,
    I<1>:$SAXIGP0WREADY,
    I<1>:$SAXIGP1ARESETN,
    I<1>:$SAXIGP1ARREADY,
    I<1>:$SAXIGP1AWREADY,
    I<6>:$SAXIGP1BID,
    I<2>:$SAXIGP1BRESP,
    I<1>:$SAXIGP1BVALID,
    I<32>:$SAXIGP1RDATA,
    I<6>:$SAXIGP1RID,
    I<1>:$SAXIGP1RLAST,
    I<2>:$SAXIGP1RRESP,
    I<1>:$SAXIGP1RVALID,
    I<1>:$SAXIGP1WREADY,
    I<1>:$SAXIHP0ARESETN,
    I<1>:$SAXIHP0ARREADY,
    I<1>:$SAXIHP0AWREADY,
    I<6>:$SAXIHP0BID,
    I<2>:$SAXIHP0BRESP,
    I<1>:$SAXIHP0BVALID,
    I<3>:$SAXIHP0RACOUNT,
    I<8>:$SAXIHP0RCOUNT,
    I<64>:$SAXIHP0RDATA,
    I<6>:$SAXIHP0RID,
    I<1>:$SAXIHP0RLAST,
    I<2>:$SAXIHP0RRESP,
    I<1>:$SAXIHP0RVALID,
    I<6>:$SAXIHP0WACOUNT,
    I<8>:$SAXIHP0WCOUNT,
    I<1>:$SAXIHP0WREADY,
    I<1>:$SAXIHP1ARESETN,
    I<1>:$SAXIHP1ARREADY,
    I<1>:$SAXIHP1AWREADY,
    I<6>:$SAXIHP1BID,
    I<2>:$SAXIHP1BRESP,
    I<1>:$SAXIHP1BVALID,
    I<3>:$SAXIHP1RACOUNT,
    I<8>:$SAXIHP1RCOUNT,
    I<64>:$SAXIHP1RDATA,
    I<6>:$SAXIHP1RID,
    I<1>:$SAXIHP1RLAST,
    I<2>:$SAXIHP1RRESP,
    I<1>:$SAXIHP1RVALID,
    I<6>:$SAXIHP1WACOUNT,
    I<8>:$SAXIHP1WCOUNT,
    I<1>:$SAXIHP1WREADY,
    I<1>:$SAXIHP2ARESETN,
    I<1>:$SAXIHP2ARREADY,
    I<1>:$SAXIHP2AWREADY,
    I<6>:$SAXIHP2BID,
    I<2>:$SAXIHP2BRESP,
    I<1>:$SAXIHP2BVALID,
    I<3>:$SAXIHP2RACOUNT,
    I<8>:$SAXIHP2RCOUNT,
    I<64>:$SAXIHP2RDATA,
    I<6>:$SAXIHP2RID,
    I<1>:$SAXIHP2RLAST,
    I<2>:$SAXIHP2RRESP,
    I<1>:$SAXIHP2RVALID,
    I<6>:$SAXIHP2WACOUNT,
    I<8>:$SAXIHP2WCOUNT,
    I<1>:$SAXIHP2WREADY,
    I<1>:$SAXIHP3ARESETN,
    I<1>:$SAXIHP3ARREADY,
    I<1>:$SAXIHP3AWREADY,
    I<6>:$SAXIHP3BID,
    I<2>:$SAXIHP3BRESP,
    I<1>:$SAXIHP3BVALID,
    I<3>:$SAXIHP3RACOUNT,
    I<8>:$SAXIHP3RCOUNT,
    I<64>:$SAXIHP3RDATA,
    I<6>:$SAXIHP3RID,
    I<1>:$SAXIHP3RLAST,
    I<2>:$SAXIHP3RRESP,
    I<1>:$SAXIHP3RVALID,
    I<6>:$SAXIHP3WACOUNT,
    I<8>:$SAXIHP3WCOUNT,
    I<1>:$SAXIHP3WREADY
  );
}

def PS8 : XilinxPrimitiveOp<"PS8", []> {
  let summary = "PS8 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    InOut<4>:$PSS_ALTO_CORE_PAD_BOOTMODE,
    InOut<1>:$PSS_ALTO_CORE_PAD_CLK,
    InOut<1>:$PSS_ALTO_CORE_PAD_DONEB,
    InOut<18>:$PSS_ALTO_CORE_PAD_DRAMA,
    InOut<1>:$PSS_ALTO_CORE_PAD_DRAMACTN,
    InOut<1>:$PSS_ALTO_CORE_PAD_DRAMALERTN,
    InOut<2>:$PSS_ALTO_CORE_PAD_DRAMBA,
    InOut<2>:$PSS_ALTO_CORE_PAD_DRAMBG,
    InOut<2>:$PSS_ALTO_CORE_PAD_DRAMCK,
    InOut<2>:$PSS_ALTO_CORE_PAD_DRAMCKE,
    InOut<2>:$PSS_ALTO_CORE_PAD_DRAMCKN,
    InOut<2>:$PSS_ALTO_CORE_PAD_DRAMCSN,
    InOut<9>:$PSS_ALTO_CORE_PAD_DRAMDM,
    InOut<72>:$PSS_ALTO_CORE_PAD_DRAMDQ,
    InOut<9>:$PSS_ALTO_CORE_PAD_DRAMDQS,
    InOut<9>:$PSS_ALTO_CORE_PAD_DRAMDQSN,
    InOut<2>:$PSS_ALTO_CORE_PAD_DRAMODT,
    InOut<1>:$PSS_ALTO_CORE_PAD_DRAMPARITY,
    InOut<1>:$PSS_ALTO_CORE_PAD_DRAMRAMRSTN,
    InOut<1>:$PSS_ALTO_CORE_PAD_ERROROUT,
    InOut<1>:$PSS_ALTO_CORE_PAD_ERRORSTATUS,
    InOut<1>:$PSS_ALTO_CORE_PAD_INITB,
    InOut<1>:$PSS_ALTO_CORE_PAD_JTAGTCK,
    InOut<1>:$PSS_ALTO_CORE_PAD_JTAGTDI,
    InOut<1>:$PSS_ALTO_CORE_PAD_JTAGTDO,
    InOut<1>:$PSS_ALTO_CORE_PAD_JTAGTMS,
    InOut<78>:$PSS_ALTO_CORE_PAD_MIO,
    InOut<1>:$PSS_ALTO_CORE_PAD_PORB,
    InOut<1>:$PSS_ALTO_CORE_PAD_PROGB,
    InOut<1>:$PSS_ALTO_CORE_PAD_RCALIBINOUT,
    InOut<1>:$PSS_ALTO_CORE_PAD_SRSTB,
    InOut<1>:$PSS_ALTO_CORE_PAD_ZQ,
    I<8>:$ADMAFCICLK,
    I<1>:$AIBPMUAFIFMFPDACK,
    I<1>:$AIBPMUAFIFMLPDACK,
    I<1>:$DDRCEXTREFRESHRANK0REQ,
    I<1>:$DDRCEXTREFRESHRANK1REQ,
    I<1>:$DDRCREFRESHPLCLK,
    I<1>:$DPAUXDATAIN,
    I<1>:$DPEXTERNALCUSTOMEVENT1,
    I<1>:$DPEXTERNALCUSTOMEVENT2,
    I<1>:$DPEXTERNALVSYNCEVENT,
    I<1>:$DPHOTPLUGDETECT,
    I<8>:$DPLIVEGFXALPHAIN,
    I<36>:$DPLIVEGFXPIXEL1IN,
    I<1>:$DPLIVEVIDEOINDE,
    I<1>:$DPLIVEVIDEOINHSYNC,
    I<36>:$DPLIVEVIDEOINPIXEL1,
    I<1>:$DPLIVEVIDEOINVSYNC,
    I<1>:$DPMAXISMIXEDAUDIOTREADY,
    I<1>:$DPSAXISAUDIOCLK,
    I<32>:$DPSAXISAUDIOTDATA,
    I<1>:$DPSAXISAUDIOTID,
    I<1>:$DPSAXISAUDIOTVALID,
    I<1>:$DPVIDEOINCLK,
    I<1>:$EMIOCAN0PHYRX,
    I<1>:$EMIOCAN1PHYRX,
    I<1>:$EMIOENET0DMATXSTATUSTOG,
    I<1>:$EMIOENET0EXTINTIN,
    I<1>:$EMIOENET0GMIICOL,
    I<1>:$EMIOENET0GMIICRS,
    I<1>:$EMIOENET0GMIIRXCLK,
    I<8>:$EMIOENET0GMIIRXD,
    I<1>:$EMIOENET0GMIIRXDV,
    I<1>:$EMIOENET0GMIIRXER,
    I<1>:$EMIOENET0GMIITXCLK,
    I<1>:$EMIOENET0MDIOI,
    I<1>:$EMIOENET0RXWOVERFLOW,
    I<1>:$EMIOENET0TXRCONTROL,
    I<8>:$EMIOENET0TXRDATA,
    I<1>:$EMIOENET0TXRDATARDY,
    I<1>:$EMIOENET0TXREOP,
    I<1>:$EMIOENET0TXRERR,
    I<1>:$EMIOENET0TXRFLUSHED,
    I<1>:$EMIOENET0TXRSOP,
    I<1>:$EMIOENET0TXRUNDERFLOW,
    I<1>:$EMIOENET0TXRVALID,
    I<1>:$EMIOENET1DMATXSTATUSTOG,
    I<1>:$EMIOENET1EXTINTIN,
    I<1>:$EMIOENET1GMIICOL,
    I<1>:$EMIOENET1GMIICRS,
    I<1>:$EMIOENET1GMIIRXCLK,
    I<8>:$EMIOENET1GMIIRXD,
    I<1>:$EMIOENET1GMIIRXDV,
    I<1>:$EMIOENET1GMIIRXER,
    I<1>:$EMIOENET1GMIITXCLK,
    I<1>:$EMIOENET1MDIOI,
    I<1>:$EMIOENET1RXWOVERFLOW,
    I<1>:$EMIOENET1TXRCONTROL,
    I<8>:$EMIOENET1TXRDATA,
    I<1>:$EMIOENET1TXRDATARDY,
    I<1>:$EMIOENET1TXREOP,
    I<1>:$EMIOENET1TXRERR,
    I<1>:$EMIOENET1TXRFLUSHED,
    I<1>:$EMIOENET1TXRSOP,
    I<1>:$EMIOENET1TXRUNDERFLOW,
    I<1>:$EMIOENET1TXRVALID,
    I<1>:$EMIOENET2DMATXSTATUSTOG,
    I<1>:$EMIOENET2EXTINTIN,
    I<1>:$EMIOENET2GMIICOL,
    I<1>:$EMIOENET2GMIICRS,
    I<1>:$EMIOENET2GMIIRXCLK,
    I<8>:$EMIOENET2GMIIRXD,
    I<1>:$EMIOENET2GMIIRXDV,
    I<1>:$EMIOENET2GMIIRXER,
    I<1>:$EMIOENET2GMIITXCLK,
    I<1>:$EMIOENET2MDIOI,
    I<1>:$EMIOENET2RXWOVERFLOW,
    I<1>:$EMIOENET2TXRCONTROL,
    I<8>:$EMIOENET2TXRDATA,
    I<1>:$EMIOENET2TXRDATARDY,
    I<1>:$EMIOENET2TXREOP,
    I<1>:$EMIOENET2TXRERR,
    I<1>:$EMIOENET2TXRFLUSHED,
    I<1>:$EMIOENET2TXRSOP,
    I<1>:$EMIOENET2TXRUNDERFLOW,
    I<1>:$EMIOENET2TXRVALID,
    I<1>:$EMIOENET3DMATXSTATUSTOG,
    I<1>:$EMIOENET3EXTINTIN,
    I<1>:$EMIOENET3GMIICOL,
    I<1>:$EMIOENET3GMIICRS,
    I<1>:$EMIOENET3GMIIRXCLK,
    I<8>:$EMIOENET3GMIIRXD,
    I<1>:$EMIOENET3GMIIRXDV,
    I<1>:$EMIOENET3GMIIRXER,
    I<1>:$EMIOENET3GMIITXCLK,
    I<1>:$EMIOENET3MDIOI,
    I<1>:$EMIOENET3RXWOVERFLOW,
    I<1>:$EMIOENET3TXRCONTROL,
    I<8>:$EMIOENET3TXRDATA,
    I<1>:$EMIOENET3TXRDATARDY,
    I<1>:$EMIOENET3TXREOP,
    I<1>:$EMIOENET3TXRERR,
    I<1>:$EMIOENET3TXRFLUSHED,
    I<1>:$EMIOENET3TXRSOP,
    I<1>:$EMIOENET3TXRUNDERFLOW,
    I<1>:$EMIOENET3TXRVALID,
    I<1>:$EMIOENETTSUCLK,
    I<2>:$EMIOGEM0TSUINCCTRL,
    I<2>:$EMIOGEM1TSUINCCTRL,
    I<2>:$EMIOGEM2TSUINCCTRL,
    I<2>:$EMIOGEM3TSUINCCTRL,
    I<96>:$EMIOGPIOI,
    I<1>:$EMIOHUBPORTOVERCRNTUSB20,
    I<1>:$EMIOHUBPORTOVERCRNTUSB21,
    I<1>:$EMIOHUBPORTOVERCRNTUSB30,
    I<1>:$EMIOHUBPORTOVERCRNTUSB31,
    I<1>:$EMIOI2C0SCLI,
    I<1>:$EMIOI2C0SDAI,
    I<1>:$EMIOI2C1SCLI,
    I<1>:$EMIOI2C1SDAI,
    I<1>:$EMIOSDIO0CDN,
    I<1>:$EMIOSDIO0CMDIN,
    I<8>:$EMIOSDIO0DATAIN,
    I<1>:$EMIOSDIO0FBCLKIN,
    I<1>:$EMIOSDIO0WP,
    I<1>:$EMIOSDIO1CDN,
    I<1>:$EMIOSDIO1CMDIN,
    I<8>:$EMIOSDIO1DATAIN,
    I<1>:$EMIOSDIO1FBCLKIN,
    I<1>:$EMIOSDIO1WP,
    I<1>:$EMIOSPI0MI,
    I<1>:$EMIOSPI0SCLKI,
    I<1>:$EMIOSPI0SI,
    I<1>:$EMIOSPI0SSIN,
    I<1>:$EMIOSPI1MI,
    I<1>:$EMIOSPI1SCLKI,
    I<1>:$EMIOSPI1SI,
    I<1>:$EMIOSPI1SSIN,
    I<3>:$EMIOTTC0CLKI,
    I<3>:$EMIOTTC1CLKI,
    I<3>:$EMIOTTC2CLKI,
    I<3>:$EMIOTTC3CLKI,
    I<1>:$EMIOUART0CTSN,
    I<1>:$EMIOUART0DCDN,
    I<1>:$EMIOUART0DSRN,
    I<1>:$EMIOUART0RIN,
    I<1>:$EMIOUART0RX,
    I<1>:$EMIOUART1CTSN,
    I<1>:$EMIOUART1DCDN,
    I<1>:$EMIOUART1DSRN,
    I<1>:$EMIOUART1RIN,
    I<1>:$EMIOUART1RX,
    I<1>:$EMIOWDT0CLKI,
    I<1>:$EMIOWDT1CLKI,
    I<1>:$FMIOGEM0FIFORXCLKFROMPL,
    I<1>:$FMIOGEM0FIFOTXCLKFROMPL,
    I<1>:$FMIOGEM0SIGNALDETECT,
    I<1>:$FMIOGEM1FIFORXCLKFROMPL,
    I<1>:$FMIOGEM1FIFOTXCLKFROMPL,
    I<1>:$FMIOGEM1SIGNALDETECT,
    I<1>:$FMIOGEM2FIFORXCLKFROMPL,
    I<1>:$FMIOGEM2FIFOTXCLKFROMPL,
    I<1>:$FMIOGEM2SIGNALDETECT,
    I<1>:$FMIOGEM3FIFORXCLKFROMPL,
    I<1>:$FMIOGEM3FIFOTXCLKFROMPL,
    I<1>:$FMIOGEM3SIGNALDETECT,
    I<1>:$FMIOGEMTSUCLKFROMPL,
    I<32>:$FTMGPI,
    I<8>:$GDMAFCICLK,
    I<1>:$MAXIGP0ACLK,
    I<1>:$MAXIGP0ARREADY,
    I<1>:$MAXIGP0AWREADY,
    I<16>:$MAXIGP0BID,
    I<2>:$MAXIGP0BRESP,
    I<1>:$MAXIGP0BVALID,
    I<128>:$MAXIGP0RDATA,
    I<16>:$MAXIGP0RID,
    I<1>:$MAXIGP0RLAST,
    I<2>:$MAXIGP0RRESP,
    I<1>:$MAXIGP0RVALID,
    I<1>:$MAXIGP0WREADY,
    I<1>:$MAXIGP1ACLK,
    I<1>:$MAXIGP1ARREADY,
    I<1>:$MAXIGP1AWREADY,
    I<16>:$MAXIGP1BID,
    I<2>:$MAXIGP1BRESP,
    I<1>:$MAXIGP1BVALID,
    I<128>:$MAXIGP1RDATA,
    I<16>:$MAXIGP1RID,
    I<1>:$MAXIGP1RLAST,
    I<2>:$MAXIGP1RRESP,
    I<1>:$MAXIGP1RVALID,
    I<1>:$MAXIGP1WREADY,
    I<1>:$MAXIGP2ACLK,
    I<1>:$MAXIGP2ARREADY,
    I<1>:$MAXIGP2AWREADY,
    I<16>:$MAXIGP2BID,
    I<2>:$MAXIGP2BRESP,
    I<1>:$MAXIGP2BVALID,
    I<128>:$MAXIGP2RDATA,
    I<16>:$MAXIGP2RID,
    I<1>:$MAXIGP2RLAST,
    I<2>:$MAXIGP2RRESP,
    I<1>:$MAXIGP2RVALID,
    I<1>:$MAXIGP2WREADY,
    I<1>:$NFIQ0LPDRPU,
    I<1>:$NFIQ1LPDRPU,
    I<1>:$NIRQ0LPDRPU,
    I<1>:$NIRQ1LPDRPU,
    I<8>:$PL2ADMACVLD,
    I<8>:$PL2ADMATACK,
    I<8>:$PL2GDMACVLD,
    I<8>:$PL2GDMATACK,
    I<1>:$PLACECLK,
    I<1>:$PLACPINACT,
    I<4>:$PLFPGASTOP,
    I<3>:$PLLAUXREFCLKFPD,
    I<2>:$PLLAUXREFCLKLPD,
    I<32>:$PLPMUGPI,
    I<4>:$PLPSAPUGICFIQ,
    I<4>:$PLPSAPUGICIRQ,
    I<1>:$PLPSEVENTI,
    I<8>:$PLPSIRQ0,
    I<8>:$PLPSIRQ1,
    I<1>:$PLPSTRACECLK,
    I<4>:$PLPSTRIGACK,
    I<4>:$PLPSTRIGGER,
    I<4>:$PMUERRORFROMPL,
    I<1>:$PSS_ALTO_CORE_PAD_MGTRXN0IN,
    I<1>:$PSS_ALTO_CORE_PAD_MGTRXN1IN,
    I<1>:$PSS_ALTO_CORE_PAD_MGTRXN2IN,
    I<1>:$PSS_ALTO_CORE_PAD_MGTRXN3IN,
    I<1>:$PSS_ALTO_CORE_PAD_MGTRXP0IN,
    I<1>:$PSS_ALTO_CORE_PAD_MGTRXP1IN,
    I<1>:$PSS_ALTO_CORE_PAD_MGTRXP2IN,
    I<1>:$PSS_ALTO_CORE_PAD_MGTRXP3IN,
    I<1>:$PSS_ALTO_CORE_PAD_PADI,
    I<1>:$PSS_ALTO_CORE_PAD_REFN0IN,
    I<1>:$PSS_ALTO_CORE_PAD_REFN1IN,
    I<1>:$PSS_ALTO_CORE_PAD_REFN2IN,
    I<1>:$PSS_ALTO_CORE_PAD_REFN3IN,
    I<1>:$PSS_ALTO_CORE_PAD_REFP0IN,
    I<1>:$PSS_ALTO_CORE_PAD_REFP1IN,
    I<1>:$PSS_ALTO_CORE_PAD_REFP2IN,
    I<1>:$PSS_ALTO_CORE_PAD_REFP3IN,
    I<1>:$RPUEVENTI0,
    I<1>:$RPUEVENTI1,
    I<1>:$SACEFPDACREADY,
    I<44>:$SACEFPDARADDR,
    I<2>:$SACEFPDARBAR,
    I<2>:$SACEFPDARBURST,
    I<4>:$SACEFPDARCACHE,
    I<2>:$SACEFPDARDOMAIN,
    I<6>:$SACEFPDARID,
    I<8>:$SACEFPDARLEN,
    I<1>:$SACEFPDARLOCK,
    I<3>:$SACEFPDARPROT,
    I<4>:$SACEFPDARQOS,
    I<4>:$SACEFPDARREGION,
    I<3>:$SACEFPDARSIZE,
    I<4>:$SACEFPDARSNOOP,
    I<16>:$SACEFPDARUSER,
    I<1>:$SACEFPDARVALID,
    I<44>:$SACEFPDAWADDR,
    I<2>:$SACEFPDAWBAR,
    I<2>:$SACEFPDAWBURST,
    I<4>:$SACEFPDAWCACHE,
    I<2>:$SACEFPDAWDOMAIN,
    I<6>:$SACEFPDAWID,
    I<8>:$SACEFPDAWLEN,
    I<1>:$SACEFPDAWLOCK,
    I<3>:$SACEFPDAWPROT,
    I<4>:$SACEFPDAWQOS,
    I<4>:$SACEFPDAWREGION,
    I<3>:$SACEFPDAWSIZE,
    I<3>:$SACEFPDAWSNOOP,
    I<16>:$SACEFPDAWUSER,
    I<1>:$SACEFPDAWVALID,
    I<1>:$SACEFPDBREADY,
    I<128>:$SACEFPDCDDATA,
    I<1>:$SACEFPDCDLAST,
    I<1>:$SACEFPDCDVALID,
    I<5>:$SACEFPDCRRESP,
    I<1>:$SACEFPDCRVALID,
    I<1>:$SACEFPDRACK,
    I<1>:$SACEFPDRREADY,
    I<1>:$SACEFPDWACK,
    I<128>:$SACEFPDWDATA,
    I<1>:$SACEFPDWLAST,
    I<16>:$SACEFPDWSTRB,
    I<1>:$SACEFPDWUSER,
    I<1>:$SACEFPDWVALID,
    I<1>:$SAXIACPACLK,
    I<40>:$SAXIACPARADDR,
    I<2>:$SAXIACPARBURST,
    I<4>:$SAXIACPARCACHE,
    I<5>:$SAXIACPARID,
    I<8>:$SAXIACPARLEN,
    I<1>:$SAXIACPARLOCK,
    I<3>:$SAXIACPARPROT,
    I<4>:$SAXIACPARQOS,
    I<3>:$SAXIACPARSIZE,
    I<2>:$SAXIACPARUSER,
    I<1>:$SAXIACPARVALID,
    I<40>:$SAXIACPAWADDR,
    I<2>:$SAXIACPAWBURST,
    I<4>:$SAXIACPAWCACHE,
    I<5>:$SAXIACPAWID,
    I<8>:$SAXIACPAWLEN,
    I<1>:$SAXIACPAWLOCK,
    I<3>:$SAXIACPAWPROT,
    I<4>:$SAXIACPAWQOS,
    I<3>:$SAXIACPAWSIZE,
    I<2>:$SAXIACPAWUSER,
    I<1>:$SAXIACPAWVALID,
    I<1>:$SAXIACPBREADY,
    I<1>:$SAXIACPRREADY,
    I<128>:$SAXIACPWDATA,
    I<1>:$SAXIACPWLAST,
    I<16>:$SAXIACPWSTRB,
    I<1>:$SAXIACPWVALID,
    I<49>:$SAXIGP0ARADDR,
    I<2>:$SAXIGP0ARBURST,
    I<4>:$SAXIGP0ARCACHE,
    I<6>:$SAXIGP0ARID,
    I<8>:$SAXIGP0ARLEN,
    I<1>:$SAXIGP0ARLOCK,
    I<3>:$SAXIGP0ARPROT,
    I<4>:$SAXIGP0ARQOS,
    I<3>:$SAXIGP0ARSIZE,
    I<1>:$SAXIGP0ARUSER,
    I<1>:$SAXIGP0ARVALID,
    I<49>:$SAXIGP0AWADDR,
    I<2>:$SAXIGP0AWBURST,
    I<4>:$SAXIGP0AWCACHE,
    I<6>:$SAXIGP0AWID,
    I<8>:$SAXIGP0AWLEN,
    I<1>:$SAXIGP0AWLOCK,
    I<3>:$SAXIGP0AWPROT,
    I<4>:$SAXIGP0AWQOS,
    I<3>:$SAXIGP0AWSIZE,
    I<1>:$SAXIGP0AWUSER,
    I<1>:$SAXIGP0AWVALID,
    I<1>:$SAXIGP0BREADY,
    I<1>:$SAXIGP0RCLK,
    I<1>:$SAXIGP0RREADY,
    I<1>:$SAXIGP0WCLK,
    I<128>:$SAXIGP0WDATA,
    I<1>:$SAXIGP0WLAST,
    I<16>:$SAXIGP0WSTRB,
    I<1>:$SAXIGP0WVALID,
    I<49>:$SAXIGP1ARADDR,
    I<2>:$SAXIGP1ARBURST,
    I<4>:$SAXIGP1ARCACHE,
    I<6>:$SAXIGP1ARID,
    I<8>:$SAXIGP1ARLEN,
    I<1>:$SAXIGP1ARLOCK,
    I<3>:$SAXIGP1ARPROT,
    I<4>:$SAXIGP1ARQOS,
    I<3>:$SAXIGP1ARSIZE,
    I<1>:$SAXIGP1ARUSER,
    I<1>:$SAXIGP1ARVALID,
    I<49>:$SAXIGP1AWADDR,
    I<2>:$SAXIGP1AWBURST,
    I<4>:$SAXIGP1AWCACHE,
    I<6>:$SAXIGP1AWID,
    I<8>:$SAXIGP1AWLEN,
    I<1>:$SAXIGP1AWLOCK,
    I<3>:$SAXIGP1AWPROT,
    I<4>:$SAXIGP1AWQOS,
    I<3>:$SAXIGP1AWSIZE,
    I<1>:$SAXIGP1AWUSER,
    I<1>:$SAXIGP1AWVALID,
    I<1>:$SAXIGP1BREADY,
    I<1>:$SAXIGP1RCLK,
    I<1>:$SAXIGP1RREADY,
    I<1>:$SAXIGP1WCLK,
    I<128>:$SAXIGP1WDATA,
    I<1>:$SAXIGP1WLAST,
    I<16>:$SAXIGP1WSTRB,
    I<1>:$SAXIGP1WVALID,
    I<49>:$SAXIGP2ARADDR,
    I<2>:$SAXIGP2ARBURST,
    I<4>:$SAXIGP2ARCACHE,
    I<6>:$SAXIGP2ARID,
    I<8>:$SAXIGP2ARLEN,
    I<1>:$SAXIGP2ARLOCK,
    I<3>:$SAXIGP2ARPROT,
    I<4>:$SAXIGP2ARQOS,
    I<3>:$SAXIGP2ARSIZE,
    I<1>:$SAXIGP2ARUSER,
    I<1>:$SAXIGP2ARVALID,
    I<49>:$SAXIGP2AWADDR,
    I<2>:$SAXIGP2AWBURST,
    I<4>:$SAXIGP2AWCACHE,
    I<6>:$SAXIGP2AWID,
    I<8>:$SAXIGP2AWLEN,
    I<1>:$SAXIGP2AWLOCK,
    I<3>:$SAXIGP2AWPROT,
    I<4>:$SAXIGP2AWQOS,
    I<3>:$SAXIGP2AWSIZE,
    I<1>:$SAXIGP2AWUSER,
    I<1>:$SAXIGP2AWVALID,
    I<1>:$SAXIGP2BREADY,
    I<1>:$SAXIGP2RCLK,
    I<1>:$SAXIGP2RREADY,
    I<1>:$SAXIGP2WCLK,
    I<128>:$SAXIGP2WDATA,
    I<1>:$SAXIGP2WLAST,
    I<16>:$SAXIGP2WSTRB,
    I<1>:$SAXIGP2WVALID,
    I<49>:$SAXIGP3ARADDR,
    I<2>:$SAXIGP3ARBURST,
    I<4>:$SAXIGP3ARCACHE,
    I<6>:$SAXIGP3ARID,
    I<8>:$SAXIGP3ARLEN,
    I<1>:$SAXIGP3ARLOCK,
    I<3>:$SAXIGP3ARPROT,
    I<4>:$SAXIGP3ARQOS,
    I<3>:$SAXIGP3ARSIZE,
    I<1>:$SAXIGP3ARUSER,
    I<1>:$SAXIGP3ARVALID,
    I<49>:$SAXIGP3AWADDR,
    I<2>:$SAXIGP3AWBURST,
    I<4>:$SAXIGP3AWCACHE,
    I<6>:$SAXIGP3AWID,
    I<8>:$SAXIGP3AWLEN,
    I<1>:$SAXIGP3AWLOCK,
    I<3>:$SAXIGP3AWPROT,
    I<4>:$SAXIGP3AWQOS,
    I<3>:$SAXIGP3AWSIZE,
    I<1>:$SAXIGP3AWUSER,
    I<1>:$SAXIGP3AWVALID,
    I<1>:$SAXIGP3BREADY,
    I<1>:$SAXIGP3RCLK,
    I<1>:$SAXIGP3RREADY,
    I<1>:$SAXIGP3WCLK,
    I<128>:$SAXIGP3WDATA,
    I<1>:$SAXIGP3WLAST,
    I<16>:$SAXIGP3WSTRB,
    I<1>:$SAXIGP3WVALID,
    I<49>:$SAXIGP4ARADDR,
    I<2>:$SAXIGP4ARBURST,
    I<4>:$SAXIGP4ARCACHE,
    I<6>:$SAXIGP4ARID,
    I<8>:$SAXIGP4ARLEN,
    I<1>:$SAXIGP4ARLOCK,
    I<3>:$SAXIGP4ARPROT,
    I<4>:$SAXIGP4ARQOS,
    I<3>:$SAXIGP4ARSIZE,
    I<1>:$SAXIGP4ARUSER,
    I<1>:$SAXIGP4ARVALID,
    I<49>:$SAXIGP4AWADDR,
    I<2>:$SAXIGP4AWBURST,
    I<4>:$SAXIGP4AWCACHE,
    I<6>:$SAXIGP4AWID,
    I<8>:$SAXIGP4AWLEN,
    I<1>:$SAXIGP4AWLOCK,
    I<3>:$SAXIGP4AWPROT,
    I<4>:$SAXIGP4AWQOS,
    I<3>:$SAXIGP4AWSIZE,
    I<1>:$SAXIGP4AWUSER,
    I<1>:$SAXIGP4AWVALID,
    I<1>:$SAXIGP4BREADY,
    I<1>:$SAXIGP4RCLK,
    I<1>:$SAXIGP4RREADY,
    I<1>:$SAXIGP4WCLK,
    I<128>:$SAXIGP4WDATA,
    I<1>:$SAXIGP4WLAST,
    I<16>:$SAXIGP4WSTRB,
    I<1>:$SAXIGP4WVALID,
    I<49>:$SAXIGP5ARADDR,
    I<2>:$SAXIGP5ARBURST,
    I<4>:$SAXIGP5ARCACHE,
    I<6>:$SAXIGP5ARID,
    I<8>:$SAXIGP5ARLEN,
    I<1>:$SAXIGP5ARLOCK,
    I<3>:$SAXIGP5ARPROT,
    I<4>:$SAXIGP5ARQOS,
    I<3>:$SAXIGP5ARSIZE,
    I<1>:$SAXIGP5ARUSER,
    I<1>:$SAXIGP5ARVALID,
    I<49>:$SAXIGP5AWADDR,
    I<2>:$SAXIGP5AWBURST,
    I<4>:$SAXIGP5AWCACHE,
    I<6>:$SAXIGP5AWID,
    I<8>:$SAXIGP5AWLEN,
    I<1>:$SAXIGP5AWLOCK,
    I<3>:$SAXIGP5AWPROT,
    I<4>:$SAXIGP5AWQOS,
    I<3>:$SAXIGP5AWSIZE,
    I<1>:$SAXIGP5AWUSER,
    I<1>:$SAXIGP5AWVALID,
    I<1>:$SAXIGP5BREADY,
    I<1>:$SAXIGP5RCLK,
    I<1>:$SAXIGP5RREADY,
    I<1>:$SAXIGP5WCLK,
    I<128>:$SAXIGP5WDATA,
    I<1>:$SAXIGP5WLAST,
    I<16>:$SAXIGP5WSTRB,
    I<1>:$SAXIGP5WVALID,
    I<49>:$SAXIGP6ARADDR,
    I<2>:$SAXIGP6ARBURST,
    I<4>:$SAXIGP6ARCACHE,
    I<6>:$SAXIGP6ARID,
    I<8>:$SAXIGP6ARLEN,
    I<1>:$SAXIGP6ARLOCK,
    I<3>:$SAXIGP6ARPROT,
    I<4>:$SAXIGP6ARQOS,
    I<3>:$SAXIGP6ARSIZE,
    I<1>:$SAXIGP6ARUSER,
    I<1>:$SAXIGP6ARVALID,
    I<49>:$SAXIGP6AWADDR,
    I<2>:$SAXIGP6AWBURST,
    I<4>:$SAXIGP6AWCACHE,
    I<6>:$SAXIGP6AWID,
    I<8>:$SAXIGP6AWLEN,
    I<1>:$SAXIGP6AWLOCK,
    I<3>:$SAXIGP6AWPROT,
    I<4>:$SAXIGP6AWQOS,
    I<3>:$SAXIGP6AWSIZE,
    I<1>:$SAXIGP6AWUSER,
    I<1>:$SAXIGP6AWVALID,
    I<1>:$SAXIGP6BREADY,
    I<1>:$SAXIGP6RCLK,
    I<1>:$SAXIGP6RREADY,
    I<1>:$SAXIGP6WCLK,
    I<128>:$SAXIGP6WDATA,
    I<1>:$SAXIGP6WLAST,
    I<16>:$SAXIGP6WSTRB,
    I<1>:$SAXIGP6WVALID,
    I<60>:$STMEVENT

    // PS8 does not contain any parameters
  );

  let results = (outs
    I<8>:$ADMA2PLCACK,
    I<8>:$ADMA2PLTVLD,
    I<1>:$DPAUDIOREFCLK,
    I<1>:$DPAUXDATAOEN,
    I<1>:$DPAUXDATAOUT,
    I<1>:$DPLIVEVIDEODEOUT,
    I<32>:$DPMAXISMIXEDAUDIOTDATA,
    I<1>:$DPMAXISMIXEDAUDIOTID,
    I<1>:$DPMAXISMIXEDAUDIOTVALID,
    I<1>:$DPSAXISAUDIOTREADY,
    I<1>:$DPVIDEOOUTHSYNC,
    I<36>:$DPVIDEOOUTPIXEL1,
    I<1>:$DPVIDEOOUTVSYNC,
    I<1>:$DPVIDEOREFCLK,
    I<1>:$EMIOCAN0PHYTX,
    I<1>:$EMIOCAN1PHYTX,
    I<2>:$EMIOENET0DMABUSWIDTH,
    I<1>:$EMIOENET0DMATXENDTOG,
    I<94>:$EMIOENET0GEMTSUTIMERCNT,
    I<8>:$EMIOENET0GMIITXD,
    I<1>:$EMIOENET0GMIITXEN,
    I<1>:$EMIOENET0GMIITXER,
    I<1>:$EMIOENET0MDIOMDC,
    I<1>:$EMIOENET0MDIOO,
    I<1>:$EMIOENET0MDIOTN,
    I<8>:$EMIOENET0RXWDATA,
    I<1>:$EMIOENET0RXWEOP,
    I<1>:$EMIOENET0RXWERR,
    I<1>:$EMIOENET0RXWFLUSH,
    I<1>:$EMIOENET0RXWSOP,
    I<45>:$EMIOENET0RXWSTATUS,
    I<1>:$EMIOENET0RXWWR,
    I<3>:$EMIOENET0SPEEDMODE,
    I<1>:$EMIOENET0TXRRD,
    I<4>:$EMIOENET0TXRSTATUS,
    I<2>:$EMIOENET1DMABUSWIDTH,
    I<1>:$EMIOENET1DMATXENDTOG,
    I<8>:$EMIOENET1GMIITXD,
    I<1>:$EMIOENET1GMIITXEN,
    I<1>:$EMIOENET1GMIITXER,
    I<1>:$EMIOENET1MDIOMDC,
    I<1>:$EMIOENET1MDIOO,
    I<1>:$EMIOENET1MDIOTN,
    I<8>:$EMIOENET1RXWDATA,
    I<1>:$EMIOENET1RXWEOP,
    I<1>:$EMIOENET1RXWERR,
    I<1>:$EMIOENET1RXWFLUSH,
    I<1>:$EMIOENET1RXWSOP,
    I<45>:$EMIOENET1RXWSTATUS,
    I<1>:$EMIOENET1RXWWR,
    I<3>:$EMIOENET1SPEEDMODE,
    I<1>:$EMIOENET1TXRRD,
    I<4>:$EMIOENET1TXRSTATUS,
    I<2>:$EMIOENET2DMABUSWIDTH,
    I<1>:$EMIOENET2DMATXENDTOG,
    I<8>:$EMIOENET2GMIITXD,
    I<1>:$EMIOENET2GMIITXEN,
    I<1>:$EMIOENET2GMIITXER,
    I<1>:$EMIOENET2MDIOMDC,
    I<1>:$EMIOENET2MDIOO,
    I<1>:$EMIOENET2MDIOTN,
    I<8>:$EMIOENET2RXWDATA,
    I<1>:$EMIOENET2RXWEOP,
    I<1>:$EMIOENET2RXWERR,
    I<1>:$EMIOENET2RXWFLUSH,
    I<1>:$EMIOENET2RXWSOP,
    I<45>:$EMIOENET2RXWSTATUS,
    I<1>:$EMIOENET2RXWWR,
    I<3>:$EMIOENET2SPEEDMODE,
    I<1>:$EMIOENET2TXRRD,
    I<4>:$EMIOENET2TXRSTATUS,
    I<2>:$EMIOENET3DMABUSWIDTH,
    I<1>:$EMIOENET3DMATXENDTOG,
    I<8>:$EMIOENET3GMIITXD,
    I<1>:$EMIOENET3GMIITXEN,
    I<1>:$EMIOENET3GMIITXER,
    I<1>:$EMIOENET3MDIOMDC,
    I<1>:$EMIOENET3MDIOO,
    I<1>:$EMIOENET3MDIOTN,
    I<8>:$EMIOENET3RXWDATA,
    I<1>:$EMIOENET3RXWEOP,
    I<1>:$EMIOENET3RXWERR,
    I<1>:$EMIOENET3RXWFLUSH,
    I<1>:$EMIOENET3RXWSOP,
    I<45>:$EMIOENET3RXWSTATUS,
    I<1>:$EMIOENET3RXWWR,
    I<3>:$EMIOENET3SPEEDMODE,
    I<1>:$EMIOENET3TXRRD,
    I<4>:$EMIOENET3TXRSTATUS,
    I<1>:$EMIOGEM0DELAYREQRX,
    I<1>:$EMIOGEM0DELAYREQTX,
    I<1>:$EMIOGEM0PDELAYREQRX,
    I<1>:$EMIOGEM0PDELAYREQTX,
    I<1>:$EMIOGEM0PDELAYRESPRX,
    I<1>:$EMIOGEM0PDELAYRESPTX,
    I<1>:$EMIOGEM0RXSOF,
    I<1>:$EMIOGEM0SYNCFRAMERX,
    I<1>:$EMIOGEM0SYNCFRAMETX,
    I<1>:$EMIOGEM0TSUTIMERCMPVAL,
    I<1>:$EMIOGEM0TXRFIXEDLAT,
    I<1>:$EMIOGEM0TXSOF,
    I<1>:$EMIOGEM1DELAYREQRX,
    I<1>:$EMIOGEM1DELAYREQTX,
    I<1>:$EMIOGEM1PDELAYREQRX,
    I<1>:$EMIOGEM1PDELAYREQTX,
    I<1>:$EMIOGEM1PDELAYRESPRX,
    I<1>:$EMIOGEM1PDELAYRESPTX,
    I<1>:$EMIOGEM1RXSOF,
    I<1>:$EMIOGEM1SYNCFRAMERX,
    I<1>:$EMIOGEM1SYNCFRAMETX,
    I<1>:$EMIOGEM1TSUTIMERCMPVAL,
    I<1>:$EMIOGEM1TXRFIXEDLAT,
    I<1>:$EMIOGEM1TXSOF,
    I<1>:$EMIOGEM2DELAYREQRX,
    I<1>:$EMIOGEM2DELAYREQTX,
    I<1>:$EMIOGEM2PDELAYREQRX,
    I<1>:$EMIOGEM2PDELAYREQTX,
    I<1>:$EMIOGEM2PDELAYRESPRX,
    I<1>:$EMIOGEM2PDELAYRESPTX,
    I<1>:$EMIOGEM2RXSOF,
    I<1>:$EMIOGEM2SYNCFRAMERX,
    I<1>:$EMIOGEM2SYNCFRAMETX,
    I<1>:$EMIOGEM2TSUTIMERCMPVAL,
    I<1>:$EMIOGEM2TXRFIXEDLAT,
    I<1>:$EMIOGEM2TXSOF,
    I<1>:$EMIOGEM3DELAYREQRX,
    I<1>:$EMIOGEM3DELAYREQTX,
    I<1>:$EMIOGEM3PDELAYREQRX,
    I<1>:$EMIOGEM3PDELAYREQTX,
    I<1>:$EMIOGEM3PDELAYRESPRX,
    I<1>:$EMIOGEM3PDELAYRESPTX,
    I<1>:$EMIOGEM3RXSOF,
    I<1>:$EMIOGEM3SYNCFRAMERX,
    I<1>:$EMIOGEM3SYNCFRAMETX,
    I<1>:$EMIOGEM3TSUTIMERCMPVAL,
    I<1>:$EMIOGEM3TXRFIXEDLAT,
    I<1>:$EMIOGEM3TXSOF,
    I<96>:$EMIOGPIOO,
    I<96>:$EMIOGPIOTN,
    I<1>:$EMIOI2C0SCLO,
    I<1>:$EMIOI2C0SCLTN,
    I<1>:$EMIOI2C0SDAO,
    I<1>:$EMIOI2C0SDATN,
    I<1>:$EMIOI2C1SCLO,
    I<1>:$EMIOI2C1SCLTN,
    I<1>:$EMIOI2C1SDAO,
    I<1>:$EMIOI2C1SDATN,
    I<1>:$EMIOSDIO0BUSPOWER,
    I<3>:$EMIOSDIO0BUSVOLT,
    I<1>:$EMIOSDIO0CLKOUT,
    I<1>:$EMIOSDIO0CMDENA,
    I<1>:$EMIOSDIO0CMDOUT,
    I<8>:$EMIOSDIO0DATAENA,
    I<8>:$EMIOSDIO0DATAOUT,
    I<1>:$EMIOSDIO0LEDCONTROL,
    I<1>:$EMIOSDIO1BUSPOWER,
    I<3>:$EMIOSDIO1BUSVOLT,
    I<1>:$EMIOSDIO1CLKOUT,
    I<1>:$EMIOSDIO1CMDENA,
    I<1>:$EMIOSDIO1CMDOUT,
    I<8>:$EMIOSDIO1DATAENA,
    I<8>:$EMIOSDIO1DATAOUT,
    I<1>:$EMIOSDIO1LEDCONTROL,
    I<1>:$EMIOSPI0MO,
    I<1>:$EMIOSPI0MOTN,
    I<1>:$EMIOSPI0SCLKO,
    I<1>:$EMIOSPI0SCLKTN,
    I<1>:$EMIOSPI0SO,
    I<1>:$EMIOSPI0SSNTN,
    I<3>:$EMIOSPI0SSON,
    I<1>:$EMIOSPI0STN,
    I<1>:$EMIOSPI1MO,
    I<1>:$EMIOSPI1MOTN,
    I<1>:$EMIOSPI1SCLKO,
    I<1>:$EMIOSPI1SCLKTN,
    I<1>:$EMIOSPI1SO,
    I<1>:$EMIOSPI1SSNTN,
    I<3>:$EMIOSPI1SSON,
    I<1>:$EMIOSPI1STN,
    I<3>:$EMIOTTC0WAVEO,
    I<3>:$EMIOTTC1WAVEO,
    I<3>:$EMIOTTC2WAVEO,
    I<3>:$EMIOTTC3WAVEO,
    I<1>:$EMIOU2DSPORTVBUSCTRLUSB30,
    I<1>:$EMIOU2DSPORTVBUSCTRLUSB31,
    I<1>:$EMIOU3DSPORTVBUSCTRLUSB30,
    I<1>:$EMIOU3DSPORTVBUSCTRLUSB31,
    I<1>:$EMIOUART0DTRN,
    I<1>:$EMIOUART0RTSN,
    I<1>:$EMIOUART0TX,
    I<1>:$EMIOUART1DTRN,
    I<1>:$EMIOUART1RTSN,
    I<1>:$EMIOUART1TX,
    I<1>:$EMIOWDT0RSTO,
    I<1>:$EMIOWDT1RSTO,
    I<1>:$FMIOGEM0FIFORXCLKTOPLBUFG,
    I<1>:$FMIOGEM0FIFOTXCLKTOPLBUFG,
    I<1>:$FMIOGEM1FIFORXCLKTOPLBUFG,
    I<1>:$FMIOGEM1FIFOTXCLKTOPLBUFG,
    I<1>:$FMIOGEM2FIFORXCLKTOPLBUFG,
    I<1>:$FMIOGEM2FIFOTXCLKTOPLBUFG,
    I<1>:$FMIOGEM3FIFORXCLKTOPLBUFG,
    I<1>:$FMIOGEM3FIFOTXCLKTOPLBUFG,
    I<1>:$FMIOGEMTSUCLKTOPLBUFG,
    I<32>:$FTMGPO,
    I<8>:$GDMA2PLCACK,
    I<8>:$GDMA2PLTVLD,
    I<40>:$MAXIGP0ARADDR,
    I<2>:$MAXIGP0ARBURST,
    I<4>:$MAXIGP0ARCACHE,
    I<16>:$MAXIGP0ARID,
    I<8>:$MAXIGP0ARLEN,
    I<1>:$MAXIGP0ARLOCK,
    I<3>:$MAXIGP0ARPROT,
    I<4>:$MAXIGP0ARQOS,
    I<3>:$MAXIGP0ARSIZE,
    I<16>:$MAXIGP0ARUSER,
    I<1>:$MAXIGP0ARVALID,
    I<40>:$MAXIGP0AWADDR,
    I<2>:$MAXIGP0AWBURST,
    I<4>:$MAXIGP0AWCACHE,
    I<16>:$MAXIGP0AWID,
    I<8>:$MAXIGP0AWLEN,
    I<1>:$MAXIGP0AWLOCK,
    I<3>:$MAXIGP0AWPROT,
    I<4>:$MAXIGP0AWQOS,
    I<3>:$MAXIGP0AWSIZE,
    I<16>:$MAXIGP0AWUSER,
    I<1>:$MAXIGP0AWVALID,
    I<1>:$MAXIGP0BREADY,
    I<1>:$MAXIGP0RREADY,
    I<128>:$MAXIGP0WDATA,
    I<1>:$MAXIGP0WLAST,
    I<16>:$MAXIGP0WSTRB,
    I<1>:$MAXIGP0WVALID,
    I<40>:$MAXIGP1ARADDR,
    I<2>:$MAXIGP1ARBURST,
    I<4>:$MAXIGP1ARCACHE,
    I<16>:$MAXIGP1ARID,
    I<8>:$MAXIGP1ARLEN,
    I<1>:$MAXIGP1ARLOCK,
    I<3>:$MAXIGP1ARPROT,
    I<4>:$MAXIGP1ARQOS,
    I<3>:$MAXIGP1ARSIZE,
    I<16>:$MAXIGP1ARUSER,
    I<1>:$MAXIGP1ARVALID,
    I<40>:$MAXIGP1AWADDR,
    I<2>:$MAXIGP1AWBURST,
    I<4>:$MAXIGP1AWCACHE,
    I<16>:$MAXIGP1AWID,
    I<8>:$MAXIGP1AWLEN,
    I<1>:$MAXIGP1AWLOCK,
    I<3>:$MAXIGP1AWPROT,
    I<4>:$MAXIGP1AWQOS,
    I<3>:$MAXIGP1AWSIZE,
    I<16>:$MAXIGP1AWUSER,
    I<1>:$MAXIGP1AWVALID,
    I<1>:$MAXIGP1BREADY,
    I<1>:$MAXIGP1RREADY,
    I<128>:$MAXIGP1WDATA,
    I<1>:$MAXIGP1WLAST,
    I<16>:$MAXIGP1WSTRB,
    I<1>:$MAXIGP1WVALID,
    I<40>:$MAXIGP2ARADDR,
    I<2>:$MAXIGP2ARBURST,
    I<4>:$MAXIGP2ARCACHE,
    I<16>:$MAXIGP2ARID,
    I<8>:$MAXIGP2ARLEN,
    I<1>:$MAXIGP2ARLOCK,
    I<3>:$MAXIGP2ARPROT,
    I<4>:$MAXIGP2ARQOS,
    I<3>:$MAXIGP2ARSIZE,
    I<16>:$MAXIGP2ARUSER,
    I<1>:$MAXIGP2ARVALID,
    I<40>:$MAXIGP2AWADDR,
    I<2>:$MAXIGP2AWBURST,
    I<4>:$MAXIGP2AWCACHE,
    I<16>:$MAXIGP2AWID,
    I<8>:$MAXIGP2AWLEN,
    I<1>:$MAXIGP2AWLOCK,
    I<3>:$MAXIGP2AWPROT,
    I<4>:$MAXIGP2AWQOS,
    I<3>:$MAXIGP2AWSIZE,
    I<16>:$MAXIGP2AWUSER,
    I<1>:$MAXIGP2AWVALID,
    I<1>:$MAXIGP2BREADY,
    I<1>:$MAXIGP2RREADY,
    I<128>:$MAXIGP2WDATA,
    I<1>:$MAXIGP2WLAST,
    I<16>:$MAXIGP2WSTRB,
    I<1>:$MAXIGP2WVALID,
    I<1>:$OSCRTCCLK,
    I<4>:$PLCLK,
    I<1>:$PMUAIBAFIFMFPDREQ,
    I<1>:$PMUAIBAFIFMLPDREQ,
    I<47>:$PMUERRORTOPL,
    I<32>:$PMUPLGPO,
    I<1>:$PSPLEVENTO,
    I<64>:$PSPLIRQFPD,
    I<100>:$PSPLIRQLPD,
    I<4>:$PSPLSTANDBYWFE,
    I<4>:$PSPLSTANDBYWFI,
    I<1>:$PSPLTRACECTL,
    I<32>:$PSPLTRACEDATA,
    I<4>:$PSPLTRIGACK,
    I<4>:$PSPLTRIGGER,
    I<1>:$PSS_ALTO_CORE_PAD_MGTTXN0OUT,
    I<1>:$PSS_ALTO_CORE_PAD_MGTTXN1OUT,
    I<1>:$PSS_ALTO_CORE_PAD_MGTTXN2OUT,
    I<1>:$PSS_ALTO_CORE_PAD_MGTTXN3OUT,
    I<1>:$PSS_ALTO_CORE_PAD_MGTTXP0OUT,
    I<1>:$PSS_ALTO_CORE_PAD_MGTTXP1OUT,
    I<1>:$PSS_ALTO_CORE_PAD_MGTTXP2OUT,
    I<1>:$PSS_ALTO_CORE_PAD_MGTTXP3OUT,
    I<1>:$PSS_ALTO_CORE_PAD_PADO,
    I<1>:$RPUEVENTO0,
    I<1>:$RPUEVENTO1,
    I<44>:$SACEFPDACADDR,
    I<3>:$SACEFPDACPROT,
    I<4>:$SACEFPDACSNOOP,
    I<1>:$SACEFPDACVALID,
    I<1>:$SACEFPDARREADY,
    I<1>:$SACEFPDAWREADY,
    I<6>:$SACEFPDBID,
    I<2>:$SACEFPDBRESP,
    I<1>:$SACEFPDBUSER,
    I<1>:$SACEFPDBVALID,
    I<1>:$SACEFPDCDREADY,
    I<1>:$SACEFPDCRREADY,
    I<128>:$SACEFPDRDATA,
    I<6>:$SACEFPDRID,
    I<1>:$SACEFPDRLAST,
    I<4>:$SACEFPDRRESP,
    I<1>:$SACEFPDRUSER,
    I<1>:$SACEFPDRVALID,
    I<1>:$SACEFPDWREADY,
    I<1>:$SAXIACPARREADY,
    I<1>:$SAXIACPAWREADY,
    I<5>:$SAXIACPBID,
    I<2>:$SAXIACPBRESP,
    I<1>:$SAXIACPBVALID,
    I<128>:$SAXIACPRDATA,
    I<5>:$SAXIACPRID,
    I<1>:$SAXIACPRLAST,
    I<2>:$SAXIACPRRESP,
    I<1>:$SAXIACPRVALID,
    I<1>:$SAXIACPWREADY,
    I<1>:$SAXIGP0ARREADY,
    I<1>:$SAXIGP0AWREADY,
    I<6>:$SAXIGP0BID,
    I<2>:$SAXIGP0BRESP,
    I<1>:$SAXIGP0BVALID,
    I<4>:$SAXIGP0RACOUNT,
    I<8>:$SAXIGP0RCOUNT,
    I<128>:$SAXIGP0RDATA,
    I<6>:$SAXIGP0RID,
    I<1>:$SAXIGP0RLAST,
    I<2>:$SAXIGP0RRESP,
    I<1>:$SAXIGP0RVALID,
    I<4>:$SAXIGP0WACOUNT,
    I<8>:$SAXIGP0WCOUNT,
    I<1>:$SAXIGP0WREADY,
    I<1>:$SAXIGP1ARREADY,
    I<1>:$SAXIGP1AWREADY,
    I<6>:$SAXIGP1BID,
    I<2>:$SAXIGP1BRESP,
    I<1>:$SAXIGP1BVALID,
    I<4>:$SAXIGP1RACOUNT,
    I<8>:$SAXIGP1RCOUNT,
    I<128>:$SAXIGP1RDATA,
    I<6>:$SAXIGP1RID,
    I<1>:$SAXIGP1RLAST,
    I<2>:$SAXIGP1RRESP,
    I<1>:$SAXIGP1RVALID,
    I<4>:$SAXIGP1WACOUNT,
    I<8>:$SAXIGP1WCOUNT,
    I<1>:$SAXIGP1WREADY,
    I<1>:$SAXIGP2ARREADY,
    I<1>:$SAXIGP2AWREADY,
    I<6>:$SAXIGP2BID,
    I<2>:$SAXIGP2BRESP,
    I<1>:$SAXIGP2BVALID,
    I<4>:$SAXIGP2RACOUNT,
    I<8>:$SAXIGP2RCOUNT,
    I<128>:$SAXIGP2RDATA,
    I<6>:$SAXIGP2RID,
    I<1>:$SAXIGP2RLAST,
    I<2>:$SAXIGP2RRESP,
    I<1>:$SAXIGP2RVALID,
    I<4>:$SAXIGP2WACOUNT,
    I<8>:$SAXIGP2WCOUNT,
    I<1>:$SAXIGP2WREADY,
    I<1>:$SAXIGP3ARREADY,
    I<1>:$SAXIGP3AWREADY,
    I<6>:$SAXIGP3BID,
    I<2>:$SAXIGP3BRESP,
    I<1>:$SAXIGP3BVALID,
    I<4>:$SAXIGP3RACOUNT,
    I<8>:$SAXIGP3RCOUNT,
    I<128>:$SAXIGP3RDATA,
    I<6>:$SAXIGP3RID,
    I<1>:$SAXIGP3RLAST,
    I<2>:$SAXIGP3RRESP,
    I<1>:$SAXIGP3RVALID,
    I<4>:$SAXIGP3WACOUNT,
    I<8>:$SAXIGP3WCOUNT,
    I<1>:$SAXIGP3WREADY,
    I<1>:$SAXIGP4ARREADY,
    I<1>:$SAXIGP4AWREADY,
    I<6>:$SAXIGP4BID,
    I<2>:$SAXIGP4BRESP,
    I<1>:$SAXIGP4BVALID,
    I<4>:$SAXIGP4RACOUNT,
    I<8>:$SAXIGP4RCOUNT,
    I<128>:$SAXIGP4RDATA,
    I<6>:$SAXIGP4RID,
    I<1>:$SAXIGP4RLAST,
    I<2>:$SAXIGP4RRESP,
    I<1>:$SAXIGP4RVALID,
    I<4>:$SAXIGP4WACOUNT,
    I<8>:$SAXIGP4WCOUNT,
    I<1>:$SAXIGP4WREADY,
    I<1>:$SAXIGP5ARREADY,
    I<1>:$SAXIGP5AWREADY,
    I<6>:$SAXIGP5BID,
    I<2>:$SAXIGP5BRESP,
    I<1>:$SAXIGP5BVALID,
    I<4>:$SAXIGP5RACOUNT,
    I<8>:$SAXIGP5RCOUNT,
    I<128>:$SAXIGP5RDATA,
    I<6>:$SAXIGP5RID,
    I<1>:$SAXIGP5RLAST,
    I<2>:$SAXIGP5RRESP,
    I<1>:$SAXIGP5RVALID,
    I<4>:$SAXIGP5WACOUNT,
    I<8>:$SAXIGP5WCOUNT,
    I<1>:$SAXIGP5WREADY,
    I<1>:$SAXIGP6ARREADY,
    I<1>:$SAXIGP6AWREADY,
    I<6>:$SAXIGP6BID,
    I<2>:$SAXIGP6BRESP,
    I<1>:$SAXIGP6BVALID,
    I<4>:$SAXIGP6RACOUNT,
    I<8>:$SAXIGP6RCOUNT,
    I<128>:$SAXIGP6RDATA,
    I<6>:$SAXIGP6RID,
    I<1>:$SAXIGP6RLAST,
    I<2>:$SAXIGP6RRESP,
    I<1>:$SAXIGP6RVALID,
    I<4>:$SAXIGP6WACOUNT,
    I<8>:$SAXIGP6WCOUNT,
    I<1>:$SAXIGP6WREADY
  );
}

def PULLDOWN : XilinxPrimitiveOp<"PULLDOWN", []> {
  let summary = "PULLDOWN Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.

    // PULLDOWN parameters follows
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O
  );
}

def PULLUP : XilinxPrimitiveOp<"PULLUP", []> {
  let summary = "PULLUP Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.

    // PULLUP parameters follows
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$O
  );
}

def RAM128X1D : XilinxPrimitiveOp<"RAM128X1D", []> {
  let summary = "RAM128X1D Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<7>:$A,
    I<1>:$D,
    I<7>:$DPRA,
    I<1>:$WCLK,
    I<1>:$WE,

    // RAM128X1D parameters follows
    APIntAttr<I<128>>:$INIT,
    APIntAttr<I<1>>:$IS_WCLK_INVERTED
  );

  let results = (outs
    I<1>:$DPO,
    I<1>:$SPO
  );
}

def RAM128X1S : XilinxPrimitiveOp<"RAM128X1S", []> {
  let summary = "RAM128X1S Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$A0,
    I<1>:$A1,
    I<1>:$A2,
    I<1>:$A3,
    I<1>:$A4,
    I<1>:$A5,
    I<1>:$A6,
    I<1>:$D,
    I<1>:$WCLK,
    I<1>:$WE,

    // RAM128X1S parameters follows
    APIntAttr<I<128>>:$INIT,
    APIntAttr<I<1>>:$IS_WCLK_INVERTED
  );

  let results = (outs
    I<1>:$O
  );
}

def RAM256X1D : XilinxPrimitiveOp<"RAM256X1D", []> {
  let summary = "RAM256X1D Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<8>:$A,
    I<1>:$D,
    I<8>:$DPRA,
    I<1>:$WCLK,
    I<1>:$WE,

    // RAM256X1D parameters follows
    APIntAttr<I<256>>:$INIT,
    APIntAttr<I<1>>:$IS_WCLK_INVERTED
  );

  let results = (outs
    I<1>:$DPO,
    I<1>:$SPO
  );
}

def RAM256X1S : XilinxPrimitiveOp<"RAM256X1S", []> {
  let summary = "RAM256X1S Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<8>:$A,
    I<1>:$D,
    I<1>:$WCLK,
    I<1>:$WE,

    // RAM256X1S parameters follows
    APIntAttr<I<256>>:$INIT,
    APIntAttr<I<1>>:$IS_WCLK_INVERTED
  );

  let results = (outs
    I<1>:$O
  );
}

def RAM32M : XilinxPrimitiveOp<"RAM32M", []> {
  let summary = "RAM32M Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<5>:$ADDRA,
    I<5>:$ADDRB,
    I<5>:$ADDRC,
    I<5>:$ADDRD,
    I<2>:$DIA,
    I<2>:$DIB,
    I<2>:$DIC,
    I<2>:$DID,
    I<1>:$WCLK,
    I<1>:$WE,

    // RAM32M parameters follows
    APIntAttr<I<64>>:$INIT_A,
    APIntAttr<I<64>>:$INIT_B,
    APIntAttr<I<64>>:$INIT_C,
    APIntAttr<I<64>>:$INIT_D,
    APIntAttr<I<1>>:$IS_WCLK_INVERTED
  );

  let results = (outs
    I<2>:$DOA,
    I<2>:$DOB,
    I<2>:$DOC,
    I<2>:$DOD
  );
}

def RAM32M16 : XilinxPrimitiveOp<"RAM32M16", []> {
  let summary = "RAM32M16 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<5>:$ADDRA,
    I<5>:$ADDRB,
    I<5>:$ADDRC,
    I<5>:$ADDRD,
    I<5>:$ADDRE,
    I<5>:$ADDRF,
    I<5>:$ADDRG,
    I<5>:$ADDRH,
    I<2>:$DIA,
    I<2>:$DIB,
    I<2>:$DIC,
    I<2>:$DID,
    I<2>:$DIE,
    I<2>:$DIF,
    I<2>:$DIG,
    I<2>:$DIH,
    I<1>:$WCLK,
    I<1>:$WE,

    // RAM32M16 parameters follows
    APIntAttr<I<64>>:$INIT_A,
    APIntAttr<I<64>>:$INIT_B,
    APIntAttr<I<64>>:$INIT_C,
    APIntAttr<I<64>>:$INIT_D,
    APIntAttr<I<64>>:$INIT_E,
    APIntAttr<I<64>>:$INIT_F,
    APIntAttr<I<64>>:$INIT_G,
    APIntAttr<I<64>>:$INIT_H,
    APIntAttr<I<1>>:$IS_WCLK_INVERTED
  );

  let results = (outs
    I<2>:$DOA,
    I<2>:$DOB,
    I<2>:$DOC,
    I<2>:$DOD,
    I<2>:$DOE,
    I<2>:$DOF,
    I<2>:$DOG,
    I<2>:$DOH
  );
}

def RAM32X16DR8 : XilinxPrimitiveOp<"RAM32X16DR8", []> {
  let summary = "RAM32X16DR8 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<6>:$ADDRA,
    I<6>:$ADDRB,
    I<6>:$ADDRC,
    I<6>:$ADDRD,
    I<6>:$ADDRE,
    I<6>:$ADDRF,
    I<6>:$ADDRG,
    I<5>:$ADDRH,
    I<2>:$DIA,
    I<2>:$DIB,
    I<2>:$DIC,
    I<2>:$DID,
    I<2>:$DIE,
    I<2>:$DIF,
    I<2>:$DIG,
    I<2>:$DIH,
    I<1>:$WCLK,
    I<1>:$WE,

    // RAM32X16DR8 parameters follows
    APIntAttr<I<1>>:$IS_WCLK_INVERTED
  );

  let results = (outs
    I<1>:$DOA,
    I<1>:$DOB,
    I<1>:$DOC,
    I<1>:$DOD,
    I<1>:$DOE,
    I<1>:$DOF,
    I<1>:$DOG,
    I<2>:$DOH
  );
}

def RAM32X1D : XilinxPrimitiveOp<"RAM32X1D", []> {
  let summary = "RAM32X1D Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$A0,
    I<1>:$A1,
    I<1>:$A2,
    I<1>:$A3,
    I<1>:$A4,
    I<1>:$D,
    I<1>:$DPRA0,
    I<1>:$DPRA1,
    I<1>:$DPRA2,
    I<1>:$DPRA3,
    I<1>:$DPRA4,
    I<1>:$WCLK,
    I<1>:$WE,

    // RAM32X1D parameters follows
    APIntAttr<I<32>>:$INIT,
    APIntAttr<I<1>>:$IS_WCLK_INVERTED
  );

  let results = (outs
    I<1>:$DPO,
    I<1>:$SPO
  );
}

def RAM32X1S : XilinxPrimitiveOp<"RAM32X1S", []> {
  let summary = "RAM32X1S Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$A0,
    I<1>:$A1,
    I<1>:$A2,
    I<1>:$A3,
    I<1>:$A4,
    I<1>:$D,
    I<1>:$WCLK,
    I<1>:$WE,

    // RAM32X1S parameters follows
    APIntAttr<I<32>>:$INIT,
    APIntAttr<I<1>>:$IS_WCLK_INVERTED
  );

  let results = (outs
    I<1>:$O
  );
}

def RAM512X1S : XilinxPrimitiveOp<"RAM512X1S", []> {
  let summary = "RAM512X1S Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<9>:$A,
    I<1>:$D,
    I<1>:$WCLK,
    I<1>:$WE,

    // RAM512X1S parameters follows
    APIntAttr<I<512>>:$INIT,
    APIntAttr<I<1>>:$IS_WCLK_INVERTED
  );

  let results = (outs
    I<1>:$O
  );
}

def RAM64M : XilinxPrimitiveOp<"RAM64M", []> {
  let summary = "RAM64M Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<6>:$ADDRA,
    I<6>:$ADDRB,
    I<6>:$ADDRC,
    I<6>:$ADDRD,
    I<1>:$DIA,
    I<1>:$DIB,
    I<1>:$DIC,
    I<1>:$DID,
    I<1>:$WCLK,
    I<1>:$WE,

    // RAM64M parameters follows
    APIntAttr<I<64>>:$INIT_A,
    APIntAttr<I<64>>:$INIT_B,
    APIntAttr<I<64>>:$INIT_C,
    APIntAttr<I<64>>:$INIT_D,
    APIntAttr<I<1>>:$IS_WCLK_INVERTED
  );

  let results = (outs
    I<1>:$DOA,
    I<1>:$DOB,
    I<1>:$DOC,
    I<1>:$DOD
  );
}

def RAM64M8 : XilinxPrimitiveOp<"RAM64M8", []> {
  let summary = "RAM64M8 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<6>:$ADDRA,
    I<6>:$ADDRB,
    I<6>:$ADDRC,
    I<6>:$ADDRD,
    I<6>:$ADDRE,
    I<6>:$ADDRF,
    I<6>:$ADDRG,
    I<6>:$ADDRH,
    I<1>:$DIA,
    I<1>:$DIB,
    I<1>:$DIC,
    I<1>:$DID,
    I<1>:$DIE,
    I<1>:$DIF,
    I<1>:$DIG,
    I<1>:$DIH,
    I<1>:$WCLK,
    I<1>:$WE,

    // RAM64M8 parameters follows
    APIntAttr<I<64>>:$INIT_A,
    APIntAttr<I<64>>:$INIT_B,
    APIntAttr<I<64>>:$INIT_C,
    APIntAttr<I<64>>:$INIT_D,
    APIntAttr<I<64>>:$INIT_E,
    APIntAttr<I<64>>:$INIT_F,
    APIntAttr<I<64>>:$INIT_G,
    APIntAttr<I<64>>:$INIT_H,
    APIntAttr<I<1>>:$IS_WCLK_INVERTED
  );

  let results = (outs
    I<1>:$DOA,
    I<1>:$DOB,
    I<1>:$DOC,
    I<1>:$DOD,
    I<1>:$DOE,
    I<1>:$DOF,
    I<1>:$DOG,
    I<1>:$DOH
  );
}

def RAM64X1D : XilinxPrimitiveOp<"RAM64X1D", []> {
  let summary = "RAM64X1D Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$A0,
    I<1>:$A1,
    I<1>:$A2,
    I<1>:$A3,
    I<1>:$A4,
    I<1>:$A5,
    I<1>:$D,
    I<1>:$DPRA0,
    I<1>:$DPRA1,
    I<1>:$DPRA2,
    I<1>:$DPRA3,
    I<1>:$DPRA4,
    I<1>:$DPRA5,
    I<1>:$WCLK,
    I<1>:$WE,

    // RAM64X1D parameters follows
    APIntAttr<I<64>>:$INIT,
    APIntAttr<I<1>>:$IS_WCLK_INVERTED
  );

  let results = (outs
    I<1>:$DPO,
    I<1>:$SPO
  );
}

def RAM64X1S : XilinxPrimitiveOp<"RAM64X1S", []> {
  let summary = "RAM64X1S Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$A0,
    I<1>:$A1,
    I<1>:$A2,
    I<1>:$A3,
    I<1>:$A4,
    I<1>:$A5,
    I<1>:$D,
    I<1>:$WCLK,
    I<1>:$WE,

    // RAM64X1S parameters follows
    APIntAttr<I<64>>:$INIT,
    APIntAttr<I<1>>:$IS_WCLK_INVERTED
  );

  let results = (outs
    I<1>:$O
  );
}

def RAM64X8SW : XilinxPrimitiveOp<"RAM64X8SW", []> {
  let summary = "RAM64X8SW Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<6>:$A,
    I<1>:$D,
    I<1>:$WCLK,
    I<1>:$WE,
    I<3>:$WSEL,

    // RAM64X8SW parameters follows
    APIntAttr<I<64>>:$INIT_A,
    APIntAttr<I<64>>:$INIT_B,
    APIntAttr<I<64>>:$INIT_C,
    APIntAttr<I<64>>:$INIT_D,
    APIntAttr<I<64>>:$INIT_E,
    APIntAttr<I<64>>:$INIT_F,
    APIntAttr<I<64>>:$INIT_G,
    APIntAttr<I<64>>:$INIT_H,
    APIntAttr<I<1>>:$IS_WCLK_INVERTED
  );

  let results = (outs
    I<8>:$O
  );
}

def RAMB18E1 : XilinxPrimitiveOp<"RAMB18E1", []> {
  let summary = "RAMB18E1 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLKARDCLK,
    I<1>:$CLKBWRCLK,
    I<1>:$ENARDEN,
    I<1>:$ENBWREN,
    I<1>:$REGCEAREGCE,
    I<1>:$REGCEB,
    I<1>:$RSTRAMARSTRAM,
    I<1>:$RSTRAMB,
    I<1>:$RSTREGARSTREG,
    I<1>:$RSTREGB,
    I<14>:$ADDRARDADDR,
    I<14>:$ADDRBWRADDR,
    I<16>:$DIADI,
    I<16>:$DIBDI,
    I<2>:$DIPADIP,
    I<2>:$DIPBDIP,
    I<2>:$WEA,
    I<4>:$WEBWE,

    // RAMB18E1 parameters follows
    SI64Attr:$DOA_REG,
    SI64Attr:$DOB_REG,
    APIntAttr<I<256>>:$INITP_00,
    APIntAttr<I<256>>:$INITP_01,
    APIntAttr<I<256>>:$INITP_02,
    APIntAttr<I<256>>:$INITP_03,
    APIntAttr<I<256>>:$INITP_04,
    APIntAttr<I<256>>:$INITP_05,
    APIntAttr<I<256>>:$INITP_06,
    APIntAttr<I<256>>:$INITP_07,
    APIntAttr<I<256>>:$INIT_00,
    APIntAttr<I<256>>:$INIT_01,
    APIntAttr<I<256>>:$INIT_02,
    APIntAttr<I<256>>:$INIT_03,
    APIntAttr<I<256>>:$INIT_04,
    APIntAttr<I<256>>:$INIT_05,
    APIntAttr<I<256>>:$INIT_06,
    APIntAttr<I<256>>:$INIT_07,
    APIntAttr<I<256>>:$INIT_08,
    APIntAttr<I<256>>:$INIT_09,
    APIntAttr<I<256>>:$INIT_0A,
    APIntAttr<I<256>>:$INIT_0B,
    APIntAttr<I<256>>:$INIT_0C,
    APIntAttr<I<256>>:$INIT_0D,
    APIntAttr<I<256>>:$INIT_0E,
    APIntAttr<I<256>>:$INIT_0F,
    APIntAttr<I<256>>:$INIT_10,
    APIntAttr<I<256>>:$INIT_11,
    APIntAttr<I<256>>:$INIT_12,
    APIntAttr<I<256>>:$INIT_13,
    APIntAttr<I<256>>:$INIT_14,
    APIntAttr<I<256>>:$INIT_15,
    APIntAttr<I<256>>:$INIT_16,
    APIntAttr<I<256>>:$INIT_17,
    APIntAttr<I<256>>:$INIT_18,
    APIntAttr<I<256>>:$INIT_19,
    APIntAttr<I<256>>:$INIT_1A,
    APIntAttr<I<256>>:$INIT_1B,
    APIntAttr<I<256>>:$INIT_1C,
    APIntAttr<I<256>>:$INIT_1D,
    APIntAttr<I<256>>:$INIT_1E,
    APIntAttr<I<256>>:$INIT_1F,
    APIntAttr<I<256>>:$INIT_20,
    APIntAttr<I<256>>:$INIT_21,
    APIntAttr<I<256>>:$INIT_22,
    APIntAttr<I<256>>:$INIT_23,
    APIntAttr<I<256>>:$INIT_24,
    APIntAttr<I<256>>:$INIT_25,
    APIntAttr<I<256>>:$INIT_26,
    APIntAttr<I<256>>:$INIT_27,
    APIntAttr<I<256>>:$INIT_28,
    APIntAttr<I<256>>:$INIT_29,
    APIntAttr<I<256>>:$INIT_2A,
    APIntAttr<I<256>>:$INIT_2B,
    APIntAttr<I<256>>:$INIT_2C,
    APIntAttr<I<256>>:$INIT_2D,
    APIntAttr<I<256>>:$INIT_2E,
    APIntAttr<I<256>>:$INIT_2F,
    APIntAttr<I<256>>:$INIT_30,
    APIntAttr<I<256>>:$INIT_31,
    APIntAttr<I<256>>:$INIT_32,
    APIntAttr<I<256>>:$INIT_33,
    APIntAttr<I<256>>:$INIT_34,
    APIntAttr<I<256>>:$INIT_35,
    APIntAttr<I<256>>:$INIT_36,
    APIntAttr<I<256>>:$INIT_37,
    APIntAttr<I<256>>:$INIT_38,
    APIntAttr<I<256>>:$INIT_39,
    APIntAttr<I<256>>:$INIT_3A,
    APIntAttr<I<256>>:$INIT_3B,
    APIntAttr<I<256>>:$INIT_3C,
    APIntAttr<I<256>>:$INIT_3D,
    APIntAttr<I<256>>:$INIT_3E,
    APIntAttr<I<256>>:$INIT_3F,
    APIntAttr<I<18>>:$INIT_A,
    APIntAttr<I<18>>:$INIT_B,
    StrAttr:$INIT_FILE,
    APIntAttr<I<1>>:$IS_CLKARDCLK_INVERTED,
    APIntAttr<I<1>>:$IS_CLKBWRCLK_INVERTED,
    APIntAttr<I<1>>:$IS_ENARDEN_INVERTED,
    APIntAttr<I<1>>:$IS_ENBWREN_INVERTED,
    APIntAttr<I<1>>:$IS_RSTRAMARSTRAM_INVERTED,
    APIntAttr<I<1>>:$IS_RSTRAMB_INVERTED,
    APIntAttr<I<1>>:$IS_RSTREGARSTREG_INVERTED,
    APIntAttr<I<1>>:$IS_RSTREGB_INVERTED,
    StrAttr:$LOC,
    StrAttr:$RAM_MODE,
    StrAttr:$RDADDR_COLLISION_HWCONFIG,
    SI64Attr:$READ_WIDTH_A,
    SI64Attr:$READ_WIDTH_B,
    StrAttr:$RSTREG_PRIORITY_A,
    StrAttr:$RSTREG_PRIORITY_B,
    StrAttr:$SIM_COLLISION_CHECK,
    StrAttr:$SIM_DEVICE,
    APIntAttr<I<18>>:$SRVAL_A,
    APIntAttr<I<18>>:$SRVAL_B,
    StrAttr:$WRITE_MODE_A,
    StrAttr:$WRITE_MODE_B,
    SI64Attr:$WRITE_WIDTH_A,
    SI64Attr:$WRITE_WIDTH_B
  );

  let results = (outs
    I<16>:$DOADO,
    I<16>:$DOBDO,
    I<2>:$DOPADOP,
    I<2>:$DOPBDOP
  );
}

def SIMuCONFIGE3 : XilinxPrimitiveOp<"SIM_CONFIGE3", []> {
  let summary = "SIM_CONFIGE3 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    InOut<1>:$DONE,
    I<1>:$CCLK,
    I<1>:$CSB,
    InOut<32>:$D,
    InOut<1>:$INITB,
    I<3>:$M,
    I<1>:$PROGB,
    I<1>:$RDWRB,

    // SIM_CONFIGE3 parameters follows
    APIntAttr<I<32>>:$DEVICE_ID,
    StrAttr:$ICAP_SUPPORT,
    StrAttr:$ICAP_WIDTH
  );

  let results = (outs
    I<1>:$AVAIL,
    I<1>:$CSOB,
    I<1>:$PRDONE,
    I<1>:$PRERROR
  );
}

def SRL16E : XilinxPrimitiveOp<"SRL16E", []> {
  let summary = "SRL16E Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$A0,
    I<1>:$A1,
    I<1>:$A2,
    I<1>:$A3,
    I<1>:$CE,
    I<1>:$CLK,
    I<1>:$D,

    // SRL16E parameters follows
    APIntAttr<I<16>>:$INIT,
    APIntAttr<I<1>>:$IS_CLK_INVERTED
  );

  let results = (outs
    I<1>:$Q
  );
}

def SRLC16E : XilinxPrimitiveOp<"SRLC16E", []> {
  let summary = "SRLC16E Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$A0,
    I<1>:$A1,
    I<1>:$A2,
    I<1>:$A3,
    I<1>:$CE,
    I<1>:$CLK,
    I<1>:$D,

    // SRLC16E parameters follows
    APIntAttr<I<16>>:$INIT,
    APIntAttr<I<1>>:$IS_CLK_INVERTED
  );

  let results = (outs
    I<1>:$Q,
    I<1>:$Q15
  );
}

def SRLC32E : XilinxPrimitiveOp<"SRLC32E", []> {
  let summary = "SRLC32E Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<5>:$A,
    I<1>:$CE,
    I<1>:$CLK,
    I<1>:$D,

    // SRLC32E parameters follows
    APIntAttr<I<32>>:$INIT,
    APIntAttr<I<1>>:$IS_CLK_INVERTED
  );

  let results = (outs
    I<1>:$Q,
    I<1>:$Q31
  );
}

def STARTUPE2 : XilinxPrimitiveOp<"STARTUPE2", []> {
  let summary = "STARTUPE2 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CLK,
    I<1>:$GSR,
    I<1>:$GTS,
    I<1>:$KEYCLEARB,
    I<1>:$PACK,
    I<1>:$USRCCLKO,
    I<1>:$USRCCLKTS,
    I<1>:$USRDONEO,
    I<1>:$USRDONETS,

    // STARTUPE2 parameters follows
    StrAttr:$PROG_USR,
    StrAttr:$SIM_CCLK_FREQ
  );

  let results = (outs
    I<1>:$CFGCLK,
    I<1>:$CFGMCLK,
    I<1>:$EOS,
    I<1>:$PREQ
  );
}

def STARTUPE3 : XilinxPrimitiveOp<"STARTUPE3", []> {
  let summary = "STARTUPE3 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<4>:$DO,
    I<4>:$DTS,
    I<1>:$FCSBO,
    I<1>:$FCSBTS,
    I<1>:$GSR,
    I<1>:$GTS,
    I<1>:$KEYCLEARB,
    I<1>:$PACK,
    I<1>:$USRCCLKO,
    I<1>:$USRCCLKTS,
    I<1>:$USRDONEO,
    I<1>:$USRDONETS,

    // STARTUPE3 parameters follows
    StrAttr:$PROG_USR,
    StrAttr:$SIM_CCLK_FREQ
  );

  let results = (outs
    I<1>:$CFGCLK,
    I<1>:$CFGMCLK,
    I<4>:$DI,
    I<1>:$EOS,
    I<1>:$PREQ
  );
}

def SYSMONE1 : XilinxPrimitiveOp<"SYSMONE1", []> {
  let summary = "SYSMONE1 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CONVST,
    I<1>:$CONVSTCLK,
    I<8>:$DADDR,
    I<1>:$DCLK,
    I<1>:$DEN,
    I<16>:$DI,
    I<1>:$DWE,
    I<1>:$I2C_SCLK,
    I<1>:$I2C_SDA,
    I<1>:$RESET,
    I<16>:$VAUXN,
    I<16>:$VAUXP,
    I<1>:$VN,
    I<1>:$VP,

    // SYSMONE1 parameters follows
    APIntAttr<I<16>>:$INIT_40,
    APIntAttr<I<16>>:$INIT_41,
    APIntAttr<I<16>>:$INIT_42,
    APIntAttr<I<16>>:$INIT_43,
    APIntAttr<I<16>>:$INIT_44,
    APIntAttr<I<16>>:$INIT_45,
    APIntAttr<I<16>>:$INIT_46,
    APIntAttr<I<16>>:$INIT_47,
    APIntAttr<I<16>>:$INIT_48,
    APIntAttr<I<16>>:$INIT_49,
    APIntAttr<I<16>>:$INIT_4A,
    APIntAttr<I<16>>:$INIT_4B,
    APIntAttr<I<16>>:$INIT_4C,
    APIntAttr<I<16>>:$INIT_4D,
    APIntAttr<I<16>>:$INIT_4E,
    APIntAttr<I<16>>:$INIT_4F,
    APIntAttr<I<16>>:$INIT_50,
    APIntAttr<I<16>>:$INIT_51,
    APIntAttr<I<16>>:$INIT_52,
    APIntAttr<I<16>>:$INIT_53,
    APIntAttr<I<16>>:$INIT_54,
    APIntAttr<I<16>>:$INIT_55,
    APIntAttr<I<16>>:$INIT_56,
    APIntAttr<I<16>>:$INIT_57,
    APIntAttr<I<16>>:$INIT_58,
    APIntAttr<I<16>>:$INIT_59,
    APIntAttr<I<16>>:$INIT_5A,
    APIntAttr<I<16>>:$INIT_5B,
    APIntAttr<I<16>>:$INIT_5C,
    APIntAttr<I<16>>:$INIT_5D,
    APIntAttr<I<16>>:$INIT_5E,
    APIntAttr<I<16>>:$INIT_5F,
    APIntAttr<I<16>>:$INIT_60,
    APIntAttr<I<16>>:$INIT_61,
    APIntAttr<I<16>>:$INIT_62,
    APIntAttr<I<16>>:$INIT_63,
    APIntAttr<I<16>>:$INIT_64,
    APIntAttr<I<16>>:$INIT_65,
    APIntAttr<I<16>>:$INIT_66,
    APIntAttr<I<16>>:$INIT_67,
    APIntAttr<I<16>>:$INIT_68,
    APIntAttr<I<16>>:$INIT_69,
    APIntAttr<I<16>>:$INIT_6A,
    APIntAttr<I<16>>:$INIT_6B,
    APIntAttr<I<16>>:$INIT_6C,
    APIntAttr<I<16>>:$INIT_6D,
    APIntAttr<I<16>>:$INIT_6E,
    APIntAttr<I<16>>:$INIT_6F,
    APIntAttr<I<16>>:$INIT_70,
    APIntAttr<I<16>>:$INIT_71,
    APIntAttr<I<16>>:$INIT_72,
    APIntAttr<I<16>>:$INIT_73,
    APIntAttr<I<16>>:$INIT_74,
    APIntAttr<I<16>>:$INIT_75,
    APIntAttr<I<16>>:$INIT_76,
    APIntAttr<I<16>>:$INIT_77,
    APIntAttr<I<16>>:$INIT_78,
    APIntAttr<I<16>>:$INIT_79,
    APIntAttr<I<16>>:$INIT_7A,
    APIntAttr<I<16>>:$INIT_7B,
    APIntAttr<I<16>>:$INIT_7C,
    APIntAttr<I<16>>:$INIT_7D,
    APIntAttr<I<16>>:$INIT_7E,
    APIntAttr<I<16>>:$INIT_7F,
    APIntAttr<I<1>>:$IS_CONVSTCLK_INVERTED,
    APIntAttr<I<1>>:$IS_DCLK_INVERTED,
    StrAttr:$SIM_MONITOR_FILE,
    SI64Attr:$SYSMON_VUSER0_BANK,
    StrAttr:$SYSMON_VUSER0_MONITOR,
    SI64Attr:$SYSMON_VUSER1_BANK,
    StrAttr:$SYSMON_VUSER1_MONITOR,
    SI64Attr:$SYSMON_VUSER2_BANK,
    StrAttr:$SYSMON_VUSER2_MONITOR,
    SI64Attr:$SYSMON_VUSER3_BANK,
    StrAttr:$SYSMON_VUSER3_MONITOR
  );

  let results = (outs
    I<16>:$ALM,
    I<1>:$BUSY,
    I<6>:$CHANNEL,
    I<16>:$DO,
    I<1>:$DRDY,
    I<1>:$EOC,
    I<1>:$EOS,
    I<1>:$I2C_SCLK_TS,
    I<1>:$I2C_SDA_TS,
    I<1>:$JTAGBUSY,
    I<1>:$JTAGLOCKED,
    I<1>:$JTAGMODIFIED,
    I<5>:$MUXADDR,
    I<1>:$OT
  );
}

def SYSMONE4 : XilinxPrimitiveOp<"SYSMONE4", []> {
  let summary = "SYSMONE4 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CONVST,
    I<1>:$CONVSTCLK,
    I<8>:$DADDR,
    I<1>:$DCLK,
    I<1>:$DEN,
    I<16>:$DI,
    I<1>:$DWE,
    I<1>:$I2C_SCLK,
    I<1>:$I2C_SDA,
    I<1>:$RESET,
    I<16>:$VAUXN,
    I<16>:$VAUXP,
    I<1>:$VN,
    I<1>:$VP,

    // SYSMONE4 parameters follows
    APIntAttr<I<16>>:$COMMON_N_SOURCE,
    APIntAttr<I<16>>:$INIT_40,
    APIntAttr<I<16>>:$INIT_41,
    APIntAttr<I<16>>:$INIT_42,
    APIntAttr<I<16>>:$INIT_43,
    APIntAttr<I<16>>:$INIT_44,
    APIntAttr<I<16>>:$INIT_45,
    APIntAttr<I<16>>:$INIT_46,
    APIntAttr<I<16>>:$INIT_47,
    APIntAttr<I<16>>:$INIT_48,
    APIntAttr<I<16>>:$INIT_49,
    APIntAttr<I<16>>:$INIT_4A,
    APIntAttr<I<16>>:$INIT_4B,
    APIntAttr<I<16>>:$INIT_4C,
    APIntAttr<I<16>>:$INIT_4D,
    APIntAttr<I<16>>:$INIT_4E,
    APIntAttr<I<16>>:$INIT_4F,
    APIntAttr<I<16>>:$INIT_50,
    APIntAttr<I<16>>:$INIT_51,
    APIntAttr<I<16>>:$INIT_52,
    APIntAttr<I<16>>:$INIT_53,
    APIntAttr<I<16>>:$INIT_54,
    APIntAttr<I<16>>:$INIT_55,
    APIntAttr<I<16>>:$INIT_56,
    APIntAttr<I<16>>:$INIT_57,
    APIntAttr<I<16>>:$INIT_58,
    APIntAttr<I<16>>:$INIT_59,
    APIntAttr<I<16>>:$INIT_5A,
    APIntAttr<I<16>>:$INIT_5B,
    APIntAttr<I<16>>:$INIT_5C,
    APIntAttr<I<16>>:$INIT_5D,
    APIntAttr<I<16>>:$INIT_5E,
    APIntAttr<I<16>>:$INIT_5F,
    APIntAttr<I<16>>:$INIT_60,
    APIntAttr<I<16>>:$INIT_61,
    APIntAttr<I<16>>:$INIT_62,
    APIntAttr<I<16>>:$INIT_63,
    APIntAttr<I<16>>:$INIT_64,
    APIntAttr<I<16>>:$INIT_65,
    APIntAttr<I<16>>:$INIT_66,
    APIntAttr<I<16>>:$INIT_67,
    APIntAttr<I<16>>:$INIT_68,
    APIntAttr<I<16>>:$INIT_69,
    APIntAttr<I<16>>:$INIT_6A,
    APIntAttr<I<16>>:$INIT_6B,
    APIntAttr<I<16>>:$INIT_6C,
    APIntAttr<I<16>>:$INIT_6D,
    APIntAttr<I<16>>:$INIT_6E,
    APIntAttr<I<16>>:$INIT_6F,
    APIntAttr<I<16>>:$INIT_70,
    APIntAttr<I<16>>:$INIT_71,
    APIntAttr<I<16>>:$INIT_72,
    APIntAttr<I<16>>:$INIT_73,
    APIntAttr<I<16>>:$INIT_74,
    APIntAttr<I<16>>:$INIT_75,
    APIntAttr<I<16>>:$INIT_76,
    APIntAttr<I<16>>:$INIT_77,
    APIntAttr<I<16>>:$INIT_78,
    APIntAttr<I<16>>:$INIT_79,
    APIntAttr<I<16>>:$INIT_7A,
    APIntAttr<I<16>>:$INIT_7B,
    APIntAttr<I<16>>:$INIT_7C,
    APIntAttr<I<16>>:$INIT_7D,
    APIntAttr<I<16>>:$INIT_7E,
    APIntAttr<I<16>>:$INIT_7F,
    APIntAttr<I<1>>:$IS_CONVSTCLK_INVERTED,
    APIntAttr<I<1>>:$IS_DCLK_INVERTED,
    StrAttr:$SIM_DEVICE,
    StrAttr:$SIM_MONITOR_FILE,
    SI64Attr:$SYSMON_VUSER0_BANK,
    StrAttr:$SYSMON_VUSER0_MONITOR,
    SI64Attr:$SYSMON_VUSER1_BANK,
    StrAttr:$SYSMON_VUSER1_MONITOR,
    SI64Attr:$SYSMON_VUSER2_BANK,
    StrAttr:$SYSMON_VUSER2_MONITOR,
    SI64Attr:$SYSMON_VUSER3_BANK,
    StrAttr:$SYSMON_VUSER3_MONITOR
  );

  let results = (outs
    I<16>:$ADC_DATA,
    I<16>:$ALM,
    I<1>:$BUSY,
    I<6>:$CHANNEL,
    I<16>:$DO,
    I<1>:$DRDY,
    I<1>:$EOC,
    I<1>:$EOS,
    I<1>:$I2C_SCLK_TS,
    I<1>:$I2C_SDA_TS,
    I<1>:$JTAGBUSY,
    I<1>:$JTAGLOCKED,
    I<1>:$JTAGMODIFIED,
    I<5>:$MUXADDR,
    I<1>:$OT,
    I<1>:$SMBALERT_TS
  );
}

def TXuBITSLICE : XilinxPrimitiveOp<"TX_BITSLICE", []> {
  let summary = "TX_BITSLICE Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CE,
    I<1>:$CLK,
    I<9>:$CNTVALUEIN,
    I<8>:$D,
    I<1>:$EN_VTC,
    I<1>:$INC,
    I<1>:$LOAD,
    I<1>:$RST,
    I<1>:$RST_DLY,
    I<40>:$RX_BIT_CTRL_IN,
    I<1>:$T,
    I<1>:$TBYTE_IN,
    I<40>:$TX_BIT_CTRL_IN,

    // TX_BITSLICE parameters follows
    SI64Attr:$DATA_WIDTH,
    StrAttr:$DELAY_FORMAT,
    StrAttr:$DELAY_TYPE,
    SI64Attr:$DELAY_VALUE,
    StrAttr:$ENABLE_PRE_EMPHASIS,
    APIntAttr<I<1>>:$INIT,
    APIntAttr<I<1>>:$IS_CLK_INVERTED,
    APIntAttr<I<1>>:$IS_RST_DLY_INVERTED,
    APIntAttr<I<1>>:$IS_RST_INVERTED,
    StrAttr:$NATIVE_ODELAY_BYPASS,
    StrAttr:$OUTPUT_PHASE_90,
    StrAttr:$REFCLK_FREQUENCY,
    StrAttr:$SIM_DEVICE,
    StrAttr:$SIM_VERSION,
    StrAttr:$TBYTE_CTL,
    StrAttr:$UPDATE_MODE
  );

  let results = (outs
    I<9>:$CNTVALUEOUT,
    I<1>:$O,
    I<40>:$RX_BIT_CTRL_OUT,
    I<40>:$TX_BIT_CTRL_OUT,
    I<1>:$T_OUT
  );
}

def TXuBITSLICEuTRI : XilinxPrimitiveOp<"TX_BITSLICE_TRI", []> {
  let summary = "TX_BITSLICE_TRI Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<40>:$BIT_CTRL_IN,
    I<1>:$CE,
    I<1>:$CLK,
    I<9>:$CNTVALUEIN,
    I<1>:$EN_VTC,
    I<1>:$INC,
    I<1>:$LOAD,
    I<1>:$RST,
    I<1>:$RST_DLY,

    // TX_BITSLICE_TRI parameters follows
    SI64Attr:$DATA_WIDTH,
    StrAttr:$DELAY_FORMAT,
    StrAttr:$DELAY_TYPE,
    SI64Attr:$DELAY_VALUE,
    APIntAttr<I<1>>:$INIT,
    APIntAttr<I<1>>:$IS_CLK_INVERTED,
    APIntAttr<I<1>>:$IS_RST_DLY_INVERTED,
    APIntAttr<I<1>>:$IS_RST_INVERTED,
    StrAttr:$NATIVE_ODELAY_BYPASS,
    StrAttr:$OUTPUT_PHASE_90,
    StrAttr:$REFCLK_FREQUENCY,
    StrAttr:$SIM_DEVICE,
    StrAttr:$SIM_VERSION,
    StrAttr:$UPDATE_MODE
  );

  let results = (outs
    I<40>:$BIT_CTRL_OUT,
    I<9>:$CNTVALUEOUT,
    I<1>:$TRI_OUT
  );
}

def URAM288 : XilinxPrimitiveOp<"URAM288", []> {
  let summary = "URAM288 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<23>:$ADDR_A,
    I<23>:$ADDR_B,
    I<9>:$BWE_A,
    I<9>:$BWE_B,
    I<23>:$CAS_IN_ADDR_A,
    I<23>:$CAS_IN_ADDR_B,
    I<9>:$CAS_IN_BWE_A,
    I<9>:$CAS_IN_BWE_B,
    I<1>:$CAS_IN_DBITERR_A,
    I<1>:$CAS_IN_DBITERR_B,
    I<72>:$CAS_IN_DIN_A,
    I<72>:$CAS_IN_DIN_B,
    I<72>:$CAS_IN_DOUT_A,
    I<72>:$CAS_IN_DOUT_B,
    I<1>:$CAS_IN_EN_A,
    I<1>:$CAS_IN_EN_B,
    I<1>:$CAS_IN_RDACCESS_A,
    I<1>:$CAS_IN_RDACCESS_B,
    I<1>:$CAS_IN_RDB_WR_A,
    I<1>:$CAS_IN_RDB_WR_B,
    I<1>:$CAS_IN_SBITERR_A,
    I<1>:$CAS_IN_SBITERR_B,
    I<1>:$CLK,
    I<72>:$DIN_A,
    I<72>:$DIN_B,
    I<1>:$EN_A,
    I<1>:$EN_B,
    I<1>:$INJECT_DBITERR_A,
    I<1>:$INJECT_DBITERR_B,
    I<1>:$INJECT_SBITERR_A,
    I<1>:$INJECT_SBITERR_B,
    I<1>:$OREG_CE_A,
    I<1>:$OREG_CE_B,
    I<1>:$OREG_ECC_CE_A,
    I<1>:$OREG_ECC_CE_B,
    I<1>:$RDB_WR_A,
    I<1>:$RDB_WR_B,
    I<1>:$RST_A,
    I<1>:$RST_B,
    I<1>:$SLEEP,

    // URAM288 parameters follows
    SI64Attr:$AUTO_SLEEP_LATENCY,
    SI64Attr:$AVG_CONS_INACTIVE_CYCLES,
    StrAttr:$BWE_MODE_A,
    StrAttr:$BWE_MODE_B,
    StrAttr:$CASCADE_ORDER_A,
    StrAttr:$CASCADE_ORDER_B,
    StrAttr:$EN_AUTO_SLEEP_MODE,
    StrAttr:$EN_ECC_RD_A,
    StrAttr:$EN_ECC_RD_B,
    StrAttr:$EN_ECC_WR_A,
    StrAttr:$EN_ECC_WR_B,
    StrAttr:$IREG_PRE_A,
    StrAttr:$IREG_PRE_B,
    APIntAttr<I<1>>:$IS_CLK_INVERTED,
    APIntAttr<I<1>>:$IS_EN_A_INVERTED,
    APIntAttr<I<1>>:$IS_EN_B_INVERTED,
    APIntAttr<I<1>>:$IS_RDB_WR_A_INVERTED,
    APIntAttr<I<1>>:$IS_RDB_WR_B_INVERTED,
    APIntAttr<I<1>>:$IS_RST_A_INVERTED,
    APIntAttr<I<1>>:$IS_RST_B_INVERTED,
    StrAttr:$MATRIX_ID,
    SI64Attr:$NUM_UNIQUE_SELF_ADDR_A,
    SI64Attr:$NUM_UNIQUE_SELF_ADDR_B,
    SI64Attr:$NUM_URAM_IN_MATRIX,
    StrAttr:$OREG_A,
    StrAttr:$OREG_B,
    StrAttr:$OREG_ECC_A,
    StrAttr:$OREG_ECC_B,
    StrAttr:$REG_CAS_A,
    StrAttr:$REG_CAS_B,
    StrAttr:$RST_MODE_A,
    StrAttr:$RST_MODE_B,
    APIntAttr<I<11>>:$SELF_ADDR_A,
    APIntAttr<I<11>>:$SELF_ADDR_B,
    APIntAttr<I<11>>:$SELF_MASK_A,
    APIntAttr<I<11>>:$SELF_MASK_B,
    StrAttr:$USE_EXT_CE_A,
    StrAttr:$USE_EXT_CE_B
  );

  let results = (outs
    I<23>:$CAS_OUT_ADDR_A,
    I<23>:$CAS_OUT_ADDR_B,
    I<9>:$CAS_OUT_BWE_A,
    I<9>:$CAS_OUT_BWE_B,
    I<1>:$CAS_OUT_DBITERR_A,
    I<1>:$CAS_OUT_DBITERR_B,
    I<72>:$CAS_OUT_DIN_A,
    I<72>:$CAS_OUT_DIN_B,
    I<72>:$CAS_OUT_DOUT_A,
    I<72>:$CAS_OUT_DOUT_B,
    I<1>:$CAS_OUT_EN_A,
    I<1>:$CAS_OUT_EN_B,
    I<1>:$CAS_OUT_RDACCESS_A,
    I<1>:$CAS_OUT_RDACCESS_B,
    I<1>:$CAS_OUT_RDB_WR_A,
    I<1>:$CAS_OUT_RDB_WR_B,
    I<1>:$CAS_OUT_SBITERR_A,
    I<1>:$CAS_OUT_SBITERR_B,
    I<1>:$DBITERR_A,
    I<1>:$DBITERR_B,
    I<72>:$DOUT_A,
    I<72>:$DOUT_B,
    I<1>:$RDACCESS_A,
    I<1>:$RDACCESS_B,
    I<1>:$SBITERR_A,
    I<1>:$SBITERR_B
  );
}

def URAM288uBASE : XilinxPrimitiveOp<"URAM288_BASE", []> {
  let summary = "URAM288_BASE Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<23>:$ADDR_A,
    I<23>:$ADDR_B,
    I<9>:$BWE_A,
    I<9>:$BWE_B,
    I<1>:$CLK,
    I<72>:$DIN_A,
    I<72>:$DIN_B,
    I<1>:$EN_A,
    I<1>:$EN_B,
    I<1>:$INJECT_DBITERR_A,
    I<1>:$INJECT_DBITERR_B,
    I<1>:$INJECT_SBITERR_A,
    I<1>:$INJECT_SBITERR_B,
    I<1>:$OREG_CE_A,
    I<1>:$OREG_CE_B,
    I<1>:$OREG_ECC_CE_A,
    I<1>:$OREG_ECC_CE_B,
    I<1>:$RDB_WR_A,
    I<1>:$RDB_WR_B,
    I<1>:$RST_A,
    I<1>:$RST_B,
    I<1>:$SLEEP,

    // URAM288_BASE parameters follows
    SI64Attr:$AUTO_SLEEP_LATENCY,
    SI64Attr:$AVG_CONS_INACTIVE_CYCLES,
    StrAttr:$BWE_MODE_A,
    StrAttr:$BWE_MODE_B,
    StrAttr:$EN_AUTO_SLEEP_MODE,
    StrAttr:$EN_ECC_RD_A,
    StrAttr:$EN_ECC_RD_B,
    StrAttr:$EN_ECC_WR_A,
    StrAttr:$EN_ECC_WR_B,
    StrAttr:$IREG_PRE_A,
    StrAttr:$IREG_PRE_B,
    APIntAttr<I<1>>:$IS_CLK_INVERTED,
    APIntAttr<I<1>>:$IS_EN_A_INVERTED,
    APIntAttr<I<1>>:$IS_EN_B_INVERTED,
    APIntAttr<I<1>>:$IS_RDB_WR_A_INVERTED,
    APIntAttr<I<1>>:$IS_RDB_WR_B_INVERTED,
    APIntAttr<I<1>>:$IS_RST_A_INVERTED,
    APIntAttr<I<1>>:$IS_RST_B_INVERTED,
    StrAttr:$OREG_A,
    StrAttr:$OREG_B,
    StrAttr:$OREG_ECC_A,
    StrAttr:$OREG_ECC_B,
    StrAttr:$RST_MODE_A,
    StrAttr:$RST_MODE_B,
    StrAttr:$USE_EXT_CE_A,
    StrAttr:$USE_EXT_CE_B
  );

  let results = (outs
    I<1>:$DBITERR_A,
    I<1>:$DBITERR_B,
    I<72>:$DOUT_A,
    I<72>:$DOUT_B,
    I<1>:$SBITERR_A,
    I<1>:$SBITERR_B
  );
}

def USRuACCESSE2 : XilinxPrimitiveOp<"USR_ACCESSE2", []> {
  let summary = "USR_ACCESSE2 Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.

    // USR_ACCESSE2 parameters follows
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$CFGCLK,
    I<1>:$DATAVALID,
    I<32>:$DATA
  );
}

def VCC : XilinxPrimitiveOp<"VCC", []> {
  let summary = "VCC Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.

    // VCC parameters follows
    StrAttr:$LOC
  );

  let results = (outs
    I<1>:$P
  );
}

def VCU : XilinxPrimitiveOp<"VCU", []> {
  let summary = "VCU Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$INITPLVCUGASKETCLAMPCONTROLLVLSHVCCINTD,
    I<20>:$PLVCUARADDRAXILITEAPB,
    I<3>:$PLVCUARPROTAXILITEAPB,
    I<1>:$PLVCUARVALIDAXILITEAPB,
    I<20>:$PLVCUAWADDRAXILITEAPB,
    I<3>:$PLVCUAWPROTAXILITEAPB,
    I<1>:$PLVCUAWVALIDAXILITEAPB,
    I<1>:$PLVCUAXIDECCLK,
    I<1>:$PLVCUAXIENCCLK,
    I<1>:$PLVCUAXILITECLK,
    I<1>:$PLVCUAXIMCUCLK,
    I<1>:$PLVCUBREADYAXILITEAPB,
    I<1>:$PLVCUCORECLK,
    I<1>:$PLVCUDECARREADY0,
    I<1>:$PLVCUDECARREADY1,
    I<1>:$PLVCUDECAWREADY0,
    I<1>:$PLVCUDECAWREADY1,
    I<4>:$PLVCUDECBID0,
    I<4>:$PLVCUDECBID1,
    I<2>:$PLVCUDECBRESP0,
    I<2>:$PLVCUDECBRESP1,
    I<1>:$PLVCUDECBVALID0,
    I<1>:$PLVCUDECBVALID1,
    I<128>:$PLVCUDECRDATA0,
    I<128>:$PLVCUDECRDATA1,
    I<4>:$PLVCUDECRID0,
    I<4>:$PLVCUDECRID1,
    I<1>:$PLVCUDECRLAST0,
    I<1>:$PLVCUDECRLAST1,
    I<2>:$PLVCUDECRRESP0,
    I<2>:$PLVCUDECRRESP1,
    I<1>:$PLVCUDECRVALID0,
    I<1>:$PLVCUDECRVALID1,
    I<1>:$PLVCUDECWREADY0,
    I<1>:$PLVCUDECWREADY1,
    I<320>:$PLVCUENCALL2CRDATA,
    I<1>:$PLVCUENCALL2CRREADY,
    I<1>:$PLVCUENCARREADY0,
    I<1>:$PLVCUENCARREADY1,
    I<1>:$PLVCUENCAWREADY0,
    I<1>:$PLVCUENCAWREADY1,
    I<4>:$PLVCUENCBID0,
    I<4>:$PLVCUENCBID1,
    I<2>:$PLVCUENCBRESP0,
    I<2>:$PLVCUENCBRESP1,
    I<1>:$PLVCUENCBVALID0,
    I<1>:$PLVCUENCBVALID1,
    I<1>:$PLVCUENCL2CCLK,
    I<128>:$PLVCUENCRDATA0,
    I<128>:$PLVCUENCRDATA1,
    I<4>:$PLVCUENCRID0,
    I<4>:$PLVCUENCRID1,
    I<1>:$PLVCUENCRLAST0,
    I<1>:$PLVCUENCRLAST1,
    I<2>:$PLVCUENCRRESP0,
    I<2>:$PLVCUENCRRESP1,
    I<1>:$PLVCUENCRVALID0,
    I<1>:$PLVCUENCRVALID1,
    I<1>:$PLVCUENCWREADY0,
    I<1>:$PLVCUENCWREADY1,
    I<1>:$PLVCUMCUCLK,
    I<1>:$PLVCUMCUMAXIICDCARREADY,
    I<1>:$PLVCUMCUMAXIICDCAWREADY,
    I<3>:$PLVCUMCUMAXIICDCBID,
    I<2>:$PLVCUMCUMAXIICDCBRESP,
    I<1>:$PLVCUMCUMAXIICDCBVALID,
    I<32>:$PLVCUMCUMAXIICDCRDATA,
    I<3>:$PLVCUMCUMAXIICDCRID,
    I<1>:$PLVCUMCUMAXIICDCRLAST,
    I<2>:$PLVCUMCUMAXIICDCRRESP,
    I<1>:$PLVCUMCUMAXIICDCRVALID,
    I<1>:$PLVCUMCUMAXIICDCWREADY,
    I<1>:$PLVCUPLLREFCLKPL,
    I<1>:$PLVCURAWRSTN,
    I<1>:$PLVCURREADYAXILITEAPB,
    I<32>:$PLVCUWDATAAXILITEAPB,
    I<4>:$PLVCUWSTRBAXILITEAPB,
    I<1>:$PLVCUWVALIDAXILITEAPB,

    // VCU parameters follows
    SI64Attr:$CORECLKREQ,
    SI64Attr:$DECHORRESOLUTION,
    StrAttr:$DECODERCHROMAFORMAT,
    StrAttr:$DECODERCODING,
    SI64Attr:$DECODERCOLORDEPTH,
    SI64Attr:$DECODERNUMCORES,
    SI64Attr:$DECVERTRESOLUTION,
    StrAttr:$ENABLEDECODER,
    StrAttr:$ENABLEENCODER,
    SI64Attr:$ENCHORRESOLUTION,
    StrAttr:$ENCODERCHROMAFORMAT,
    StrAttr:$ENCODERCODING,
    SI64Attr:$ENCODERCOLORDEPTH,
    SI64Attr:$ENCODERNUMCORES,
    SI64Attr:$ENCVERTRESOLUTION
  );

  let results = (outs
    I<1>:$VCUPLARREADYAXILITEAPB,
    I<1>:$VCUPLAWREADYAXILITEAPB,
    I<2>:$VCUPLBRESPAXILITEAPB,
    I<1>:$VCUPLBVALIDAXILITEAPB,
    I<1>:$VCUPLCORESTATUSCLKPLL,
    I<44>:$VCUPLDECARADDR0,
    I<44>:$VCUPLDECARADDR1,
    I<2>:$VCUPLDECARBURST0,
    I<2>:$VCUPLDECARBURST1,
    I<4>:$VCUPLDECARCACHE0,
    I<4>:$VCUPLDECARCACHE1,
    I<4>:$VCUPLDECARID0,
    I<4>:$VCUPLDECARID1,
    I<8>:$VCUPLDECARLEN0,
    I<8>:$VCUPLDECARLEN1,
    I<1>:$VCUPLDECARPROT0,
    I<1>:$VCUPLDECARPROT1,
    I<4>:$VCUPLDECARQOS0,
    I<4>:$VCUPLDECARQOS1,
    I<3>:$VCUPLDECARSIZE0,
    I<3>:$VCUPLDECARSIZE1,
    I<1>:$VCUPLDECARVALID0,
    I<1>:$VCUPLDECARVALID1,
    I<44>:$VCUPLDECAWADDR0,
    I<44>:$VCUPLDECAWADDR1,
    I<2>:$VCUPLDECAWBURST0,
    I<2>:$VCUPLDECAWBURST1,
    I<4>:$VCUPLDECAWCACHE0,
    I<4>:$VCUPLDECAWCACHE1,
    I<4>:$VCUPLDECAWID0,
    I<4>:$VCUPLDECAWID1,
    I<8>:$VCUPLDECAWLEN0,
    I<8>:$VCUPLDECAWLEN1,
    I<1>:$VCUPLDECAWPROT0,
    I<1>:$VCUPLDECAWPROT1,
    I<4>:$VCUPLDECAWQOS0,
    I<4>:$VCUPLDECAWQOS1,
    I<3>:$VCUPLDECAWSIZE0,
    I<3>:$VCUPLDECAWSIZE1,
    I<1>:$VCUPLDECAWVALID0,
    I<1>:$VCUPLDECAWVALID1,
    I<1>:$VCUPLDECBREADY0,
    I<1>:$VCUPLDECBREADY1,
    I<1>:$VCUPLDECRREADY0,
    I<1>:$VCUPLDECRREADY1,
    I<128>:$VCUPLDECWDATA0,
    I<128>:$VCUPLDECWDATA1,
    I<1>:$VCUPLDECWLAST0,
    I<1>:$VCUPLDECWLAST1,
    I<1>:$VCUPLDECWVALID0,
    I<1>:$VCUPLDECWVALID1,
    I<17>:$VCUPLENCALL2CADDR,
    I<1>:$VCUPLENCALL2CRVALID,
    I<320>:$VCUPLENCALL2CWDATA,
    I<1>:$VCUPLENCALL2CWVALID,
    I<44>:$VCUPLENCARADDR0,
    I<44>:$VCUPLENCARADDR1,
    I<2>:$VCUPLENCARBURST0,
    I<2>:$VCUPLENCARBURST1,
    I<4>:$VCUPLENCARCACHE0,
    I<4>:$VCUPLENCARCACHE1,
    I<4>:$VCUPLENCARID0,
    I<4>:$VCUPLENCARID1,
    I<8>:$VCUPLENCARLEN0,
    I<8>:$VCUPLENCARLEN1,
    I<1>:$VCUPLENCARPROT0,
    I<1>:$VCUPLENCARPROT1,
    I<4>:$VCUPLENCARQOS0,
    I<4>:$VCUPLENCARQOS1,
    I<3>:$VCUPLENCARSIZE0,
    I<3>:$VCUPLENCARSIZE1,
    I<1>:$VCUPLENCARVALID0,
    I<1>:$VCUPLENCARVALID1,
    I<44>:$VCUPLENCAWADDR0,
    I<44>:$VCUPLENCAWADDR1,
    I<2>:$VCUPLENCAWBURST0,
    I<2>:$VCUPLENCAWBURST1,
    I<4>:$VCUPLENCAWCACHE0,
    I<4>:$VCUPLENCAWCACHE1,
    I<4>:$VCUPLENCAWID0,
    I<4>:$VCUPLENCAWID1,
    I<8>:$VCUPLENCAWLEN0,
    I<8>:$VCUPLENCAWLEN1,
    I<1>:$VCUPLENCAWPROT0,
    I<1>:$VCUPLENCAWPROT1,
    I<4>:$VCUPLENCAWQOS0,
    I<4>:$VCUPLENCAWQOS1,
    I<3>:$VCUPLENCAWSIZE0,
    I<3>:$VCUPLENCAWSIZE1,
    I<1>:$VCUPLENCAWVALID0,
    I<1>:$VCUPLENCAWVALID1,
    I<1>:$VCUPLENCBREADY0,
    I<1>:$VCUPLENCBREADY1,
    I<1>:$VCUPLENCRREADY0,
    I<1>:$VCUPLENCRREADY1,
    I<128>:$VCUPLENCWDATA0,
    I<128>:$VCUPLENCWDATA1,
    I<1>:$VCUPLENCWLAST0,
    I<1>:$VCUPLENCWLAST1,
    I<1>:$VCUPLENCWVALID0,
    I<1>:$VCUPLENCWVALID1,
    I<44>:$VCUPLMCUMAXIICDCARADDR,
    I<2>:$VCUPLMCUMAXIICDCARBURST,
    I<4>:$VCUPLMCUMAXIICDCARCACHE,
    I<3>:$VCUPLMCUMAXIICDCARID,
    I<8>:$VCUPLMCUMAXIICDCARLEN,
    I<1>:$VCUPLMCUMAXIICDCARLOCK,
    I<3>:$VCUPLMCUMAXIICDCARPROT,
    I<4>:$VCUPLMCUMAXIICDCARQOS,
    I<3>:$VCUPLMCUMAXIICDCARSIZE,
    I<1>:$VCUPLMCUMAXIICDCARVALID,
    I<44>:$VCUPLMCUMAXIICDCAWADDR,
    I<2>:$VCUPLMCUMAXIICDCAWBURST,
    I<4>:$VCUPLMCUMAXIICDCAWCACHE,
    I<3>:$VCUPLMCUMAXIICDCAWID,
    I<8>:$VCUPLMCUMAXIICDCAWLEN,
    I<1>:$VCUPLMCUMAXIICDCAWLOCK,
    I<3>:$VCUPLMCUMAXIICDCAWPROT,
    I<4>:$VCUPLMCUMAXIICDCAWQOS,
    I<3>:$VCUPLMCUMAXIICDCAWSIZE,
    I<1>:$VCUPLMCUMAXIICDCAWVALID,
    I<1>:$VCUPLMCUMAXIICDCBREADY,
    I<1>:$VCUPLMCUMAXIICDCRREADY,
    I<32>:$VCUPLMCUMAXIICDCWDATA,
    I<1>:$VCUPLMCUMAXIICDCWLAST,
    I<4>:$VCUPLMCUMAXIICDCWSTRB,
    I<1>:$VCUPLMCUMAXIICDCWVALID,
    I<1>:$VCUPLMCUSTATUSCLKPLL,
    I<1>:$VCUPLPINTREQ,
    I<1>:$VCUPLPLLSTATUSPLLLOCK,
    I<1>:$VCUPLPWRSUPPLYSTATUSVCCAUX,
    I<1>:$VCUPLPWRSUPPLYSTATUSVCUINT,
    I<32>:$VCUPLRDATAAXILITEAPB,
    I<2>:$VCUPLRRESPAXILITEAPB,
    I<1>:$VCUPLRVALIDAXILITEAPB,
    I<1>:$VCUPLWREADYAXILITEAPB
  );
}

def XADC : XilinxPrimitiveOp<"XADC", []> {
  let summary = "XADC Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CONVST,
    I<1>:$CONVSTCLK,
    I<1>:$DCLK,
    I<1>:$DEN,
    I<1>:$DWE,
    I<1>:$RESET,
    I<1>:$VN,
    I<1>:$VP,
    I<16>:$DI,
    I<16>:$VAUXN,
    I<16>:$VAUXP,
    I<7>:$DADDR,

    // XADC parameters follows
    APIntAttr<I<16>>:$INIT_40,
    APIntAttr<I<16>>:$INIT_41,
    APIntAttr<I<16>>:$INIT_42,
    APIntAttr<I<16>>:$INIT_43,
    APIntAttr<I<16>>:$INIT_44,
    APIntAttr<I<16>>:$INIT_45,
    APIntAttr<I<16>>:$INIT_46,
    APIntAttr<I<16>>:$INIT_47,
    APIntAttr<I<16>>:$INIT_48,
    APIntAttr<I<16>>:$INIT_49,
    APIntAttr<I<16>>:$INIT_4A,
    APIntAttr<I<16>>:$INIT_4B,
    APIntAttr<I<16>>:$INIT_4C,
    APIntAttr<I<16>>:$INIT_4D,
    APIntAttr<I<16>>:$INIT_4E,
    APIntAttr<I<16>>:$INIT_4F,
    APIntAttr<I<16>>:$INIT_50,
    APIntAttr<I<16>>:$INIT_51,
    APIntAttr<I<16>>:$INIT_52,
    APIntAttr<I<16>>:$INIT_53,
    APIntAttr<I<16>>:$INIT_54,
    APIntAttr<I<16>>:$INIT_55,
    APIntAttr<I<16>>:$INIT_56,
    APIntAttr<I<16>>:$INIT_57,
    APIntAttr<I<16>>:$INIT_58,
    APIntAttr<I<16>>:$INIT_59,
    APIntAttr<I<16>>:$INIT_5A,
    APIntAttr<I<16>>:$INIT_5B,
    APIntAttr<I<16>>:$INIT_5C,
    APIntAttr<I<16>>:$INIT_5D,
    APIntAttr<I<16>>:$INIT_5E,
    APIntAttr<I<16>>:$INIT_5F,
    APIntAttr<I<1>>:$IS_CONVSTCLK_INVERTED,
    APIntAttr<I<1>>:$IS_DCLK_INVERTED,
    StrAttr:$SIM_DEVICE,
    StrAttr:$SIM_MONITOR_FILE
  );

  let results = (outs
    I<1>:$BUSY,
    I<1>:$DRDY,
    I<1>:$EOC,
    I<1>:$EOS,
    I<1>:$JTAGBUSY,
    I<1>:$JTAGLOCKED,
    I<1>:$JTAGMODIFIED,
    I<1>:$OT,
    I<16>:$DO,
    I<8>:$ALM,
    I<5>:$CHANNEL,
    I<5>:$MUXADDR
  );
}

def XORCY : XilinxPrimitiveOp<"XORCY", []> {
  let summary = "XORCY Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$CI,
    I<1>:$LI

    // XORCY does not contain any parameters
  );

  let results = (outs
    I<1>:$O
  );
}

def ZHOLDuDELAY : XilinxPrimitiveOp<"ZHOLD_DELAY", []> {
  let summary = "ZHOLD_DELAY Xilinx Primitive.";

  let arguments = (ins
    // [input] and [inout] ports follows.
    I<1>:$DLYIN,

    // ZHOLD_DELAY parameters follows
    APIntAttr<I<1>>:$IS_DLYIN_INVERTED,
    StrAttr:$ZHOLD_FABRIC,
    StrAttr:$ZHOLD_IFF
  );

  let results = (outs
    I<1>:$DLYFABRIC,
    I<1>:$DLYIFF
  );
}

